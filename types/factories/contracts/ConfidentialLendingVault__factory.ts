/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../common";
import type {
  ConfidentialLendingVault,
  ConfidentialLendingVaultInterface,
} from "../../contracts/ConfidentialLendingVault";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_asset",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "OwnableInvalidOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "OwnableUnauthorizedAccount",
    type: "error",
  },
  {
    inputs: [],
    name: "ReentrancyGuardReentrantCall",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "ConfidentialSupply",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "ConfidentialWithdraw",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [],
    name: "asset",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getAuthorizedUserCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "getEncryptedShares",
    outputs: [
      {
        internalType: "euint64",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getEncryptedTotalAssets",
    outputs: [
      {
        internalType: "euint64",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getEncryptedTotalShares",
    outputs: [
      {
        internalType: "euint64",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "isUserAuthorized",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "euint64",
        name: "amount",
        type: "bytes32",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "onConfidentialTransferReceived",
    outputs: [
      {
        internalType: "ebool",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "protocolId",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "externalEuint64",
        name: "encryptedAmount",
        type: "bytes32",
      },
      {
        internalType: "bytes",
        name: "inputProof",
        type: "bytes",
      },
    ],
    name: "supply",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "externalEuint64",
        name: "encryptedAmount",
        type: "bytes32",
      },
      {
        internalType: "bytes",
        name: "inputProof",
        type: "bytes",
      },
    ],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60a060405234801561000f575f5ffd5b5060405161183c38038061183c83398101604081905261002e91610380565b338061005357604051631e4fbdf760e01b81525f600482015260240160405180910390fd5b61005c816101fa565b50600180556101b56100ff604080516080810182525f808252602082018190529181018290526060810191909152506040805160808101825273687820221192c5b662b25367f70076a37bc79b6c815273848b0066793bcc60346da1f49049357399b8d595602082015273a02cda4ca3a71d7c46997716f4283aa851c2881291810191909152731364cbbf2cdf5032c47d8226a6f6fbd2afcdacac606082015290565b80515f51602061181c5f395f51905f5280546001600160a01b03199081166001600160a01b039384161790915560208301515f5160206117fc5f395f51905f528054831691841691909117905560408301517f9e7b61f58c47dc699ac88507c4f5bb9f121c03808c5676a8078fe583e46497028054831691841691909117905560608301517f9e7b61f58c47dc699ac88507c4f5bb9f121c03808c5676a8078fe583e46497038054909216921691909117905550565b6001600160a01b0381166080526101cb5f610249565b6003556101d75f610249565b6004556003546101e690610264565b506004546101f390610264565b50506103f4565b5f80546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b5f61025e6001600160401b0383166005610273565b92915050565b5f61026f823061030a565b5090565b5f5160206117fc5f395f51905f5254604051639cd07acb60e01b81525f915f51602061181c5f395f51905f52916001600160a01b0390911690639cd07acb906102c290879087906004016103ad565b6020604051808303815f875af11580156102de573d5f5f3e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061030291906103dd565b949350505050565b5f5f51602061181c5f395f51905f528054604051635ca4b5b160e11b8152600481018690526001600160a01b03858116602483015292935091169063b9496b62906044015f604051808303815f87803b158015610365575f5ffd5b505af1158015610377573d5f5f3e3d5ffd5b50505050505050565b5f60208284031215610390575f5ffd5b81516001600160a01b03811681146103a6575f5ffd5b9392505050565b82815260408101605483106103d057634e487b7160e01b5f52602160045260245ffd5b8260208301529392505050565b5f602082840312156103ed575f5ffd5b5051919050565b6080516113cd61042f5f395f818161012201528181610221015281816105450152818161058d015281816106f7015261074001526113cd5ff3fe608060405234801561000f575f5ffd5b50600436106100da575f3560e01c8063894e5f2d1161008857806396b8ad8b1161006357806396b8ad8b146101ea578063da1f12ab146101f2578063f2fde38b146101fa578063f54e26ff1461020d575f5ffd5b8063894e5f2d1461018c5780638da5cb5b146101c7578063946835c5146101d7575f5ffd5b806346083bfd116100b857806346083bfd1461015c5780634a2e35ba1461016f578063715018a614610184575f5ffd5b80632507ea6f146100de578063306a821f146100f557806338d52e0f1461011d575b5f5ffd5b6004545b6040519081526020015b60405180910390f35b6100e2610103366004611197565b6001600160a01b03165f9081526002602052604090205490565b6101447f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b0390911681526020016100ec565b6100e261016a3660046111f5565b610215565b61018261017d36600461125f565b6103ea565b005b610182610647565b6101b761019a366004611197565b6001600160a01b03165f9081526005602052604090205460ff1690565b60405190151581526020016100ec565b5f546001600160a01b0316610144565b6101826101e536600461125f565b61065a565b6006546100e2565b6127116100e2565b610182610208366004611197565b6108c6565b6003546100e2565b5f336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146102b95760405162461bcd60e51b815260206004820152603660248201527f436f6e666964656e7469616c4c656e64696e675661756c743a204f6e6c79206360448201527f57455448207472616e736665727320616c6c6f7765640000000000000000000060648201526084015b60405180910390fd5b6001600160a01b0385165f9081526002602052604090205484908190806102e6576102e35f610903565b90505b5f6102f1828461091f565b90505f6102fe8284610954565b90505f61030d6003548661091f565b90505f61031c82600354610954565b90505f61032a848787610982565b6001600160a01b038e165f90815260026020526040902081905560035490915061035690839085610982565b6003556004545f90610368908a61091f565b90506103778360045483610982565b60045561038382610996565b5061038e828f6109a5565b506103988e6109b7565b6040516001600160a01b038f16907f57eafa6244c2ffa01bc84d88d86ded072b0a3ffb75b4c4e513347ab1acdd1f30905f90a26103d56001610ad7565b99505050505050505050505b95945050505050565b6103f2610af2565b8061043f5760405162461bcd60e51b815260206004820152601360248201527f496e76616c696420696e7075742070726f6f660000000000000000000000000060448201526064016102b0565b5f61047f8484848080601f0160208091040260200160405190810160405280939291908181526020018383808284375f92019190915250610b1c92505050565b335f9081526002602052604081205491925061049b8284610b29565b90505f6104a88484610b57565b90505f6104b6828585610982565b335f908152600260205260408120829055600354919250906104d89087610b29565b90505f6104e760045488610b29565b90506104f68460035484610982565b60035560045461050890859083610982565b6004555f61051f8561051983610903565b8a610982565b905061052a84610996565b5061053584336109a5565b5061053f336109b7565b610569817f0000000000000000000000000000000000000000000000000000000000000000610b85565b50604080516020810182525f815290516363dc53af60e11b81526001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169163c7b8a75e916105c6913091339187916004016112d5565b6020604051808303815f875af11580156105e2573d5f5f3e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610606919061130b565b5060405133907fb454a0267b009faf7f356e9e3c2433e8db8e51a28c679b6c8ece90c34eea8fa2905f90a2505050505050505061064260018055565b505050565b61064f610b90565b6106585f610bbc565b565b610662610af2565b806106af5760405162461bcd60e51b815260206004820152601360248201527f496e76616c696420696e7075742070726f6f660000000000000000000000000060448201526064016102b0565b5f6106ef8484848080601f0160208091040260200160405190810160405280939291908181526020018383808284375f92019190915250610b1c92505050565b905061071b817f0000000000000000000000000000000000000000000000000000000000000000610b85565b5060405163eb3155b560e01b8152336004820152306024820152604481018290525f907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03169063eb3155b5906064016020604051808303815f875af115801561078e573d5f5f3e3d5ffd5b505050506040513d601f19601f820116820180604052508101906107b2919061130b565b90506107bd81610996565b50335f908152600260205260409020548190806107e0576107dd5f610903565b90505b5f6107eb828461091f565b90505f6107f88284610954565b90505f6108076003548661091f565b90505f61081682600354610954565b90505f610824848787610982565b335f90815260026020526040902081905560035490915061084790839085610982565b6003556004545f90610859908a61091f565b90506108688360045483610982565b60045561087482610996565b5061087f82336109a5565b50610889336109b7565b60405133907f57eafa6244c2ffa01bc84d88d86ded072b0a3ffb75b4c4e513347ab1acdd1f30905f90a25050505050505050505061064260018055565b6108ce610b90565b6001600160a01b0381166108f757604051631e4fbdf760e01b81525f60048201526024016102b0565b61090081610bbc565b50565b5f6109198267ffffffffffffffff166005610c18565b92915050565b5f826109315761092e5f610903565b92505b816109425761093f5f610903565b91505b61094d83835f610cba565b9392505050565b5f82610966576109635f610903565b92505b81610977576109745f610903565b91505b61094d83835f610d8a565b5f61098e848484610e14565b949350505050565b5f6109a18230610ea1565b5090565b5f6109b08383610ea1565b5090919050565b6001600160a01b0381165f9081526005602052604090205460ff16610a48576001600160a01b0381165f818152600560205260408120805460ff191660019081179091556006805491820181559091527ff652222313e28459528d920b65115c16c04f3efc82aaedc97be59f3f377c0d3f01805473ffffffffffffffffffffffffffffffffffffffff191690911790555b5f5b600654811015610abb575f60068281548110610a6857610a68611322565b5f9182526020808320909101546001600160a01b0316808352600590915260409091205490915060ff1615610ab257610aa3600354826109a5565b50610ab0600454826109a5565b505b50600101610a4a565b50610ac7600354610996565b50610ad3600454610996565b5050565b5f61091982610ae6575f610ae9565b60015b60ff165f610c18565b600260015403610b1557604051633ee5aeb560e01b815260040160405180910390fd5b6002600155565b5f61094d83836005610f15565b5f82610b3b57610b385f610903565b92505b81610b4c57610b495f610903565b91505b61094d83835f611022565b5f82610b6957610b665f610903565b92505b81610b7a57610b775f610903565b91505b61094d83835f6110ac565b5f6109b08383611136565b5f546001600160a01b031633146106585760405163118cdaa760e01b81523360048201526024016102b0565b5f80546001600160a01b0383811673ffffffffffffffffffffffffffffffffffffffff19831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b7f9e7b61f58c47dc699ac88507c4f5bb9f121c03808c5676a8078fe583e464970154604051639cd07acb60e01b81525f915f5160206113a15f395f51905f52916001600160a01b0390911690639cd07acb90610c7a9087908790600401611356565b6020604051808303815f875af1158015610c96573d5f5f3e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061098e919061130b565b5f5f8215610ccd5750600160f81b610cd0565b505f5b7f9e7b61f58c47dc699ac88507c4f5bb9f121c03808c5676a8078fe583e46497015460405163022f65e760e31b815260048101879052602481018690526001600160f81b0319831660448201525f5160206113a15f395f51905f52916001600160a01b03169063117b2f38906064015b6020604051808303815f875af1158015610d5c573d5f5f3e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610d80919061130b565b9695505050505050565b5f5f8215610d9d5750600160f81b610da0565b505f5b7f9e7b61f58c47dc699ac88507c4f5bb9f121c03808c5676a8078fe583e464970154604051637210768160e01b815260048101879052602481018690526001600160f81b0319831660448201525f5160206113a15f395f51905f52916001600160a01b031690637210768190606401610d40565b5f805f5160206113a15f395f51905f526001810154604051637702dcff60e01b81526004810188905260248101879052604481018690529192506001600160a01b031690637702dcff906064016020604051808303815f875af1158015610e7d573d5f5f3e3d5ffd5b505050506040513d601f19601f820116820180604052508101906103e1919061130b565b5f5160206113a15f395f51905f528054604051635ca4b5b160e11b8152600481018590526001600160a01b0384811660248301529091169063b9496b62906044015b5f604051808303815f87803b158015610efa575f5ffd5b505af1158015610f0c573d5f5f3e3d5ffd5b50505050505050565b7f9e7b61f58c47dc699ac88507c4f5bb9f121c03808c5676a8078fe583e46497015460405163196d0b9b60e01b81525f915f5160206113a15f395f51905f52916001600160a01b039091169063196d0b9b90610f7b90889033908990899060040161136a565b6020604051808303815f875af1158015610f97573d5f5f3e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610fbb919061130b565b8154604051630f8e573b60e21b8152600481018390523360248201529193506001600160a01b031690633e395cec906044015f604051808303815f87803b158015611004575f5ffd5b505af1158015611016573d5f5f3e3d5ffd5b50505050509392505050565b5f5f82156110355750600160f81b611038565b505f5b7f9e7b61f58c47dc699ac88507c4f5bb9f121c03808c5676a8078fe583e4649701546040516303056db360e31b815260048101879052602481018690526001600160f81b0319831660448201525f5160206113a15f395f51905f52916001600160a01b03169063182b6d9890606401610d40565b5f5f82156110bf5750600160f81b6110c2565b505f5b7f9e7b61f58c47dc699ac88507c4f5bb9f121c03808c5676a8078fe583e4649701546040516385362ee760e01b815260048101879052602481018690526001600160f81b0319831660448201525f5160206113a15f395f51905f52916001600160a01b0316906385362ee790606401610d40565b5f5160206113a15f395f51905f528054604051630f8e573b60e21b8152600481018590526001600160a01b03848116602483015290911690633e395cec90604401610ee3565b80356001600160a01b0381168114611192575f5ffd5b919050565b5f602082840312156111a7575f5ffd5b61094d8261117c565b5f5f83601f8401126111c0575f5ffd5b50813567ffffffffffffffff8111156111d7575f5ffd5b6020830191508360208285010111156111ee575f5ffd5b9250929050565b5f5f5f5f5f60808688031215611209575f5ffd5b6112128661117c565b94506112206020870161117c565b935060408601359250606086013567ffffffffffffffff811115611242575f5ffd5b61124e888289016111b0565b969995985093965092949392505050565b5f5f5f60408486031215611271575f5ffd5b83359250602084013567ffffffffffffffff81111561128e575f5ffd5b61129a868287016111b0565b9497909650939450505050565b5f81518084528060208401602086015e5f602082860101526020601f19601f83011685010191505092915050565b6001600160a01b03851681526001600160a01b0384166020820152826040820152608060608201525f610d8060808301846112a7565b5f6020828403121561131b575f5ffd5b5051919050565b634e487b7160e01b5f52603260045260245ffd5b6054811061135257634e487b7160e01b5f52602160045260245ffd5b9052565b8281526040810161094d6020830184611336565b8481526001600160a01b0384166020820152608060408201525f61139160808301856112a7565b90506103e1606083018461133656fe9e7b61f58c47dc699ac88507c4f5bb9f121c03808c5676a8078fe583e4649700a164736f6c634300081b000a9e7b61f58c47dc699ac88507c4f5bb9f121c03808c5676a8078fe583e46497019e7b61f58c47dc699ac88507c4f5bb9f121c03808c5676a8078fe583e4649700";

type ConfidentialLendingVaultConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ConfidentialLendingVaultConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ConfidentialLendingVault__factory extends ContractFactory {
  constructor(...args: ConfidentialLendingVaultConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    _asset: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(_asset, overrides || {});
  }
  override deploy(
    _asset: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(_asset, overrides || {}) as Promise<
      ConfidentialLendingVault & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(
    runner: ContractRunner | null
  ): ConfidentialLendingVault__factory {
    return super.connect(runner) as ConfidentialLendingVault__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ConfidentialLendingVaultInterface {
    return new Interface(_abi) as ConfidentialLendingVaultInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): ConfidentialLendingVault {
    return new Contract(
      address,
      _abi,
      runner
    ) as unknown as ConfidentialLendingVault;
  }
}
