/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../common";
import type {
  ConfidentialLendingVault,
  ConfidentialLendingVaultInterface,
} from "../../contracts/ConfidentialLendingVault";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_asset",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "OwnableInvalidOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "OwnableUnauthorizedAccount",
    type: "error",
  },
  {
    inputs: [],
    name: "ReentrancyGuardReentrantCall",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "ConfidentialSupply",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "ConfidentialWithdraw",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [],
    name: "asset",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getAuthorizedUserCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "getEncryptedShares",
    outputs: [
      {
        internalType: "euint64",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getEncryptedTotalAssets",
    outputs: [
      {
        internalType: "euint64",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getEncryptedTotalShares",
    outputs: [
      {
        internalType: "euint64",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "isUserAuthorized",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "euint64",
        name: "amount",
        type: "bytes32",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "onConfidentialTransferReceived",
    outputs: [
      {
        internalType: "ebool",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "protocolId",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "externalEuint64",
        name: "encryptedAmount",
        type: "bytes32",
      },
      {
        internalType: "bytes",
        name: "inputProof",
        type: "bytes",
      },
    ],
    name: "supply",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "externalEuint64",
        name: "encryptedAmount",
        type: "bytes32",
      },
      {
        internalType: "bytes",
        name: "inputProof",
        type: "bytes",
      },
    ],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60a060405234801561000f575f5ffd5b506040516115d33803806115d383398101604081905261002e91610380565b338061005357604051631e4fbdf760e01b81525f600482015260240160405180910390fd5b61005c816101fa565b50600180556101b56100ff604080516080810182525f808252602082018190529181018290526060810191909152506040805160808101825273687820221192c5b662b25367f70076a37bc79b6c815273848b0066793bcc60346da1f49049357399b8d595602082015273a02cda4ca3a71d7c46997716f4283aa851c2881291810191909152731364cbbf2cdf5032c47d8226a6f6fbd2afcdacac606082015290565b80515f5160206115b35f395f51905f5280546001600160a01b03199081166001600160a01b039384161790915560208301515f5160206115935f395f51905f528054831691841691909117905560408301517f9e7b61f58c47dc699ac88507c4f5bb9f121c03808c5676a8078fe583e46497028054831691841691909117905560608301517f9e7b61f58c47dc699ac88507c4f5bb9f121c03808c5676a8078fe583e46497038054909216921691909117905550565b6001600160a01b0381166080526101cb5f610249565b6003556101d75f610249565b6004556003546101e690610264565b506004546101f390610264565b50506103f4565b5f80546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b5f61025e6001600160401b0383166005610273565b92915050565b5f61026f823061030a565b5090565b5f5160206115935f395f51905f5254604051639cd07acb60e01b81525f915f5160206115b35f395f51905f52916001600160a01b0390911690639cd07acb906102c290879087906004016103ad565b6020604051808303815f875af11580156102de573d5f5f3e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061030291906103dd565b949350505050565b5f5f5160206115b35f395f51905f528054604051635ca4b5b160e11b8152600481018690526001600160a01b03858116602483015292935091169063b9496b62906044015f604051808303815f87803b158015610365575f5ffd5b505af1158015610377573d5f5f3e3d5ffd5b50505050505050565b5f60208284031215610390575f5ffd5b81516001600160a01b03811681146103a6575f5ffd5b9392505050565b82815260408101605483106103d057634e487b7160e01b5f52602160045260245ffd5b8260208301529392505050565b5f602082840312156103ed575f5ffd5b5051919050565b60805161116461042f5f395f818161012201528181610221015281816104ba015281816105020152818161066601526106af01526111645ff3fe608060405234801561000f575f5ffd5b50600436106100da575f3560e01c8063894e5f2d1161008857806396b8ad8b1161006357806396b8ad8b146101ea578063da1f12ab146101f2578063f2fde38b146101fa578063f54e26ff1461020d575f5ffd5b8063894e5f2d1461018c5780638da5cb5b146101c7578063946835c5146101d7575f5ffd5b806346083bfd116100b857806346083bfd1461015c5780634a2e35ba1461016f578063715018a614610184575f5ffd5b80632507ea6f146100de578063306a821f146100f557806338d52e0f1461011d575b5f5ffd5b6004545b6040519081526020015b60405180910390f35b6100e2610103366004610f4e565b6001600160a01b03165f9081526002602052604090205490565b6101447f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b0390911681526020016100ec565b6100e261016a366004610fac565b610215565b61018261017d366004611016565b610399565b005b6101826105b6565b6101b761019a366004610f4e565b6001600160a01b03165f9081526005602052604090205460ff1690565b60405190151581526020016100ec565b5f546001600160a01b0316610144565b6101826101e5366004611016565b6105c9565b6006546100e2565b6127116100e2565b610182610208366004610f4e565b6107e4565b6003546100e2565b5f336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146102b95760405162461bcd60e51b815260206004820152603660248201527f436f6e666964656e7469616c4c656e64696e675661756c743a204f6e6c79206360448201527f57455448207472616e736665727320616c6c6f7765640000000000000000000060648201526084015b60405180910390fd5b6001600160a01b0385165f9081526002602052604090205484908190806102e6576102e35f610821565b90505b5f6102f1828461083d565b6001600160a01b038a165f90815260026020526040902081905560035490915061031b908461083d565b60035560045461032b908561083d565b60045561033781610872565b50610342818a610881565b5061034c89610893565b6040516001600160a01b038a16907f57eafa6244c2ffa01bc84d88d86ded072b0a3ffb75b4c4e513347ab1acdd1f30905f90a261038960016109b3565b9450505050505b95945050505050565b6103a16109ce565b806103ee5760405162461bcd60e51b815260206004820152601360248201527f496e76616c696420696e7075742070726f6f660000000000000000000000000060448201526064016102b0565b5f61042e8484848080601f0160208091040260200160405190810160405280939291908181526020018383808284375f920191909152506109f892505050565b335f9081526002602052604090205490915061044a8183610a05565b335f908152600260205260409020556003546104669083610a05565b6003556004546104769083610a05565b600455335f9081526002602052604090205461049190610872565b50335f818152600260205260409020546104aa91610881565b506104b433610893565b6104de827f0000000000000000000000000000000000000000000000000000000000000000610a33565b50604080516020810182525f815290516363dc53af60e11b81526001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169163c7b8a75e9161053b9130913391889160040161108c565b6020604051808303815f875af1158015610557573d5f5f3e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061057b91906110c2565b5060405133907fb454a0267b009faf7f356e9e3c2433e8db8e51a28c679b6c8ece90c34eea8fa2905f90a250506105b160018055565b505050565b6105be610a3e565b6105c75f610a6a565b565b6105d16109ce565b8061061e5760405162461bcd60e51b815260206004820152601360248201527f496e76616c696420696e7075742070726f6f660000000000000000000000000060448201526064016102b0565b5f61065e8484848080601f0160208091040260200160405190810160405280939291908181526020018383808284375f920191909152506109f892505050565b905061068a817f0000000000000000000000000000000000000000000000000000000000000000610a33565b5060405163eb3155b560e01b8152336004820152306024820152604481018290525f907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03169063eb3155b5906064016020604051808303815f875af11580156106fd573d5f5f3e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061072191906110c2565b905061072c81610872565b50335f9081526002602052604090205481908061074f5761074c5f610821565b90505b5f61075a828461083d565b335f90815260026020526040902081905560035490915061077b908461083d565b60035560045461078b908561083d565b60045561079781610872565b506107a28133610881565b506107ac33610893565b60405133907f57eafa6244c2ffa01bc84d88d86ded072b0a3ffb75b4c4e513347ab1acdd1f30905f90a250505050506105b160018055565b6107ec610a3e565b6001600160a01b03811661081557604051631e4fbdf760e01b81525f60048201526024016102b0565b61081e81610a6a565b50565b5f6108378267ffffffffffffffff166005610ac6565b92915050565b5f8261084f5761084c5f610821565b92505b816108605761085d5f610821565b91505b61086b83835f610b83565b9392505050565b5f61087d8230610c7e565b5090565b5f61088c8383610c7e565b5090919050565b6001600160a01b0381165f9081526005602052604090205460ff16610924576001600160a01b0381165f818152600560205260408120805460ff191660019081179091556006805491820181559091527ff652222313e28459528d920b65115c16c04f3efc82aaedc97be59f3f377c0d3f01805473ffffffffffffffffffffffffffffffffffffffff191690911790555b5f5b600654811015610997575f60068281548110610944576109446110d9565b5f9182526020808320909101546001600160a01b0316808352600590915260409091205490915060ff161561098e5761097f60035482610881565b5061098c60045482610881565b505b50600101610926565b506109a3600354610872565b506109af600454610872565b5050565b5f610837826109c2575f6109c5565b60015b60ff165f610ac6565b6002600154036109f157604051633ee5aeb560e01b815260040160405180910390fd5b6002600155565b5f61086b83836005610d05565b5f82610a1757610a145f610821565b92505b81610a2857610a255f610821565b91505b61086b83835f610e25565b5f61088c8383610eda565b5f546001600160a01b031633146105c75760405163118cdaa760e01b81523360048201526024016102b0565b5f80546001600160a01b0383811673ffffffffffffffffffffffffffffffffffffffff19831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b7f9e7b61f58c47dc699ac88507c4f5bb9f121c03808c5676a8078fe583e464970154604051639cd07acb60e01b81525f917f9e7b61f58c47dc699ac88507c4f5bb9f121c03808c5676a8078fe583e4649700916001600160a01b0390911690639cd07acb90610b3b908790879060040161110d565b6020604051808303815f875af1158015610b57573d5f5f3e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610b7b91906110c2565b949350505050565b5f5f8215610b965750600160f81b610b99565b505f5b7f9e7b61f58c47dc699ac88507c4f5bb9f121c03808c5676a8078fe583e46497015460405163022f65e760e31b815260048101879052602481018690527fff00000000000000000000000000000000000000000000000000000000000000831660448201527f9e7b61f58c47dc699ac88507c4f5bb9f121c03808c5676a8078fe583e4649700916001600160a01b03169063117b2f38906064015b6020604051808303815f875af1158015610c50573d5f5f3e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610c7491906110c2565b9695505050505050565b7f9e7b61f58c47dc699ac88507c4f5bb9f121c03808c5676a8078fe583e46497008054604051635ca4b5b160e11b8152600481018590526001600160a01b0384811660248301529091169063b9496b62906044015b5f604051808303815f87803b158015610cea575f5ffd5b505af1158015610cfc573d5f5f3e3d5ffd5b50505050505050565b7f9e7b61f58c47dc699ac88507c4f5bb9f121c03808c5676a8078fe583e46497015460405163196d0b9b60e01b81525f917f9e7b61f58c47dc699ac88507c4f5bb9f121c03808c5676a8078fe583e4649700916001600160a01b039091169063196d0b9b90610d7e908890339089908990600401611121565b6020604051808303815f875af1158015610d9a573d5f5f3e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610dbe91906110c2565b8154604051630f8e573b60e21b8152600481018390523360248201529193506001600160a01b031690633e395cec906044015f604051808303815f87803b158015610e07575f5ffd5b505af1158015610e19573d5f5f3e3d5ffd5b50505050509392505050565b5f5f8215610e385750600160f81b610e3b565b505f5b7f9e7b61f58c47dc699ac88507c4f5bb9f121c03808c5676a8078fe583e4649701546040516303056db360e31b815260048101879052602481018690527fff00000000000000000000000000000000000000000000000000000000000000831660448201527f9e7b61f58c47dc699ac88507c4f5bb9f121c03808c5676a8078fe583e4649700916001600160a01b03169063182b6d9890606401610c34565b7f9e7b61f58c47dc699ac88507c4f5bb9f121c03808c5676a8078fe583e46497008054604051630f8e573b60e21b8152600481018590526001600160a01b03848116602483015290911690633e395cec90604401610cd3565b80356001600160a01b0381168114610f49575f5ffd5b919050565b5f60208284031215610f5e575f5ffd5b61086b82610f33565b5f5f83601f840112610f77575f5ffd5b50813567ffffffffffffffff811115610f8e575f5ffd5b602083019150836020828501011115610fa5575f5ffd5b9250929050565b5f5f5f5f5f60808688031215610fc0575f5ffd5b610fc986610f33565b9450610fd760208701610f33565b935060408601359250606086013567ffffffffffffffff811115610ff9575f5ffd5b61100588828901610f67565b969995985093965092949392505050565b5f5f5f60408486031215611028575f5ffd5b83359250602084013567ffffffffffffffff811115611045575f5ffd5b61105186828701610f67565b9497909650939450505050565b5f81518084528060208401602086015e5f602082860101526020601f19601f83011685010191505092915050565b6001600160a01b03851681526001600160a01b0384166020820152826040820152608060608201525f610c74608083018461105e565b5f602082840312156110d2575f5ffd5b5051919050565b634e487b7160e01b5f52603260045260245ffd5b6054811061110957634e487b7160e01b5f52602160045260245ffd5b9052565b8281526040810161086b60208301846110ed565b8481526001600160a01b0384166020820152608060408201525f611148608083018561105e565b905061039060608301846110ed56fea164736f6c634300081b000a9e7b61f58c47dc699ac88507c4f5bb9f121c03808c5676a8078fe583e46497019e7b61f58c47dc699ac88507c4f5bb9f121c03808c5676a8078fe583e4649700";

type ConfidentialLendingVaultConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ConfidentialLendingVaultConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ConfidentialLendingVault__factory extends ContractFactory {
  constructor(...args: ConfidentialLendingVaultConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    _asset: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(_asset, overrides || {});
  }
  override deploy(
    _asset: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(_asset, overrides || {}) as Promise<
      ConfidentialLendingVault & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(
    runner: ContractRunner | null
  ): ConfidentialLendingVault__factory {
    return super.connect(runner) as ConfidentialLendingVault__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ConfidentialLendingVaultInterface {
    return new Interface(_abi) as ConfidentialLendingVaultInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): ConfidentialLendingVault {
    return new Contract(
      address,
      _abi,
      runner
    ) as unknown as ConfidentialLendingVault;
  }
}
