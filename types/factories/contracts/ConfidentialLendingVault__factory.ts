/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../common";
import type {
  ConfidentialLendingVault,
  ConfidentialLendingVaultInterface,
} from "../../contracts/ConfidentialLendingVault";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_asset",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "OwnableInvalidOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "OwnableUnauthorizedAccount",
    type: "error",
  },
  {
    inputs: [],
    name: "ReentrancyGuardReentrantCall",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "newRate",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
    ],
    name: "InterestAccrued",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "shares",
        type: "uint256",
      },
    ],
    name: "Supply",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "shares",
        type: "uint256",
      },
    ],
    name: "Withdraw",
    type: "event",
  },
  {
    inputs: [],
    name: "ETH_PRICE_USDC",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "FIXED_INTEREST_RATE",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "INITIAL_RATE",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "RATE_PRECISION",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "USDC_DECIMALS",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "asset",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "currentRate",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "emergencyPause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "emergencyResume",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getCurrentInterestRate",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "getETHPrice",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "getEncryptedShares",
    outputs: [
      {
        internalType: "euint32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getEncryptedTotalAssets",
    outputs: [
      {
        internalType: "euint32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getEncryptedTotalShares",
    outputs: [
      {
        internalType: "euint32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getUtilizationRate",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "lastUpdateTime",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "supply",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x60a0604052670de0b6b3a764000060055534801561001b575f5ffd5b50604051610bca380380610bca83398101604081905261003a91610299565b336101b56100d9604080516080810182525f808252602082018190529181018290526060810191909152506040805160808101825273687820221192c5b662b25367f70076a37bc79b6c815273848b0066793bcc60346da1f49049357399b8d5956020820152731364cbbf2cdf5032c47d8226a6f6fbd2afcdacac9181019190915273bc91f3dad1a5f19f8390c400196e58073b6a0bc4606082015290565b80517fed8d60e34876f751cc8b014c560745351147d9de11b9347c854e881b128ea60080546001600160a01b03199081166001600160a01b039384161790915560208301517fed8d60e34876f751cc8b014c560745351147d9de11b9347c854e881b128ea6018054831691841691909117905560408301517fed8d60e34876f751cc8b014c560745351147d9de11b9347c854e881b128ea6028054831691841691909117905560608301517fed8d60e34876f751cc8b014c560745351147d9de11b9347c854e881b128ea6038054909216921691909117905550565b7f5ea69329017273582817d320489fbd94f775580e90c092699ca6f3d12fdf7d0080546001600160a01b03191673a02cda4ca3a71d7c46997716f4283aa851c288121790556001600160a01b03811661022757604051631e4fbdf760e01b81525f600482015260240160405180910390fd5b6102308161024a565b50600180556001600160a01b0316608052426006556102c6565b5f80546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b5f602082840312156102a9575f5ffd5b81516001600160a01b03811681146102bf575f5ffd5b9392505050565b6080516108ec6102de5f395f61020c01526108ec5ff3fe60806040526004361061015a575f3560e01c80638da5cb5b116100bb578063c8f33c9111610071578063f54e26ff11610057578063f54e26ff14610312578063f9f8bdb714610326578063ff516c491461033b575f5ffd5b8063c8f33c91146102de578063f2fde38b146102f3575f5ffd5b8063a607a8d9116100a1578063a607a8d91461029d578063ae16e715146102b3578063c1419def146102ca575f5ffd5b80638da5cb5b1461028157806393c87f0314610259575f5ffd5b806338d52e0f116101105780634dbac733116100f65780634dbac7331461019257806351858e2714610259578063715018a61461026d575f5ffd5b806338d52e0f146101fb5780634a417a5314610246575f5ffd5b80632b3ba681116101405780632b3ba681146101925780632f00a0dd146101ad578063306a821f146101c7575f5ffd5b8063047fc9aa146101655780632507ea6f1461016f575f5ffd5b3661016157005b5f5ffd5b61016d610354565b005b34801561017a575f5ffd5b506004545b6040519081526020015b60405180910390f35b34801561019d575f5ffd5b5061017f670de0b6b3a764000081565b3480156101b8575f5ffd5b5061017f66b1a2bc2ec5000081565b3480156101d2575f5ffd5b5061017f6101e1366004610872565b6001600160a01b03165f9081526002602052604090205490565b348015610206575f5ffd5b5061022e7f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b039091168152602001610189565b348015610251575f5ffd5b50603261017f565b348015610264575f5ffd5b5061016d6104cb565b348015610278575f5ffd5b5061016d6104d3565b34801561028c575f5ffd5b505f546001600160a01b031661022e565b3480156102a8575f5ffd5b5063ee6b280061017f565b3480156102be575f5ffd5b5061017f63ee6b280081565b3480156102d5575f5ffd5b5061017f600681565b3480156102e9575f5ffd5b5061017f60065481565b3480156102fe575f5ffd5b5061016d61030d366004610872565b6104e4565b34801561031d575f5ffd5b5060035461017f565b348015610331575f5ffd5b5061017f60055481565b348015610346575f5ffd5b5066b1a2bc2ec5000061017f565b61035c610521565b5f34116103d65760405162461bcd60e51b815260206004820152602d60248201527f436f6e666964656e7469616c4c656e64696e675661756c743a2043616e6e6f7460448201527f20737570706c792030204554480000000000000000000000000000000000000060648201526084015b60405180910390fd5b345f6103e18261054b565b90505f6103ed8361054b565b335f908152600260205260409020549091506104099082610563565b335f908152600260205260409020556003546104259082610563565b6003556004546104359083610563565b600455335f9081526002602052604090205461045090610598565b50335f81815260026020526040902054610469916105a7565b50610475600354610598565b50610481600454610598565b50604080513481526020810185905233917f9d624b01705090e0c402c84f2bdef9c498399a009cee9a4e08ab004bae447121910160405180910390a25050506104c960018055565b565b6104c96105b9565b6104db6105b9565b6104c95f6105e5565b6104ec6105b9565b6001600160a01b03811661051557604051631e4fbdf760e01b81525f60048201526024016103cd565b61051e816105e5565b50565b60026001540361054457604051633ee5aeb560e01b815260040160405180910390fd5b6002600155565b5f61055d8263ffffffff16600461064c565b92915050565b5f82610575576105725f61054b565b92505b81610586576105835f61054b565b91505b61059183835f610709565b9392505050565b5f6105a382306107e9565b5090565b5f6105b283836107e9565b5090919050565b5f546001600160a01b031633146104c95760405163118cdaa760e01b81523360048201526024016103cd565b5f80546001600160a01b038381167fffffffffffffffffffffffff0000000000000000000000000000000000000000831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b7fed8d60e34876f751cc8b014c560745351147d9de11b9347c854e881b128ea60154604051639cd07acb60e01b81525f917fed8d60e34876f751cc8b014c560745351147d9de11b9347c854e881b128ea600916001600160a01b0390911690639cd07acb906106c19087908790600401610898565b6020604051808303815f875af11580156106dd573d5f5f3e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061070191906108c8565b949350505050565b5f5f821561071c5750600160f81b61071f565b505f5b5f7fed8d60e34876f751cc8b014c560745351147d9de11b9347c854e881b128ea600600181015460405163022f65e760e31b815260048101899052602481018890527fff00000000000000000000000000000000000000000000000000000000000000851660448201529192506001600160a01b03169063117b2f38906064016020604051808303815f875af11580156107bb573d5f5f3e3d5ffd5b505050506040513d601f19601f820116820180604052508101906107df91906108c8565b9695505050505050565b5f7fed8d60e34876f751cc8b014c560745351147d9de11b9347c854e881b128ea6008054604051635ca4b5b160e11b8152600481018690526001600160a01b03858116602483015292935091169063b9496b62906044015f604051808303815f87803b158015610857575f5ffd5b505af1158015610869573d5f5f3e3d5ffd5b50505050505050565b5f60208284031215610882575f5ffd5b81356001600160a01b0381168114610591575f5ffd5b82815260408101605483106108bb57634e487b7160e01b5f52602160045260245ffd5b8260208301529392505050565b5f602082840312156108d8575f5ffd5b505191905056fea164736f6c634300081b000a";

type ConfidentialLendingVaultConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ConfidentialLendingVaultConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ConfidentialLendingVault__factory extends ContractFactory {
  constructor(...args: ConfidentialLendingVaultConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    _asset: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(_asset, overrides || {});
  }
  override deploy(
    _asset: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(_asset, overrides || {}) as Promise<
      ConfidentialLendingVault & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(
    runner: ContractRunner | null
  ): ConfidentialLendingVault__factory {
    return super.connect(runner) as ConfidentialLendingVault__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ConfidentialLendingVaultInterface {
    return new Interface(_abi) as ConfidentialLendingVaultInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): ConfidentialLendingVault {
    return new Contract(
      address,
      _abi,
      runner
    ) as unknown as ConfidentialLendingVault;
  }
}
