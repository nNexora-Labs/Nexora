/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../common";
import type {
  ConfidentialLendingVault,
  ConfidentialLendingVaultInterface,
} from "../../contracts/ConfidentialLendingVault";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_asset",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "OwnableInvalidOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "OwnableUnauthorizedAccount",
    type: "error",
  },
  {
    inputs: [],
    name: "ReentrancyGuardReentrantCall",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "ConfidentialSupply",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "ConfidentialWithdraw",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
    ],
    name: "InterestAccrued",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [],
    name: "ETH_PRICE_USDC",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "FIXED_INTEREST_RATE",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "INITIAL_RATE",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "RATE_PRECISION",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "USDC_DECIMALS",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "asset",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "currentRate",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "emergencyPause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "emergencyResume",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getCurrentInterestRate",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "getETHPrice",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "getEncryptedShares",
    outputs: [
      {
        internalType: "euint64",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getEncryptedTotalAssets",
    outputs: [
      {
        internalType: "euint64",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getEncryptedTotalShares",
    outputs: [
      {
        internalType: "euint64",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getUtilizationRate",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "lastUpdateTime",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "euint64",
        name: "amount",
        type: "bytes32",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "onConfidentialTransferReceived",
    outputs: [
      {
        internalType: "ebool",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "externalEuint64",
        name: "encryptedAmount",
        type: "bytes32",
      },
      {
        internalType: "bytes",
        name: "inputProof",
        type: "bytes",
      },
    ],
    name: "supply",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x60a0604052670de0b6b3a764000060055534801561001b575f5ffd5b506040516114ba3803806114ba83398101604081905261003a916103d5565b338061005f57604051631e4fbdf760e01b81525f600482015260240160405180910390fd5b6100688161024f565b50600180556101c161010b604080516080810182525f808252602082018190529181018290526060810191909152506040805160808101825273687820221192c5b662b25367f70076a37bc79b6c815273848b0066793bcc60346da1f49049357399b8d5956020820152731364cbbf2cdf5032c47d8226a6f6fbd2afcdacac9181019190915273bc91f3dad1a5f19f8390c400196e58073b6a0bc4606082015290565b80515f51602061147a5f395f51905f5280546001600160a01b03199081166001600160a01b039384161790915560208301515f51602061149a5f395f51905f528054831691841691909117905560408301517fed8d60e34876f751cc8b014c560745351147d9de11b9347c854e881b128ea6028054831691841691909117905560608301517fed8d60e34876f751cc8b014c560745351147d9de11b9347c854e881b128ea6038054909216921691909117905550565b7f5ea69329017273582817d320489fbd94f775580e90c092699ca6f3d12fdf7d0080546001600160a01b03191673a02cda4ca3a71d7c46997716f4283aa851c288121790556001600160a01b038116608052426006556102205f61029e565b60035561022c5f61029e565b60045560035461023b906102b9565b50600454610248906102b9565b5050610449565b5f80546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b5f6102b36001600160401b03831660056102c8565b92915050565b5f6102c4823061035f565b5090565b5f51602061149a5f395f51905f5254604051639cd07acb60e01b81525f915f51602061147a5f395f51905f52916001600160a01b0390911690639cd07acb906103179087908790600401610402565b6020604051808303815f875af1158015610333573d5f5f3e3d5ffd5b505050506040513d601f19601f820116820180604052508101906103579190610432565b949350505050565b5f5f51602061147a5f395f51905f528054604051635ca4b5b160e11b8152600481018690526001600160a01b03858116602483015292935091169063b9496b62906044015f604051808303815f87803b1580156103ba575f5ffd5b505af11580156103cc573d5f5f3e3d5ffd5b50505050505050565b5f602082840312156103e5575f5ffd5b81516001600160a01b03811681146103fb575f5ffd5b9392505050565b828152604081016054831061042557634e487b7160e01b5f52602160045260245ffd5b8260208301529392505050565b5f60208284031215610442575f5ffd5b5051919050565b6080516110046104765f395f818161021801528181610492015281816106cf015261071801526110045ff3fe608060405260043610610170575f3560e01c80638da5cb5b116100c6578063c1419def1161007c578063f54e26ff11610057578063f54e26ff14610372578063f9f8bdb714610386578063ff516c491461039b575f5ffd5b8063c1419def1461032a578063c8f33c911461033e578063f2fde38b14610353575f5ffd5b8063946835c5116100ac578063946835c5146102de578063a607a8d9146102fd578063ae16e71514610313575f5ffd5b80638da5cb5b146102c257806393c87f031461029a575f5ffd5b80633ccfd60b116101265780634dbac733116101015780634dbac7331461019e57806351858e271461029a578063715018a6146102ae575f5ffd5b80633ccfd60b1461025257806346083bfd146102685780634a417a5314610287575f5ffd5b80632f00a0dd116101565780632f00a0dd146101b9578063306a821f146101d357806338d52e0f14610207575f5ffd5b80632507ea6f1461017b5780632b3ba6811461019e575f5ffd5b3661017757005b5f5ffd5b348015610186575f5ffd5b506004545b6040519081526020015b60405180910390f35b3480156101a9575f5ffd5b5061018b670de0b6b3a764000081565b3480156101c4575f5ffd5b5061018b66b1a2bc2ec5000081565b3480156101de575f5ffd5b5061018b6101ed366004610e02565b6001600160a01b03165f9081526002602052604090205490565b348015610212575f5ffd5b5061023a7f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b039091168152602001610195565b34801561025d575f5ffd5b506102666103b4565b005b348015610273575f5ffd5b5061018b610282366004610e60565b610486565b348015610292575f5ffd5b50603261018b565b3480156102a5575f5ffd5b50610266610619565b3480156102b9575f5ffd5b50610266610621565b3480156102cd575f5ffd5b505f546001600160a01b031661023a565b3480156102e9575f5ffd5b506102666102f8366004610eca565b610632565b348015610308575f5ffd5b5063ee6b280061018b565b34801561031e575f5ffd5b5061018b63ee6b280081565b348015610335575f5ffd5b5061018b600681565b348015610349575f5ffd5b5061018b60065481565b34801561035e575f5ffd5b5061026661036d366004610e02565b6107ad565b34801561037d575f5ffd5b5060035461018b565b348015610391575f5ffd5b5061018b60055481565b3480156103a6575f5ffd5b5066b1a2bc2ec5000061018b565b6103bc6107ea565b335f90815260026020526040902054806103d68180610814565b335f908152600260205260409020556003546103f29083610814565b6003556004546104029082610814565b600455335f9081526002602052604090205461041d90610849565b50335f8181526002602052604090205461043691610858565b50610442600354610849565b5061044e600454610849565b5060405133907fb454a0267b009faf7f356e9e3c2433e8db8e51a28c679b6c8ece90c34eea8fa2905f90a2505061048460018055565b565b5f336001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000161461052a5760405162461bcd60e51b815260206004820152603660248201527f436f6e666964656e7469616c4c656e64696e675661756c743a204f6e6c79206360448201527f57455448207472616e736665727320616c6c6f7765640000000000000000000060648201526084015b60405180910390fd5b6001600160a01b0385165f908152600260205260409020548490819080610557576105545f61086a565b90505b5f6105628284610886565b6001600160a01b038a165f90815260026020526040902081905560035490915061058c9084610886565b60035560045461059c9085610886565b6004556105a881610849565b506105b3818a610858565b506105bf600354610849565b506105cb600454610849565b506040516001600160a01b038a16907f57eafa6244c2ffa01bc84d88d86ded072b0a3ffb75b4c4e513347ab1acdd1f30905f90a261060960016108b4565b9450505050505b95945050505050565b6104846108cf565b6106296108cf565b6104845f6108fb565b61063a6107ea565b806106875760405162461bcd60e51b815260206004820152601360248201527f496e76616c696420696e7075742070726f6f66000000000000000000000000006044820152606401610521565b5f6106c78484848080601f0160208091040260200160405190810160405280939291908181526020018383808284375f9201919091525061096292505050565b90506106f3817f000000000000000000000000000000000000000000000000000000000000000061096f565b50604080516020810182525f80825291516363dc53af60e11b81526001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169163c7b8a75e9161075191339130918891600401610f40565b6020604051808303815f875af115801561076d573d5f5f3e3d5ffd5b505050506040513d601f19601f820116820180604052508101906107919190610f76565b905061079c81610849565b5050506107a860018055565b505050565b6107b56108cf565b6001600160a01b0381166107de57604051631e4fbdf760e01b81525f6004820152602401610521565b6107e7816108fb565b50565b60026001540361080d57604051633ee5aeb560e01b815260040160405180910390fd5b6002600155565b5f82610826576108235f61086a565b92505b81610837576108345f61086a565b91505b61084283835f61097a565b9392505050565b5f6108548230610a75565b5090565b5f6108638383610a75565b5090919050565b5f6108808267ffffffffffffffff166005610afc565b92915050565b5f82610898576108955f61086a565b92505b816108a9576108a65f61086a565b91505b61084283835f610bb9565b5f610880826108c3575f6108c6565b60015b60ff165f610afc565b5f546001600160a01b031633146104845760405163118cdaa760e01b8152336004820152602401610521565b5f80546001600160a01b038381167fffffffffffffffffffffffff0000000000000000000000000000000000000000831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b5f61084283836005610c6e565b5f6108638383610d8e565b5f5f821561098d5750600160f81b610990565b505f5b7fed8d60e34876f751cc8b014c560745351147d9de11b9347c854e881b128ea601546040516303056db360e31b815260048101879052602481018690527fff00000000000000000000000000000000000000000000000000000000000000831660448201527fed8d60e34876f751cc8b014c560745351147d9de11b9347c854e881b128ea600916001600160a01b03169063182b6d98906064015b6020604051808303815f875af1158015610a47573d5f5f3e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610a6b9190610f76565b9695505050505050565b7fed8d60e34876f751cc8b014c560745351147d9de11b9347c854e881b128ea6008054604051635ca4b5b160e11b8152600481018590526001600160a01b0384811660248301529091169063b9496b62906044015b5f604051808303815f87803b158015610ae1575f5ffd5b505af1158015610af3573d5f5f3e3d5ffd5b50505050505050565b7fed8d60e34876f751cc8b014c560745351147d9de11b9347c854e881b128ea60154604051639cd07acb60e01b81525f917fed8d60e34876f751cc8b014c560745351147d9de11b9347c854e881b128ea600916001600160a01b0390911690639cd07acb90610b719087908790600401610fad565b6020604051808303815f875af1158015610b8d573d5f5f3e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610bb19190610f76565b949350505050565b5f5f8215610bcc5750600160f81b610bcf565b505f5b7fed8d60e34876f751cc8b014c560745351147d9de11b9347c854e881b128ea6015460405163022f65e760e31b815260048101879052602481018690527fff00000000000000000000000000000000000000000000000000000000000000831660448201527fed8d60e34876f751cc8b014c560745351147d9de11b9347c854e881b128ea600916001600160a01b03169063117b2f3890606401610a2b565b7fed8d60e34876f751cc8b014c560745351147d9de11b9347c854e881b128ea6015460405163196d0b9b60e01b81525f917fed8d60e34876f751cc8b014c560745351147d9de11b9347c854e881b128ea600916001600160a01b039091169063196d0b9b90610ce7908890339089908990600401610fc1565b6020604051808303815f875af1158015610d03573d5f5f3e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610d279190610f76565b8154604051630f8e573b60e21b8152600481018390523360248201529193506001600160a01b031690633e395cec906044015f604051808303815f87803b158015610d70575f5ffd5b505af1158015610d82573d5f5f3e3d5ffd5b50505050509392505050565b7fed8d60e34876f751cc8b014c560745351147d9de11b9347c854e881b128ea6008054604051630f8e573b60e21b8152600481018590526001600160a01b03848116602483015290911690633e395cec90604401610aca565b80356001600160a01b0381168114610dfd575f5ffd5b919050565b5f60208284031215610e12575f5ffd5b61084282610de7565b5f5f83601f840112610e2b575f5ffd5b50813567ffffffffffffffff811115610e42575f5ffd5b602083019150836020828501011115610e59575f5ffd5b9250929050565b5f5f5f5f5f60808688031215610e74575f5ffd5b610e7d86610de7565b9450610e8b60208701610de7565b935060408601359250606086013567ffffffffffffffff811115610ead575f5ffd5b610eb988828901610e1b565b969995985093965092949392505050565b5f5f5f60408486031215610edc575f5ffd5b83359250602084013567ffffffffffffffff811115610ef9575f5ffd5b610f0586828701610e1b565b9497909650939450505050565b5f81518084528060208401602086015e5f602082860101526020601f19601f83011685010191505092915050565b6001600160a01b03851681526001600160a01b0384166020820152826040820152608060608201525f610a6b6080830184610f12565b5f60208284031215610f86575f5ffd5b5051919050565b60548110610fa957634e487b7160e01b5f52602160045260245ffd5b9052565b828152604081016108426020830184610f8d565b8481526001600160a01b0384166020820152608060408201525f610fe86080830185610f12565b90506106106060830184610f8d56fea164736f6c634300081b000aed8d60e34876f751cc8b014c560745351147d9de11b9347c854e881b128ea600ed8d60e34876f751cc8b014c560745351147d9de11b9347c854e881b128ea601";

type ConfidentialLendingVaultConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ConfidentialLendingVaultConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ConfidentialLendingVault__factory extends ContractFactory {
  constructor(...args: ConfidentialLendingVaultConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    _asset: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(_asset, overrides || {});
  }
  override deploy(
    _asset: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(_asset, overrides || {}) as Promise<
      ConfidentialLendingVault & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(
    runner: ContractRunner | null
  ): ConfidentialLendingVault__factory {
    return super.connect(runner) as ConfidentialLendingVault__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ConfidentialLendingVaultInterface {
    return new Interface(_abi) as ConfidentialLendingVaultInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): ConfidentialLendingVault {
    return new Contract(
      address,
      _abi,
      runner
    ) as unknown as ConfidentialLendingVault;
  }
}
