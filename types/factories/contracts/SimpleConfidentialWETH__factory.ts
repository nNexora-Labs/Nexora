/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../common";
import type {
  SimpleConfidentialWETH,
  SimpleConfidentialWETHInterface,
} from "../../contracts/SimpleConfidentialWETH";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "requestId",
        type: "uint256",
      },
    ],
    name: "ConfidentialFungibleTokenInvalidGatewayRequest",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "receiver",
        type: "address",
      },
    ],
    name: "ConfidentialFungibleTokenInvalidReceiver",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "ConfidentialFungibleTokenInvalidSender",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "caller",
        type: "address",
      },
    ],
    name: "ConfidentialFungibleTokenUnauthorizedCaller",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "holder",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "ConfidentialFungibleTokenUnauthorizedSpender",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "euint64",
        name: "amount",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "ConfidentialFungibleTokenUnauthorizedUseOfEncryptedAmount",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "holder",
        type: "address",
      },
    ],
    name: "ConfidentialFungibleTokenZeroBalance",
    type: "error",
  },
  {
    inputs: [],
    name: "HandlesAlreadySavedForRequestID",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidKMSSignatures",
    type: "error",
  },
  {
    inputs: [],
    name: "NoHandleFoundForRequestID",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "OwnableInvalidOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "OwnableUnauthorizedAccount",
    type: "error",
  },
  {
    inputs: [],
    name: "UnsupportedHandleType",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "euint64",
        name: "encryptedAmount",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "uint64",
        name: "amount",
        type: "uint64",
      },
    ],
    name: "AmountDisclosed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "euint64",
        name: "amount",
        type: "bytes32",
      },
    ],
    name: "ConfidentialTransfer",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "ConfidentialUnwrap",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "ConfidentialWrap",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "requestID",
        type: "uint256",
      },
    ],
    name: "DecryptionFulfilled",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "holder",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint48",
        name: "until",
        type: "uint48",
      },
    ],
    name: "OperatorSet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "confidentialBalanceOf",
    outputs: [
      {
        internalType: "euint64",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "confidentialTotalSupply",
    outputs: [
      {
        internalType: "euint64",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "externalEuint64",
        name: "encryptedAmount",
        type: "bytes32",
      },
      {
        internalType: "bytes",
        name: "inputProof",
        type: "bytes",
      },
    ],
    name: "confidentialTransfer",
    outputs: [
      {
        internalType: "euint64",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "euint64",
        name: "amount",
        type: "bytes32",
      },
    ],
    name: "confidentialTransfer",
    outputs: [
      {
        internalType: "euint64",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "euint64",
        name: "amount",
        type: "bytes32",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "confidentialTransferAndCall",
    outputs: [
      {
        internalType: "euint64",
        name: "transferred",
        type: "bytes32",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "externalEuint64",
        name: "encryptedAmount",
        type: "bytes32",
      },
      {
        internalType: "bytes",
        name: "inputProof",
        type: "bytes",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "confidentialTransferAndCall",
    outputs: [
      {
        internalType: "euint64",
        name: "transferred",
        type: "bytes32",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "externalEuint64",
        name: "encryptedAmount",
        type: "bytes32",
      },
      {
        internalType: "bytes",
        name: "inputProof",
        type: "bytes",
      },
    ],
    name: "confidentialTransferFrom",
    outputs: [
      {
        internalType: "euint64",
        name: "transferred",
        type: "bytes32",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "euint64",
        name: "amount",
        type: "bytes32",
      },
    ],
    name: "confidentialTransferFrom",
    outputs: [
      {
        internalType: "euint64",
        name: "transferred",
        type: "bytes32",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "externalEuint64",
        name: "encryptedAmount",
        type: "bytes32",
      },
      {
        internalType: "bytes",
        name: "inputProof",
        type: "bytes",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "confidentialTransferFromAndCall",
    outputs: [
      {
        internalType: "euint64",
        name: "transferred",
        type: "bytes32",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "euint64",
        name: "amount",
        type: "bytes32",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "confidentialTransferFromAndCall",
    outputs: [
      {
        internalType: "euint64",
        name: "transferred",
        type: "bytes32",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "euint64",
        name: "encryptedAmount",
        type: "bytes32",
      },
    ],
    name: "discloseEncryptedAmount",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "emergencyWithdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "requestId",
        type: "uint256",
      },
      {
        internalType: "uint64",
        name: "amount",
        type: "uint64",
      },
      {
        internalType: "bytes[]",
        name: "signatures",
        type: "bytes[]",
      },
    ],
    name: "finalizeDiscloseEncryptedAmount",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "getEncryptedBalance",
    outputs: [
      {
        internalType: "euint64",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getEncryptedTotalSupply",
    outputs: [
      {
        internalType: "euint64",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "holder",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "isOperator",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "uint48",
        name: "until",
        type: "uint48",
      },
    ],
    name: "setOperator",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "wrap",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x608060405234801561000f575f5ffd5b50336040518060400160405280601881526020017f53696d706c6520436f6e666964656e7469616c20574554480000000000000000815250604051806040016040528060068152602001650e6c6ae8aa8960d31b815250604051806060016040528060218152602001612a7560219139600461008b8482610331565b5060056100988382610331565b5060066100a58282610331565b5050506001600160a01b03821690506100d757604051631e4fbdf760e01b81525f600482015260240160405180910390fd5b6100e0816100fe565b506100ea5f61014f565b60098190556100f89061016a565b50610432565b600780546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0905f90a35050565b5f6101646001600160401b0383166005610179565b92915050565b5f6101758230610223565b5090565b7fed8d60e34876f751cc8b014c560745351147d9de11b9347c854e881b128ea60154604051639cd07acb60e01b81525f915f516020612a555f395f51905f52916001600160a01b0390911690639cd07acb906101db90879087906004016103eb565b6020604051808303815f875af11580156101f7573d5f5f3e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061021b919061041b565b949350505050565b5f5f516020612a555f395f51905f528054604051635ca4b5b160e11b8152600481018690526001600160a01b03858116602483015292935091169063b9496b62906044015f604051808303815f87803b15801561027e575f5ffd5b505af1158015610290573d5f5f3e3d5ffd5b50505050505050565b634e487b7160e01b5f52604160045260245ffd5b600181811c908216806102c157607f821691505b6020821081036102df57634e487b7160e01b5f52602260045260245ffd5b50919050565b601f82111561032c57805f5260205f20601f840160051c8101602085101561030a5750805b601f840160051c820191505b81811015610329575f8155600101610316565b50505b505050565b81516001600160401b0381111561034a5761034a610299565b61035e8161035884546102ad565b846102e5565b6020601f821160018114610390575f83156103795750848201515b5f19600385901b1c1916600184901b178455610329565b5f84815260208120601f198516915b828110156103bf578785015182556020948501946001909201910161039f565b50848210156103dc57868401515f19600387901b60f8161c191681555b50505050600190811b01905550565b828152604081016054831061040e57634e487b7160e01b5f52602160045260245ffd5b8260208301529392505050565b5f6020828403121561042b575f5ffd5b5051919050565b6126168061043f5f395ff3fe608060405260043610610191575f3560e01c80638da5cb5b116100dc578063d4ea066411610087578063de64211911610062578063de64211914610427578063e064b9bb14610446578063eb3155b514610465578063f2fde38b14610484575f5ffd5b8063d4ea0664146103e0578063d4febb96146103f4578063db2e21bc14610413575f5ffd5b8063c535803c116100b7578063c535803c1461039a578063c7b8a75e146103b9578063d46eb119146103d8575f5ffd5b80638da5cb5b1461033057806395d89b4114610357578063b6363cf21461036b575f5ffd5b8063402dc4e41161013c5780635bebed7e116101175780635bebed7e146102dc578063715018a6146102fb5780637279e26414610311575f5ffd5b8063402dc4e414610275578063537d3c50146102a957806354095227146102c8575f5ffd5b8063344ff1011161016c578063344ff1011461020e57806334c45743146102425780633c130d9014610261575f5ffd5b806306fdde031461019c5780632fb74e62146101c6578063313ce567146101f3575f5ffd5b3661019857005b5f5ffd5b3480156101a7575f5ffd5b506101b06104a3565b6040516101bd9190611e72565b60405180910390f35b3480156101d1575f5ffd5b506101e56101e0366004611edd565b610533565b6040519081526020016101bd565b3480156101fe575f5ffd5b50604051600681526020016101bd565b348015610219575f5ffd5b506101e5610228366004611f33565b6001600160a01b03165f9081526020819052604090205490565b34801561024d575f5ffd5b506101e561025c366004611f4c565b610586565b34801561026c575f5ffd5b506101b061062f565b348015610280575f5ffd5b506101e561028f366004611f33565b6001600160a01b03165f9081526008602052604090205490565b3480156102b4575f5ffd5b506101e56102c3366004611edd565b61063e565b3480156102d3575f5ffd5b506003546101e5565b3480156102e7575f5ffd5b506101e56102f6366004611fe5565b6106a0565b348015610306575f5ffd5b5061030f6106f4565b005b34801561031c575f5ffd5b5061030f61032b366004612052565b610707565b34801561033b575f5ffd5b506007546040516001600160a01b0390911681526020016101bd565b348015610362575f5ffd5b506101b0610794565b348015610376575f5ffd5b5061038a6103853660046121a3565b6107a3565b60405190151581526020016101bd565b3480156103a5575f5ffd5b5061030f6103b43660046121cb565b6107f5565b3480156103c4575f5ffd5b506101e56103d33660046121e2565b6108ab565b61030f61094e565b3480156103eb575f5ffd5b506009546101e5565b3480156103ff575f5ffd5b5061030f61040e36600461224c565b610a85565b34801561041e575f5ffd5b5061030f610a94565b348015610432575f5ffd5b506101e561044136600461228b565b610be6565b348015610451575f5ffd5b506101e56104603660046121e2565b610c42565b348015610470575f5ffd5b506101e561047f366004612314565b610cc7565b34801561048f575f5ffd5b5061030f61049e366004611f33565b610d66565b6060600480546104b29061234e565b80601f01602080910402602001604051908101604052809291908181526020018280546104de9061234e565b80156105295780601f1061050057610100808354040283529160200191610529565b820191905f5260205f20905b81548152906001019060200180831161050c57829003601f168201915b5050505050905090565b5f61057d33866105788787878080601f0160208091040260200160405190810160405280939291908181526020018383808284375f92019190915250610da392505050565b610db0565b95945050505050565b5f61059188336107a3565b883390916105ca57604051631ae7729b60e11b81526001600160a01b039283166004820152911660248201526044015b60405180910390fd5b505061061788886106108989898080601f0160208091040260200160405190810160405280939291908181526020018383808284375f92019190915250610da392505050565b8686610e30565b90506106238133610e87565b50979650505050505050565b6060600680546104b29061234e565b5f6106498433610e99565b8433909161067c5760405163118f6e5360e31b815260048101929092526001600160a01b031660248201526044016105c1565b505061068b3386868686610e30565b90506106978133610e87565b50949350505050565b5f6106ab8233610e99565b823390916106de5760405163118f6e5360e31b815260048101929092526001600160a01b031660248201526044016105c1565b50506106eb338484610db0565b90505b92915050565b6106fc610ea4565b6107055f610ed1565b565b6107118382610f3a565b5f83815260026020526040902054838161074157604051630ab5f57d60e01b81526004016105c191815260200190565b5060405167ffffffffffffffff8416815281907f83bbbc07896439e5d950a6cead04cbc676180af7a61cecf43f5296475057f5719060200160405180910390a25050505f90815260026020526040812055565b6060600580546104b29061234e565b5f816001600160a01b0316836001600160a01b031614806106eb5750506001600160a01b039182165f90815260016020908152604080832093909416825291909152205465ffffffffffff1642111590565b6107ff8133610e99565b801561081057506108108130610e99565b813390916108435760405163118f6e5360e31b815260048101929092526001600160a01b031660248201526044016105c1565b50506040805160018082528183019092525f916020808301908036833701905050905081815f8151811061087957610879612386565b60209081029190910101525f61089682631c9e789960e21b610fa1565b5f908152600260205260409020929092555050565b5f6108b68433610e99565b843390916108e95760405163118f6e5360e31b815260048101929092526001600160a01b031660248201526044016105c1565b50506108f586336107a3565b8633909161092957604051631ae7729b60e11b81526001600160a01b039283166004820152911660248201526044016105c1565b50506109388686868686610e30565b90506109448133610e87565b5095945050505050565b5f34116109c35760405162461bcd60e51b815260206004820152602960248201527f53696d706c65436f6e666964656e7469616c574554483a2043616e6e6f74207760448201527f726170203020455448000000000000000000000000000000000000000000000060648201526084016105c1565b5f6109cd34610fad565b335f90815260086020526040902054909150806109f0576109ed5f610fad565b90505b6109fa8183610fc3565b335f90815260086020526040902055600954610a169083610fc3565b600955335f90815260086020526040902054610a3190610ff1565b50335f81815260086020526040902054610a4a91611000565b50610a56600954610ff1565b5060405133907f9cb777e5cc5a3050cb652a50361cf4e165e4706a58b64a46634d986cd91d4de1905f90a25050565b610a9033838361100b565b5050565b610a9c610ea4565b4780610b105760405162461bcd60e51b815260206004820152602a60248201527f53696d706c65436f6e666964656e7469616c574554483a204e6f20455448207460448201527f6f2077697468647261770000000000000000000000000000000000000000000060648201526084016105c1565b5f610b236007546001600160a01b031690565b6001600160a01b0316826040515f6040518083038185875af1925050503d805f8114610b6a576040519150601f19603f3d011682016040523d82523d5f602084013e610b6f565b606091505b5050905080610a905760405162461bcd60e51b815260206004820152603360248201527f53696d706c65436f6e666964656e7469616c574554483a20456d657267656e6360448201527f79207769746864726177616c206661696c65640000000000000000000000000060648201526084016105c1565b5f610c2b33886106108989898080601f0160208091040260200160405190810160405280939291908181526020018383808284375f92019190915250610da392505050565b9050610c378133610e87565b509695505050505050565b5f610c4d86336107a3565b86339091610c8157604051631ae7729b60e11b81526001600160a01b039283166004820152911660248201526044016105c1565b505061093886866105788787878080601f0160208091040260200160405190810160405280939291908181526020018383808284375f92019190915250610da392505050565b5f610cd28233610e99565b82339091610d055760405163118f6e5360e31b815260048101929092526001600160a01b031660248201526044016105c1565b5050610d1184336107a3565b84339091610d4557604051631ae7729b60e11b81526001600160a01b039283166004820152911660248201526044016105c1565b5050610d52848484610db0565b9050610d5e8133610e87565b509392505050565b610d6e610ea4565b6001600160a01b038116610d9757604051631e4fbdf760e01b81525f60048201526024016105c1565b610da081610ed1565b50565b5f6106eb83836005611082565b5f806001600160a01b038516610de557604051631a9bbf8b60e11b81526001600160a01b0390911660048201526024016105c1565b505f6001600160a01b038416610e1a57604051636e41946d60e11b81526001600160a01b0390911660048201526024016105c1565b50610e2684848461118f565b90505b9392505050565b5f5f610e3d878787610db0565b90505f610e4e33898985898961136c565b90505f610e6e888a610e6985610e635f610fad565b88611470565b61118f565b9050610e7a838261147c565b9998505050505050505050565b5f610e9283836114aa565b5090919050565b5f6106eb838361151e565b6007546001600160a01b031633146107055760405163118cdaa760e01b81523360048201526024016105c1565b600780546001600160a01b038381167fffffffffffffffffffffffff0000000000000000000000000000000000000000831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0905f90a35050565b5f610f44836115aa565b90505f610f51828461167b565b905080610f715760405163cf6c44e960e01b815260040160405180910390fd5b60405184907f1af0453083661051f6e56e5c070792320652e612154bf9af8637bb1e7655b99d905f90a250505050565b5f6106eb83835f611783565b5f6106ee8267ffffffffffffffff1660056118bc565b5f82610fd557610fd25f610fad565b92505b81610fe657610fe35f610fad565b91505b6106eb83835f61195e565b5f610ffc8230611a24565b5090565b5f610e928383611a24565b6001600160a01b038381165f81815260016020908152604080832094871680845294825291829020805465ffffffffffff191665ffffffffffff871690811790915591519182527f921a218a75d18e8ec5704851e6b234a85725b21a2521ce889622c35dedc1fa12910160405180910390a3505050565b7fed8d60e34876f751cc8b014c560745351147d9de11b9347c854e881b128ea6015460405163196d0b9b60e01b81525f915f5160206125ea5f395f51905f52916001600160a01b039091169063196d0b9b906110e89088903390899089906004016123ce565b6020604051808303815f875af1158015611104573d5f5f3e3d5ffd5b505050506040513d601f19601f820116820180604052508101906111289190612404565b8154604051630f8e573b60e21b8152600481018390523360248201529193506001600160a01b031690633e395cec906044015f604051808303815f87803b158015611171575f5ffd5b505af1158015611183573d5f5f3e3d5ffd5b50505050509392505050565b5f80806001600160a01b0386166111c5576111ac60035485611a6a565b90925090506111ba81610ff1565b506003819055611249565b6001600160a01b0386165f90815260208190526040902054868161120857604051636b8830d760e11b81526001600160a01b0390911660048201526024016105c1565b506112138186611ab4565b909350915061122182610ff1565b5061122c8288611000565b50506001600160a01b0386165f9081526020819052604090208190555b61125c82856112575f610fad565b611470565b92506001600160a01b03851661128e576112786003548461147c565b905061128381610ff1565b5060038190556112e2565b6001600160a01b0385165f908152602081905260409020546112b09084610fc3565b90506112bb81610ff1565b506112c68186611000565b506001600160a01b0385165f9081526020819052604090208190555b6001600160a01b038616156112fd576112fb8387611000565b505b6001600160a01b03851615611318576113168386611000565b505b61132183610ff1565b5082856001600160a01b0316876001600160a01b03167f67500e8d0ed826d2194f514dd0d8124f35648ab6e3fb5e6ed867134cffe661e960405160405180910390a450509392505050565b5f6001600160a01b0385163b15611459576040516346083bfd60e01b81526001600160a01b038616906346083bfd906113b1908a908a9089908990899060040161241b565b6020604051808303815f875af19250505080156113eb575060408051601f3d908101601f191682019092526113e891810190612404565b60015b611452573d808015611418576040519150601f19603f3d011682016040523d82523d5f602084013e61141d565b606091505b5080515f0361144a57604051636e41946d60e11b81526001600160a01b03871660048201526024016105c1565b805181602001fd5b9050611466565b6114636001611adf565b90505b9695505050505050565b5f610e26848484611afa565b5f8261148e5761148b5f610fad565b92505b8161149f5761149c5f610fad565b91505b6106eb83835f611b87565b5f5160206125ea5f395f51905f528054604051630f8e573b60e21b8152600481018590526001600160a01b03848116602483015290911690633e395cec906044015b5f604051808303815f87803b158015611503575f5ffd5b505af1158015611515573d5f5f3e3d5ffd5b50505050505050565b5f805f5160206125ea5f395f51905f5280546040516382027b6d60e01b8152600481018790526001600160a01b0386811660248301529293509116906382027b6d90604401602060405180830381865afa15801561157e573d5f5f3e3d5ffd5b505050506040513d601f19601f820116820180604052508101906115a29190612470565b949350505050565b5f8181527f5ea69329017273582817d320489fbd94f775580e90c092699ca6f3d12fdf7d0260205260408120546060917f5ea69329017273582817d320489fbd94f775580e90c092699ca6f3d12fdf7d0091900361161b5760405163d66ca67560e01b815260040160405180910390fd5b5f8381526002820160209081526040918290208054835181840281018401909452808452909183018282801561166e57602002820191905f5260205f20905b81548152602001906001019080831161165a575b5050505050915050919050565b5f60248161168885611c11565b90505f8167ffffffffffffffff8111156116a4576116a461200d565b6040519080825280601f01601f1916602001820160405280156116ce576020820181803683370190505b509050818360208301377fed8d60e34876f751cc8b014c560745351147d9de11b9347c854e881b128ea60254604051632c027b1360e21b81525f5160206125ea5f395f51905f52916001600160a01b03169063b009ec4c90611738908a9086908b906004016124c9565b6020604051808303815f875af1158015611754573d5f5f3e3d5ffd5b505050506040513d601f19601f820116820180604052508101906117789190612470565b979650505050505050565b7f5ea69329017273582817d320489fbd94f775580e90c092699ca6f3d12fdf7d01545f5160206125ea5f395f51905f528054604051637d6e912360e11b81527f5ea69329017273582817d320489fbd94f775580e90c092699ca6f3d12fdf7d0092916001600160a01b03169063fadd224690611803908990600401612553565b5f604051808303815f87803b15801561181a575f5ffd5b505af115801561182c573d5f5f3e3d5ffd5b50508354604051633263b83b60e01b81526001600160a01b039091169250633263b83b915086906118659087908b908b90600401612565565b5f604051808303818588803b15801561187c575f5ffd5b505af115801561188e573d5f5f3e3d5ffd5b505050505061189d8387611cbe565b600182018054905f6118ae836125aa565b919050555050509392505050565b7fed8d60e34876f751cc8b014c560745351147d9de11b9347c854e881b128ea60154604051639cd07acb60e01b81525f915f5160206125ea5f395f51905f52916001600160a01b0390911690639cd07acb9061191e90879087906004016125c2565b6020604051808303815f875af115801561193a573d5f5f3e3d5ffd5b505050506040513d601f19601f820116820180604052508101906115a29190612404565b5f5f82156119715750600160f81b611974565b505f5b7fed8d60e34876f751cc8b014c560745351147d9de11b9347c854e881b128ea6015460405163022f65e760e31b815260048101879052602481018690526001600160f81b0319831660448201525f5160206125ea5f395f51905f52916001600160a01b03169063117b2f38906064015b6020604051808303815f875af1158015611a00573d5f5f3e3d5ffd5b505050506040513d601f19601f820116820180604052508101906114669190612404565b5f5160206125ea5f395f51905f528054604051635ca4b5b160e11b8152600481018590526001600160a01b0384811660248301529091169063b9496b62906044016114ec565b5f8083611a8557611a7b6001611adf565b9150829050611aad565b5f611a908585610fc3565b9050611a9c8186611d51565b9250611aa9838287611470565b9150505b9250929050565b5f5f611ac08484611d51565b9150611ad682611ad0868661147c565b86611470565b90509250929050565b5f6106ee82611aee575f611af1565b60015b60ff165f6118bc565b5f805f5160206125ea5f395f51905f526001810154604051637702dcff60e01b81526004810188905260248101879052604481018690529192506001600160a01b031690637702dcff906064016020604051808303815f875af1158015611b63573d5f5f3e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061057d9190612404565b5f5f8215611b9a5750600160f81b611b9d565b505f5b7fed8d60e34876f751cc8b014c560745351147d9de11b9347c854e881b128ea601546040516303056db360e31b815260048101879052602481018690526001600160f81b0319831660448201525f5160206125ea5f395f51905f52916001600160a01b03169063182b6d98906064016119e4565b80515f9081805b82811015611cb2575f858281518110611c3357611c33612386565b6020026020010151601e60208110611c4d57611c4d612386565b1a6053811115611c5f57611c5f61239a565b90506009816053811115611c7557611c7561239a565b60ff161015611c9057611c896020846125d6565b9250611ca9565b60405163ce54a8d160e01b815260040160405180910390fd5b50600101611c18565b506115a26020826125d6565b5f8281527f5ea69329017273582817d320489fbd94f775580e90c092699ca6f3d12fdf7d0260205260409020547f5ea69329017273582817d320489fbd94f775580e90c092699ca6f3d12fdf7d009015611d2b57604051633f06d22b60e01b815260040160405180910390fd5b5f83815260028201602090815260409091208351611d4b92850190611df0565b50505050565b5f82611d6357611d605f610fad565b92505b81611d7457611d715f610fad565b91505b6106eb83835f805f7fed8d60e34876f751cc8b014c560745351147d9de11b9347c854e881b128ea60154604051631391547f60e01b815260048101879052602481018690526001600160f81b0319831660448201525f5160206125ea5f395f51905f52916001600160a01b031690631391547f906064016119e4565b828054828255905f5260205f20908101928215611e29579160200282015b82811115611e29578251825591602001919060010190611e0e565b50610ffc9291505b80821115610ffc575f8155600101611e31565b5f81518084528060208401602086015e5f602082860101526020601f19601f83011685010191505092915050565b602081525f6106eb6020830184611e44565b80356001600160a01b0381168114611e9a575f5ffd5b919050565b5f5f83601f840112611eaf575f5ffd5b50813567ffffffffffffffff811115611ec6575f5ffd5b602083019150836020828501011115611aad575f5ffd5b5f5f5f5f60608587031215611ef0575f5ffd5b611ef985611e84565b935060208501359250604085013567ffffffffffffffff811115611f1b575f5ffd5b611f2787828801611e9f565b95989497509550505050565b5f60208284031215611f43575f5ffd5b6106eb82611e84565b5f5f5f5f5f5f5f60a0888a031215611f62575f5ffd5b611f6b88611e84565b9650611f7960208901611e84565b955060408801359450606088013567ffffffffffffffff811115611f9b575f5ffd5b611fa78a828b01611e9f565b909550935050608088013567ffffffffffffffff811115611fc6575f5ffd5b611fd28a828b01611e9f565b989b979a50959850939692959293505050565b5f5f60408385031215611ff6575f5ffd5b611fff83611e84565b946020939093013593505050565b634e487b7160e01b5f52604160045260245ffd5b604051601f8201601f1916810167ffffffffffffffff8111828210171561204a5761204a61200d565b604052919050565b5f5f5f60608486031215612064575f5ffd5b83359250602084013567ffffffffffffffff81168114612082575f5ffd5b9150604084013567ffffffffffffffff81111561209d575f5ffd5b8401601f810186136120ad575f5ffd5b803567ffffffffffffffff8111156120c7576120c761200d565b8060051b6120d760208201612021565b918252602081840181019290810190898411156120f2575f5ffd5b6020850192505b8383101561219457823567ffffffffffffffff811115612117575f5ffd5b8501603f81018b13612127575f5ffd5b602081013567ffffffffffffffff8111156121445761214461200d565b612157601f8201601f1916602001612021565b8181526040838301018d101561216b575f5ffd5b816040840160208301375f602083830101528085525050506020820191506020830192506120f9565b80955050505050509250925092565b5f5f604083850312156121b4575f5ffd5b6121bd83611e84565b9150611ad660208401611e84565b5f602082840312156121db575f5ffd5b5035919050565b5f5f5f5f5f608086880312156121f6575f5ffd5b6121ff86611e84565b945061220d60208701611e84565b935060408601359250606086013567ffffffffffffffff81111561222f575f5ffd5b61223b88828901611e9f565b969995985093965092949392505050565b5f5f6040838503121561225d575f5ffd5b61226683611e84565b9150602083013565ffffffffffff81168114612280575f5ffd5b809150509250929050565b5f5f5f5f5f5f608087890312156122a0575f5ffd5b6122a987611e84565b955060208701359450604087013567ffffffffffffffff8111156122cb575f5ffd5b6122d789828a01611e9f565b909550935050606087013567ffffffffffffffff8111156122f6575f5ffd5b61230289828a01611e9f565b979a9699509497509295939492505050565b5f5f5f60608486031215612326575f5ffd5b61232f84611e84565b925061233d60208501611e84565b929592945050506040919091013590565b600181811c9082168061236257607f821691505b60208210810361238057634e487b7160e01b5f52602260045260245ffd5b50919050565b634e487b7160e01b5f52603260045260245ffd5b634e487b7160e01b5f52602160045260245ffd5b605481106123ca57634e487b7160e01b5f52602160045260245ffd5b9052565b8481526001600160a01b0384166020820152608060408201525f6123f56080830185611e44565b905061057d60608301846123ae565b5f60208284031215612414575f5ffd5b5051919050565b6001600160a01b03861681526001600160a01b038516602082015283604082015260806060820152816080820152818360a08301375f81830160a090810191909152601f909201601f19160101949350505050565b5f60208284031215612480575f5ffd5b81518015158114610e29575f5ffd5b5f8151808452602084019350602083015f5b828110156124bf5781518652602095860195909101906001016124a1565b5093949350505050565b606081525f6124db606083018661248f565b82810360208401526124ed8186611e44565b9050828103604084015280845180835260208301915060208160051b840101602087015f5b8381101561254457601f1986840301855261252e838351611e44565b6020958601959093509190910190600101612512565b50909998505050505050505050565b602081525f6106eb602083018461248f565b838152606060208201525f61257d606083018561248f565b905063ffffffff60e01b83166040830152949350505050565b634e487b7160e01b5f52601160045260245ffd5b5f600182016125bb576125bb612596565b5060010190565b82815260408101610e2960208301846123ae565b808201808211156106ee576106ee61259656feed8d60e34876f751cc8b014c560745351147d9de11b9347c854e881b128ea600a164736f6c634300081b000aed8d60e34876f751cc8b014c560745351147d9de11b9347c854e881b128ea60068747470733a2f2f6170692e6578616d706c652e636f6d2f6d657461646174612f";

type SimpleConfidentialWETHConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: SimpleConfidentialWETHConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class SimpleConfidentialWETH__factory extends ContractFactory {
  constructor(...args: SimpleConfidentialWETHConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      SimpleConfidentialWETH & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(
    runner: ContractRunner | null
  ): SimpleConfidentialWETH__factory {
    return super.connect(runner) as SimpleConfidentialWETH__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): SimpleConfidentialWETHInterface {
    return new Interface(_abi) as SimpleConfidentialWETHInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): SimpleConfidentialWETH {
    return new Contract(
      address,
      _abi,
      runner
    ) as unknown as SimpleConfidentialWETH;
  }
}
