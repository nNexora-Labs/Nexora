/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../common";
import type {
  WorkingConfidentialLendingVault,
  WorkingConfidentialLendingVaultInterface,
} from "../../contracts/WorkingConfidentialLendingVault";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_asset",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "OwnableInvalidOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "OwnableUnauthorizedAccount",
    type: "error",
  },
  {
    inputs: [],
    name: "ReentrancyGuardReentrantCall",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "ConfidentialSupply",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "ConfidentialWithdraw",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [],
    name: "FIXED_INTEREST_RATE",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "INITIAL_RATE",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "asset",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "currentRate",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "emergencyWithdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getCurrentInterestRate",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "getEncryptedShares",
    outputs: [
      {
        internalType: "euint64",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getEncryptedTotalAssets",
    outputs: [
      {
        internalType: "euint64",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getEncryptedTotalShares",
    outputs: [
      {
        internalType: "euint64",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "lastUpdateTime",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "euint64",
        name: "amount",
        type: "bytes32",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "onConfidentialTransferReceived",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "supply",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x60a0604052670de0b6b3a764000060055534801561001b575f5ffd5b50604051610dd8380380610dd883398101604081905261003a9161024f565b338061005f57604051631e4fbdf760e01b81525f600482015260240160405180910390fd5b610068816100b6565b50600180556001600160a01b038116608052426006556100875f610105565b6003556100935f610105565b6004556003546100a290610120565b506004546100af90610120565b50506102c3565b5f80546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b5f61011a6001600160401b038316600561012f565b92915050565b5f61012b82306101d9565b5090565b7fed8d60e34876f751cc8b014c560745351147d9de11b9347c854e881b128ea60154604051639cd07acb60e01b81525f915f516020610db85f395f51905f52916001600160a01b0390911690639cd07acb90610191908790879060040161027c565b6020604051808303815f875af11580156101ad573d5f5f3e3d5ffd5b505050506040513d601f19601f820116820180604052508101906101d191906102ac565b949350505050565b5f5f516020610db85f395f51905f528054604051635ca4b5b160e11b8152600481018690526001600160a01b03858116602483015292935091169063b9496b62906044015f604051808303815f87803b158015610234575f5ffd5b505af1158015610246573d5f5f3e3d5ffd5b50505050505050565b5f6020828403121561025f575f5ffd5b81516001600160a01b0381168114610275575f5ffd5b9392505050565b828152604081016054831061029f57634e487b7160e01b5f52602160045260245ffd5b8260208301529392505050565b5f602082840312156102bc575f5ffd5b5051919050565b608051610ad66102e25f395f818161019501526103a20152610ad65ff3fe6080604052600436106100e7575f3560e01c8063715018a611610087578063f2fde38b11610057578063f2fde38b14610272578063f54e26ff14610291578063f9f8bdb7146102a5578063ff516c49146102ba575f5ffd5b8063715018a6146102195780638da5cb5b1461022d578063c8f33c9114610249578063db2e21bc1461025e575f5ffd5b806335403023116100c2578063354030231461016357806338d52e0f1461018457806346083bfd146101cf5780634dbac733146101fe575f5ffd5b80632507ea6f146100f25780632f00a0dd14610115578063306a821f1461012f575f5ffd5b366100ee57005b5f5ffd5b3480156100fd575f5ffd5b506004545b6040519081526020015b60405180910390f35b348015610120575f5ffd5b5061010266b1a2bc2ec5000081565b34801561013a575f5ffd5b506101026101493660046109bd565b6001600160a01b03165f9081526002602052604090205490565b34801561016e575f5ffd5b5061018261017d3660046109d6565b6102d3565b005b34801561018f575f5ffd5b506101b77f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b03909116815260200161010c565b3480156101da575f5ffd5b506101ee6101e93660046109ed565b610396565b604051901515815260200161010c565b348015610209575f5ffd5b50610102670de0b6b3a764000081565b348015610224575f5ffd5b50610182610527565b348015610238575f5ffd5b505f546001600160a01b03166101b7565b348015610254575f5ffd5b5061010260065481565b348015610269575f5ffd5b5061018261053a565b34801561027d575f5ffd5b5061018261028c3660046109bd565b610613565b34801561029c575f5ffd5b50600354610102565b3480156102b0575f5ffd5b5061010260055481565b3480156102c5575f5ffd5b5066b1a2bc2ec50000610102565b6102db61064d565b5f81116103555760405162461bcd60e51b815260206004820152603e60248201527f576f726b696e67436f6e666964656e7469616c4c656e64696e675661756c743a60448201527f20416d6f756e74206d7573742062652067726561746572207468616e2030000060648201526084015b60405180910390fd5b60405181815233907fcbe821b1df44cf7658de369611737b33e20ad8bcabd8fae951d24d9a6d8080459060200160405180910390a261039360018055565b50565b5f336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146104355760405162461bcd60e51b815260206004820152603d60248201527f576f726b696e67436f6e666964656e7469616c4c656e64696e675661756c743a60448201527f204f6e6c79206357455448207472616e736665727320616c6c6f776564000000606482015260840161034c565b6001600160a01b0385165f908152600260205260409020548490806104605761045d5f610677565b90505b5f61046b8284610693565b6001600160a01b0389165f9081526002602052604090208190556003549091506104959084610693565b6003556004546104a59088610693565b6004556104b1816106c8565b506104bc81896106d7565b506104c86003546106c8565b506104d46004546106c8565b50876001600160a01b03167fcbe821b1df44cf7658de369611737b33e20ad8bcabd8fae951d24d9a6d8080455f60405161051091815260200190565b60405180910390a250600198975050505050505050565b61052f6106e9565b6105385f610715565b565b6105426106e9565b478015610393575f80546040516001600160a01b039091169083908381818185875af1925050503d805f8114610593576040519150601f19603f3d011682016040523d82523d5f602084013e610598565b606091505b505090508061060f5760405162461bcd60e51b815260206004820152603c60248201527f576f726b696e67436f6e666964656e7469616c4c656e64696e675661756c743a60448201527f20456d657267656e6379207769746864726177616c206661696c656400000000606482015260840161034c565b5050565b61061b6106e9565b6001600160a01b03811661064457604051631e4fbdf760e01b81525f600482015260240161034c565b61039381610715565b60026001540361067057604051633ee5aeb560e01b815260040160405180910390fd5b6002600155565b5f61068d8267ffffffffffffffff16600561077c565b92915050565b5f826106a5576106a25f610677565b92505b816106b6576106b35f610677565b91505b6106c183835f610839565b9392505050565b5f6106d38230610919565b5090565b5f6106e28383610919565b5090919050565b5f546001600160a01b031633146105385760405163118cdaa760e01b815233600482015260240161034c565b5f80546001600160a01b038381167fffffffffffffffffffffffff0000000000000000000000000000000000000000831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b7fed8d60e34876f751cc8b014c560745351147d9de11b9347c854e881b128ea60154604051639cd07acb60e01b81525f917fed8d60e34876f751cc8b014c560745351147d9de11b9347c854e881b128ea600916001600160a01b0390911690639cd07acb906107f19087908790600401610a82565b6020604051808303815f875af115801561080d573d5f5f3e3d5ffd5b505050506040513d601f19601f820116820180604052508101906108319190610ab2565b949350505050565b5f5f821561084c5750600160f81b61084f565b505f5b5f7fed8d60e34876f751cc8b014c560745351147d9de11b9347c854e881b128ea600600181015460405163022f65e760e31b815260048101899052602481018890527fff00000000000000000000000000000000000000000000000000000000000000851660448201529192506001600160a01b03169063117b2f38906064016020604051808303815f875af11580156108eb573d5f5f3e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061090f9190610ab2565b9695505050505050565b5f7fed8d60e34876f751cc8b014c560745351147d9de11b9347c854e881b128ea6008054604051635ca4b5b160e11b8152600481018690526001600160a01b03858116602483015292935091169063b9496b62906044015f604051808303815f87803b158015610987575f5ffd5b505af1158015610999573d5f5f3e3d5ffd5b50505050505050565b80356001600160a01b03811681146109b8575f5ffd5b919050565b5f602082840312156109cd575f5ffd5b6106c1826109a2565b5f602082840312156109e6575f5ffd5b5035919050565b5f5f5f5f5f60808688031215610a01575f5ffd5b610a0a866109a2565b9450610a18602087016109a2565b935060408601359250606086013567ffffffffffffffff811115610a3a575f5ffd5b8601601f81018813610a4a575f5ffd5b803567ffffffffffffffff811115610a60575f5ffd5b886020828401011115610a71575f5ffd5b959894975092955050506020019190565b8281526040810160548310610aa557634e487b7160e01b5f52602160045260245ffd5b8260208301529392505050565b5f60208284031215610ac2575f5ffd5b505191905056fea164736f6c634300081b000aed8d60e34876f751cc8b014c560745351147d9de11b9347c854e881b128ea600";

type WorkingConfidentialLendingVaultConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: WorkingConfidentialLendingVaultConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class WorkingConfidentialLendingVault__factory extends ContractFactory {
  constructor(...args: WorkingConfidentialLendingVaultConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    _asset: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(_asset, overrides || {});
  }
  override deploy(
    _asset: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(_asset, overrides || {}) as Promise<
      WorkingConfidentialLendingVault & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(
    runner: ContractRunner | null
  ): WorkingConfidentialLendingVault__factory {
    return super.connect(runner) as WorkingConfidentialLendingVault__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): WorkingConfidentialLendingVaultInterface {
    return new Interface(_abi) as WorkingConfidentialLendingVaultInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): WorkingConfidentialLendingVault {
    return new Contract(
      address,
      _abi,
      runner
    ) as unknown as WorkingConfidentialLendingVault;
  }
}
