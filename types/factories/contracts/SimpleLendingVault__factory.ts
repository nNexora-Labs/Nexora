/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../common";
import type {
  SimpleLendingVault,
  SimpleLendingVaultInterface,
} from "../../contracts/SimpleLendingVault";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_asset",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "OwnableInvalidOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "OwnableUnauthorizedAccount",
    type: "error",
  },
  {
    inputs: [],
    name: "ReentrancyGuardReentrantCall",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
    ],
    name: "SafeERC20FailedOperation",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
    ],
    name: "InterestAccrued",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Supply",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Withdraw",
    type: "event",
  },
  {
    inputs: [],
    name: "ETH_PRICE_USDC",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "FIXED_INTEREST_RATE",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "asset",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "emergencyPause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "emergencyResume",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getCurrentInterestRate",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "getETHPrice",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "getShares",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getTotalAssets",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getTotalShares",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getUtilizationRate",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "lastUpdateTime",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "shares",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "supply",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "totalAssets",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalShares",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x60a060405234801561000f575f5ffd5b50604051610a79380380610a7983398101604081905261002e916100c5565b338061005357604051631e4fbdf760e01b81525f600482015260240160405180910390fd5b61005c81610076565b50600180556001600160a01b0316608052426005556100f2565b5f80546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b5f602082840312156100d5575f5ffd5b81516001600160a01b03811681146100eb575f5ffd5b9392505050565b6080516109616101185f395f81816101f80152818161050601526105de01526109615ff3fe60806040526004361061015a575f3560e01c80638da5cb5b116100bb578063ce7c2ac211610071578063f04da65b11610057578063f04da65b14610333578063f2fde38b14610367578063ff516c4914610386575f5ffd5b8063ce7c2ac2146102f4578063d5002f2e1461031f575f5ffd5b8063a607a8d9116100a1578063a607a8d9146102b2578063ae16e715146102c8578063c8f33c91146102df575f5ffd5b80638da5cb5b1461029657806393c87f031461025a575f5ffd5b80633a98ef391161011057806351858e27116100f657806351858e271461025a5780636e07302b1461026e578063715018a614610282575f5ffd5b80633a98ef39146102325780634a417a5314610247575f5ffd5b80632f00a0dd116101405780632f00a0dd146101ae57806335403023146101c857806338d52e0f146101e7575f5ffd5b806301e1d114146101655780632e1a7d4d1461018d575f5ffd5b3661016157005b5f5ffd5b348015610170575f5ffd5b5061017a60035481565b6040519081526020015b60405180910390f35b348015610198575f5ffd5b506101ac6101a73660046108d0565b61039f565b005b3480156101b9575f5ffd5b5061017a66b1a2bc2ec5000081565b3480156101d3575f5ffd5b506101ac6101e23660046108d0565b61056e565b3480156101f2575f5ffd5b5061021a7f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b039091168152602001610184565b34801561023d575f5ffd5b5061017a60025481565b348015610252575f5ffd5b50603261017a565b348015610265575f5ffd5b506101ac61069a565b348015610279575f5ffd5b5060035461017a565b34801561028d575f5ffd5b506101ac6106a4565b3480156102a1575f5ffd5b505f546001600160a01b031661021a565b3480156102bd575f5ffd5b5063ee6b280061017a565b3480156102d3575f5ffd5b5061017a63ee6b280081565b3480156102ea575f5ffd5b5061017a60055481565b3480156102ff575f5ffd5b5061017a61030e3660046108e7565b60046020525f908152604090205481565b34801561032a575f5ffd5b5060025461017a565b34801561033e575f5ffd5b5061017a61034d3660046108e7565b6001600160a01b03165f9081526004602052604090205490565b348015610372575f5ffd5b506101ac6103813660046108e7565b6106b5565b348015610391575f5ffd5b5066b1a2bc2ec5000061017a565b6103a76106ef565b5f81116104215760405162461bcd60e51b815260206004820152602560248201527f53696d706c654c656e64696e675661756c743a2043616e6e6f7420776974686460448201527f726177203000000000000000000000000000000000000000000000000000000060648201526084015b60405180910390fd5b335f908152600460205260409020548111156104a55760405162461bcd60e51b815260206004820152602760248201527f53696d706c654c656e64696e675661756c743a20496e73756666696369656e7460448201527f20736861726573000000000000000000000000000000000000000000000000006064820152608401610418565b335f90815260046020526040812080548392906104c3908490610928565b925050819055508060025f8282546104db9190610928565b925050819055508060035f8282546104f39190610928565b9091555061052d90506001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000163383610719565b60405181815233907f884edad9ce6fa2440d8a54cc123490eb96d2768479d49ff9c7366125a94243649060200160405180910390a261056b60018055565b50565b6105766106ef565b5f81116105d15760405162461bcd60e51b815260206004820152602360248201527f53696d706c654c656e64696e675661756c743a2043616e6e6f7420737570706c60448201526207920360ec1b6064820152608401610418565b6106066001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016333084610792565b335f90815260046020526040812080548392839291610626908490610941565b925050819055508060025f82825461063e9190610941565b925050819055508160035f8282546106569190610941565b909155505060405182815233907fadacf827efe383160192c092d8658471945c074229a9746679b5e2b74adff1919060200160405180910390a25061056b60018055565b6106a26107d1565b565b6106ac6107d1565b6106a25f6107fd565b6106bd6107d1565b6001600160a01b0381166106e657604051631e4fbdf760e01b81525f6004820152602401610418565b61056b816107fd565b60026001540361071257604051633ee5aeb560e01b815260040160405180910390fd5b6002600155565b6040516001600160a01b0383811660248301526044820183905261078d91859182169063a9059cbb906064015b604051602081830303815290604052915060e01b6020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050610864565b505050565b6040516001600160a01b0384811660248301528381166044830152606482018390526107cb9186918216906323b872dd90608401610746565b50505050565b5f546001600160a01b031633146106a25760405163118cdaa760e01b8152336004820152602401610418565b5f80546001600160a01b038381167fffffffffffffffffffffffff0000000000000000000000000000000000000000831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b5f5f60205f8451602086015f885af180610883576040513d5f823e3d81fd5b50505f513d9150811561089a5780600114156108a7565b6001600160a01b0384163b155b156107cb57604051635274afe760e01b81526001600160a01b0385166004820152602401610418565b5f602082840312156108e0575f5ffd5b5035919050565b5f602082840312156108f7575f5ffd5b81356001600160a01b038116811461090d575f5ffd5b9392505050565b634e487b7160e01b5f52601160045260245ffd5b8181038181111561093b5761093b610914565b92915050565b8082018082111561093b5761093b61091456fea164736f6c634300081b000a";

type SimpleLendingVaultConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: SimpleLendingVaultConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class SimpleLendingVault__factory extends ContractFactory {
  constructor(...args: SimpleLendingVaultConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    _asset: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(_asset, overrides || {});
  }
  override deploy(
    _asset: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(_asset, overrides || {}) as Promise<
      SimpleLendingVault & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): SimpleLendingVault__factory {
    return super.connect(runner) as SimpleLendingVault__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): SimpleLendingVaultInterface {
    return new Interface(_abi) as SimpleLendingVaultInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): SimpleLendingVault {
    return new Contract(address, _abi, runner) as unknown as SimpleLendingVault;
  }
}
