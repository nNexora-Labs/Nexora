/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../common";
import type {
  SimpleConfidentialLendingVault,
  SimpleConfidentialLendingVaultInterface,
} from "../../contracts/SimpleConfidentialLendingVault";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_asset",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "OwnableInvalidOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "OwnableUnauthorizedAccount",
    type: "error",
  },
  {
    inputs: [],
    name: "ReentrancyGuardReentrantCall",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "ConfidentialSupply",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "ConfidentialWithdraw",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [],
    name: "FIXED_INTEREST_RATE",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "INITIAL_RATE",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "asset",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "currentRate",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getCurrentInterestRate",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "getEncryptedShares",
    outputs: [
      {
        internalType: "euint64",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getEncryptedTotalAssets",
    outputs: [
      {
        internalType: "euint64",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getEncryptedTotalShares",
    outputs: [
      {
        internalType: "euint64",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "lastUpdateTime",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "euint64",
        name: "amount",
        type: "bytes32",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "onConfidentialTransferReceived",
    outputs: [
      {
        internalType: "ebool",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "externalEuint64",
        name: "encryptedAmount",
        type: "bytes32",
      },
      {
        internalType: "bytes",
        name: "inputProof",
        type: "bytes",
      },
    ],
    name: "supply",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x60a0604052670de0b6b3a764000060055534801561001b575f5ffd5b5060405161102b38038061102b83398101604081905261003a9161024f565b338061005f57604051631e4fbdf760e01b81525f600482015260240160405180910390fd5b610068816100b6565b50600180556001600160a01b038116608052426006556100875f610105565b6003556100935f610105565b6004556003546100a290610120565b506004546100af90610120565b50506102c3565b5f80546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b5f61011a6001600160401b038316600561012f565b92915050565b5f61012b82306101d9565b5090565b7fed8d60e34876f751cc8b014c560745351147d9de11b9347c854e881b128ea60154604051639cd07acb60e01b81525f915f51602061100b5f395f51905f52916001600160a01b0390911690639cd07acb90610191908790879060040161027c565b6020604051808303815f875af11580156101ad573d5f5f3e3d5ffd5b505050506040513d601f19601f820116820180604052508101906101d191906102ac565b949350505050565b5f5f51602061100b5f395f51905f528054604051635ca4b5b160e11b8152600481018690526001600160a01b03858116602483015292935091169063b9496b62906044015f604051808303815f87803b158015610234575f5ffd5b505af1158015610246573d5f5f3e3d5ffd5b50505050505050565b5f6020828403121561025f575f5ffd5b81516001600160a01b0381168114610275575f5ffd5b9392505050565b828152604081016054831061029f57634e487b7160e01b5f52602160045260245ffd5b8260208301529392505050565b5f602082840312156102bc575f5ffd5b5051919050565b608051610d1b6102f05f395f8181610169015281816102b0015281816104e4015261052d0152610d1b5ff3fe6080604052600436106100dc575f3560e01c80638da5cb5b1161007c578063f2fde38b11610057578063f2fde38b14610243578063f54e26ff14610262578063f9f8bdb714610276578063ff516c491461028b575f5ffd5b80638da5cb5b146101f3578063946835c51461020f578063c8f33c911461022e575f5ffd5b806338d52e0f116100b757806338d52e0f1461015857806346083bfd146101a35780634dbac733146101c2578063715018a6146101dd575f5ffd5b80632507ea6f146100e75780632f00a0dd1461010a578063306a821f14610124575f5ffd5b366100e357005b5f5ffd5b3480156100f2575f5ffd5b506004545b6040519081526020015b60405180910390f35b348015610115575f5ffd5b506100f766b1a2bc2ec5000081565b34801561012f575f5ffd5b506100f761013e366004610b19565b6001600160a01b03165f9081526002602052604090205490565b348015610163575f5ffd5b5061018b7f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b039091168152602001610101565b3480156101ae575f5ffd5b506100f76101bd366004610b77565b6102a4565b3480156101cd575f5ffd5b506100f7670de0b6b3a764000081565b3480156101e8575f5ffd5b506101f1610434565b005b3480156101fe575f5ffd5b505f546001600160a01b031661018b565b34801561021a575f5ffd5b506101f1610229366004610be1565b610447565b348015610239575f5ffd5b506100f760065481565b34801561024e575f5ffd5b506101f161025d366004610b19565b6105c2565b34801561026d575f5ffd5b506003546100f7565b348015610281575f5ffd5b506100f760055481565b348015610296575f5ffd5b5066b1a2bc2ec500006100f7565b5f336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146103485760405162461bcd60e51b815260206004820152603c60248201527f53696d706c65436f6e666964656e7469616c4c656e64696e675661756c743a2060448201527f4f6e6c79206357455448207472616e736665727320616c6c6f7765640000000060648201526084015b60405180910390fd5b6001600160a01b0385165f90815260026020526040902054849080610373576103705f6105ff565b90505b5f61037e828461061b565b6001600160a01b0389165f9081526002602052604090208190556003549091506103a8908461061b565b6003556004546103b8908861061b565b6004556103c481610650565b506103cf818961065f565b506103db600354610650565b506103e7600454610650565b506040516001600160a01b038916907f57eafa6244c2ffa01bc84d88d86ded072b0a3ffb75b4c4e513347ab1acdd1f30905f90a26104256001610671565b93505050505b95945050505050565b61043c61068c565b6104455f6106b8565b565b61044f61071f565b8061049c5760405162461bcd60e51b815260206004820152601360248201527f496e76616c696420696e7075742070726f6f6600000000000000000000000000604482015260640161033f565b5f6104dc8484848080601f0160208091040260200160405190810160405280939291908181526020018383808284375f9201919091525061074992505050565b9050610508817f0000000000000000000000000000000000000000000000000000000000000000610756565b50604080516020810182525f80825291516363dc53af60e11b81526001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169163c7b8a75e9161056691339130918891600401610c57565b6020604051808303815f875af1158015610582573d5f5f3e3d5ffd5b505050506040513d601f19601f820116820180604052508101906105a69190610c8d565b90506105b181610650565b5050506105bd60018055565b505050565b6105ca61068c565b6001600160a01b0381166105f357604051631e4fbdf760e01b81525f600482015260240161033f565b6105fc816106b8565b50565b5f6106158267ffffffffffffffff166005610761565b92915050565b5f8261062d5761062a5f6105ff565b92505b8161063e5761063b5f6105ff565b91505b61064983835f61081e565b9392505050565b5f61065b82306108fe565b5090565b5f61066a83836108fe565b5090919050565b5f61061582610680575f610683565b60015b60ff165f610761565b5f546001600160a01b031633146104455760405163118cdaa760e01b815233600482015260240161033f565b5f80546001600160a01b038381167fffffffffffffffffffffffff0000000000000000000000000000000000000000831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b60026001540361074257604051633ee5aeb560e01b815260040160405180910390fd5b6002600155565b5f61064983836005610985565b5f61066a8383610aa5565b7fed8d60e34876f751cc8b014c560745351147d9de11b9347c854e881b128ea60154604051639cd07acb60e01b81525f917fed8d60e34876f751cc8b014c560745351147d9de11b9347c854e881b128ea600916001600160a01b0390911690639cd07acb906107d69087908790600401610cc4565b6020604051808303815f875af11580156107f2573d5f5f3e3d5ffd5b505050506040513d601f19601f820116820180604052508101906108169190610c8d565b949350505050565b5f5f82156108315750600160f81b610834565b505f5b5f7fed8d60e34876f751cc8b014c560745351147d9de11b9347c854e881b128ea600600181015460405163022f65e760e31b815260048101899052602481018890527fff00000000000000000000000000000000000000000000000000000000000000851660448201529192506001600160a01b03169063117b2f38906064016020604051808303815f875af11580156108d0573d5f5f3e3d5ffd5b505050506040513d601f19601f820116820180604052508101906108f49190610c8d565b9695505050505050565b7fed8d60e34876f751cc8b014c560745351147d9de11b9347c854e881b128ea6008054604051635ca4b5b160e11b8152600481018590526001600160a01b0384811660248301529091169063b9496b62906044015b5f604051808303815f87803b15801561096a575f5ffd5b505af115801561097c573d5f5f3e3d5ffd5b50505050505050565b7fed8d60e34876f751cc8b014c560745351147d9de11b9347c854e881b128ea6015460405163196d0b9b60e01b81525f917fed8d60e34876f751cc8b014c560745351147d9de11b9347c854e881b128ea600916001600160a01b039091169063196d0b9b906109fe908890339089908990600401610cd8565b6020604051808303815f875af1158015610a1a573d5f5f3e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610a3e9190610c8d565b8154604051630f8e573b60e21b8152600481018390523360248201529193506001600160a01b031690633e395cec906044015f604051808303815f87803b158015610a87575f5ffd5b505af1158015610a99573d5f5f3e3d5ffd5b50505050509392505050565b7fed8d60e34876f751cc8b014c560745351147d9de11b9347c854e881b128ea6008054604051630f8e573b60e21b8152600481018590526001600160a01b03848116602483015290911690633e395cec90604401610953565b80356001600160a01b0381168114610b14575f5ffd5b919050565b5f60208284031215610b29575f5ffd5b61064982610afe565b5f5f83601f840112610b42575f5ffd5b50813567ffffffffffffffff811115610b59575f5ffd5b602083019150836020828501011115610b70575f5ffd5b9250929050565b5f5f5f5f5f60808688031215610b8b575f5ffd5b610b9486610afe565b9450610ba260208701610afe565b935060408601359250606086013567ffffffffffffffff811115610bc4575f5ffd5b610bd088828901610b32565b969995985093965092949392505050565b5f5f5f60408486031215610bf3575f5ffd5b83359250602084013567ffffffffffffffff811115610c10575f5ffd5b610c1c86828701610b32565b9497909650939450505050565b5f81518084528060208401602086015e5f602082860101526020601f19601f83011685010191505092915050565b6001600160a01b03851681526001600160a01b0384166020820152826040820152608060608201525f6108f46080830184610c29565b5f60208284031215610c9d575f5ffd5b5051919050565b60548110610cc057634e487b7160e01b5f52602160045260245ffd5b9052565b828152604081016106496020830184610ca4565b8481526001600160a01b0384166020820152608060408201525f610cff6080830185610c29565b905061042b6060830184610ca456fea164736f6c634300081b000aed8d60e34876f751cc8b014c560745351147d9de11b9347c854e881b128ea600";

type SimpleConfidentialLendingVaultConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: SimpleConfidentialLendingVaultConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class SimpleConfidentialLendingVault__factory extends ContractFactory {
  constructor(...args: SimpleConfidentialLendingVaultConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    _asset: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(_asset, overrides || {});
  }
  override deploy(
    _asset: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(_asset, overrides || {}) as Promise<
      SimpleConfidentialLendingVault & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(
    runner: ContractRunner | null
  ): SimpleConfidentialLendingVault__factory {
    return super.connect(runner) as SimpleConfidentialLendingVault__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): SimpleConfidentialLendingVaultInterface {
    return new Interface(_abi) as SimpleConfidentialLendingVaultInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): SimpleConfidentialLendingVault {
    return new Contract(
      address,
      _abi,
      runner
    ) as unknown as SimpleConfidentialLendingVault;
  }
}
