/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type {
  SimpleConfidentialWETH,
  SimpleConfidentialWETHInterface,
} from "../../../contracts/SimpleConfidentialWETH.sol/SimpleConfidentialWETH";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "OwnableInvalidOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "OwnableUnauthorizedAccount",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "ConfidentialUnwrap",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "ConfidentialWrap",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [],
    name: "WETH",
    outputs: [
      {
        internalType: "contract IWETH",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "balances",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "getBalance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "underlying",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "unwrap",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "wrap",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x6080604052348015600e575f5ffd5b506040516108de3803806108de833981016040819052602b9160b4565b806001600160a01b038116605857604051631e4fbdf760e01b81525f600482015260240160405180910390fd5b605f816065565b505060df565b5f80546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b5f6020828403121560c3575f5ffd5b81516001600160a01b038116811460d8575f5ffd5b9392505050565b6107f2806100ec5f395ff3fe608060405260043610610096575f3560e01c8063ad5c464811610066578063de0e9a3e1161004c578063de0e9a3e1461017a578063f2fde38b14610199578063f8b2cb4f146101b8575f5ffd5b8063ad5c46481461014b578063d46eb11914610172575f5ffd5b806327e235e3146100a15780636f307dc3146100df578063715018a6146101195780638da5cb5b1461012f575f5ffd5b3661009d57005b5f5ffd5b3480156100ac575f5ffd5b506100cc6100bb366004610734565b60016020525f908152604090205481565b6040519081526020015b60405180910390f35b3480156100ea575f5ffd5b50737b79995e5f793a07bc00c21412e50ecae098e7f95b6040516001600160a01b0390911681526020016100d6565b348015610124575f5ffd5b5061012d6101ec565b005b34801561013a575f5ffd5b505f546001600160a01b0316610101565b348015610156575f5ffd5b50610101737b79995e5f793a07bc00c21412e50ecae098e7f981565b61012d6101ff565b348015610185575f5ffd5b5061012d610194366004610761565b6103a0565b3480156101a4575f5ffd5b5061012d6101b3366004610734565b610664565b3480156101c3575f5ffd5b506100cc6101d2366004610734565b6001600160a01b03165f9081526001602052604090205490565b6101f46106a1565b6101fd5f6106cd565b565b5f34116102535760405162461bcd60e51b815260206004820152601160248201527f43616e6e6f74207772617020302045544800000000000000000000000000000060448201526064015b60405180910390fd5b60408051600481526024810182526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff16630d0e30db60e41b17905290515f91737b79995e5f793a07bc00c21412e50ecae098e7f99134916102b591610778565b5f6040518083038185875af1925050503d805f81146102ef576040519150601f19603f3d011682016040523d82523d5f602084013e6102f4565b606091505b50509050806103455760405162461bcd60e51b815260206004820152601360248201527f57455448206465706f736974206661696c656400000000000000000000000000604482015260640161024a565b335f90815260016020526040812080543492906103639084906107a2565b909155505060405134815233907f8e693f21155d7cc5ae7cb9e3503d792863da2969ead663e842086e415306ab619060200160405180910390a250565b5f81116103ef5760405162461bcd60e51b815260206004820152601360248201527f43616e6e6f7420756e7772617020302045544800000000000000000000000000604482015260640161024a565b335f9081526001602052604090205481111561044d5760405162461bcd60e51b815260206004820152601a60248201527f496e73756666696369656e742063574554482062616c616e6365000000000000604482015260640161024a565b6040516370a0823160e01b81523060048201525f90737b79995e5f793a07bc00c21412e50ecae098e7f9906370a0823190602401602060405180830381865afa15801561049c573d5f5f3e3d5ffd5b505050506040513d601f19601f820116820180604052508101906104c091906107bb565b9050818110156105125760405162461bcd60e51b815260206004820152601960248201527f496e73756666696369656e7420574554482062616c616e636500000000000000604482015260640161024a565b335f90815260016020526040812080548492906105309084906107d2565b9091555050604051632e1a7d4d60e01b815260048101839052737b79995e5f793a07bc00c21412e50ecae098e7f990632e1a7d4d906024015f604051808303815f87803b15801561057f575f5ffd5b505af1158015610591573d5f5f3e3d5ffd5b50506040515f925033915084908381818185875af1925050503d805f81146105d4576040519150601f19603f3d011682016040523d82523d5f602084013e6105d9565b606091505b505090508061062a5760405162461bcd60e51b815260206004820152601360248201527f455448207472616e73666572206661696c656400000000000000000000000000604482015260640161024a565b60405183815233907f9d7f2279aace2ad5add3b80bf2a974bc059239efddaf7c5d5c0bf32d8707e1f39060200160405180910390a2505050565b61066c6106a1565b6001600160a01b03811661069557604051631e4fbdf760e01b81525f600482015260240161024a565b61069e816106cd565b50565b5f546001600160a01b031633146101fd5760405163118cdaa760e01b815233600482015260240161024a565b5f80546001600160a01b038381167fffffffffffffffffffffffff0000000000000000000000000000000000000000831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b5f60208284031215610744575f5ffd5b81356001600160a01b038116811461075a575f5ffd5b9392505050565b5f60208284031215610771575f5ffd5b5035919050565b5f82518060208501845e5f920191825250919050565b634e487b7160e01b5f52601160045260245ffd5b808201808211156107b5576107b561078e565b92915050565b5f602082840312156107cb575f5ffd5b5051919050565b818103818111156107b5576107b561078e56fea164736f6c634300081b000a";

type SimpleConfidentialWETHConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: SimpleConfidentialWETHConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class SimpleConfidentialWETH__factory extends ContractFactory {
  constructor(...args: SimpleConfidentialWETHConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    owner: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(owner, overrides || {});
  }
  override deploy(
    owner: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(owner, overrides || {}) as Promise<
      SimpleConfidentialWETH & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(
    runner: ContractRunner | null
  ): SimpleConfidentialWETH__factory {
    return super.connect(runner) as SimpleConfidentialWETH__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): SimpleConfidentialWETHInterface {
    return new Interface(_abi) as SimpleConfidentialWETHInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): SimpleConfidentialWETH {
    return new Contract(
      address,
      _abi,
      runner
    ) as unknown as SimpleConfidentialWETH;
  }
}
