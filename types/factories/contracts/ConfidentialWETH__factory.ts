/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../common";
import type {
  ConfidentialWETH,
  ConfidentialWETHInterface,
} from "../../contracts/ConfidentialWETH";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "string",
        name: "symbol",
        type: "string",
      },
      {
        internalType: "string",
        name: "uri",
        type: "string",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "requestId",
        type: "uint256",
      },
    ],
    name: "ConfidentialFungibleTokenInvalidGatewayRequest",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "receiver",
        type: "address",
      },
    ],
    name: "ConfidentialFungibleTokenInvalidReceiver",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "ConfidentialFungibleTokenInvalidSender",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "caller",
        type: "address",
      },
    ],
    name: "ConfidentialFungibleTokenUnauthorizedCaller",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "holder",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "ConfidentialFungibleTokenUnauthorizedSpender",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "euint64",
        name: "amount",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "ConfidentialFungibleTokenUnauthorizedUseOfEncryptedAmount",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "holder",
        type: "address",
      },
    ],
    name: "ConfidentialFungibleTokenZeroBalance",
    type: "error",
  },
  {
    inputs: [],
    name: "HandlesAlreadySavedForRequestID",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidKMSSignatures",
    type: "error",
  },
  {
    inputs: [],
    name: "NoHandleFoundForRequestID",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "OwnableInvalidOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "OwnableUnauthorizedAccount",
    type: "error",
  },
  {
    inputs: [],
    name: "UnsupportedHandleType",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "euint64",
        name: "encryptedAmount",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "uint64",
        name: "amount",
        type: "uint64",
      },
    ],
    name: "AmountDisclosed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "euint64",
        name: "amount",
        type: "bytes32",
      },
    ],
    name: "ConfidentialTransfer",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "ConfidentialUnwrap",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "ConfidentialWrap",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "requestID",
        type: "uint256",
      },
    ],
    name: "DecryptionFulfilled",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "holder",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint48",
        name: "until",
        type: "uint48",
      },
    ],
    name: "OperatorSet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [],
    name: "WETH",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "completeUnwrap",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "confidentialBalanceOf",
    outputs: [
      {
        internalType: "euint64",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "confidentialTotalSupply",
    outputs: [
      {
        internalType: "euint64",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "externalEuint64",
        name: "encryptedAmount",
        type: "bytes32",
      },
      {
        internalType: "bytes",
        name: "inputProof",
        type: "bytes",
      },
    ],
    name: "confidentialTransfer",
    outputs: [
      {
        internalType: "euint64",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "euint64",
        name: "amount",
        type: "bytes32",
      },
    ],
    name: "confidentialTransfer",
    outputs: [
      {
        internalType: "euint64",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "euint64",
        name: "amount",
        type: "bytes32",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "confidentialTransferAndCall",
    outputs: [
      {
        internalType: "euint64",
        name: "transferred",
        type: "bytes32",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "externalEuint64",
        name: "encryptedAmount",
        type: "bytes32",
      },
      {
        internalType: "bytes",
        name: "inputProof",
        type: "bytes",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "confidentialTransferAndCall",
    outputs: [
      {
        internalType: "euint64",
        name: "transferred",
        type: "bytes32",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "externalEuint64",
        name: "encryptedAmount",
        type: "bytes32",
      },
      {
        internalType: "bytes",
        name: "inputProof",
        type: "bytes",
      },
    ],
    name: "confidentialTransferFrom",
    outputs: [
      {
        internalType: "euint64",
        name: "transferred",
        type: "bytes32",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "euint64",
        name: "amount",
        type: "bytes32",
      },
    ],
    name: "confidentialTransferFrom",
    outputs: [
      {
        internalType: "euint64",
        name: "transferred",
        type: "bytes32",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "externalEuint64",
        name: "encryptedAmount",
        type: "bytes32",
      },
      {
        internalType: "bytes",
        name: "inputProof",
        type: "bytes",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "confidentialTransferFromAndCall",
    outputs: [
      {
        internalType: "euint64",
        name: "transferred",
        type: "bytes32",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "euint64",
        name: "amount",
        type: "bytes32",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "confidentialTransferFromAndCall",
    outputs: [
      {
        internalType: "euint64",
        name: "transferred",
        type: "bytes32",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "euint64",
        name: "encryptedAmount",
        type: "bytes32",
      },
    ],
    name: "discloseEncryptedAmount",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "requestId",
        type: "uint256",
      },
      {
        internalType: "uint64",
        name: "amount",
        type: "uint64",
      },
      {
        internalType: "bytes[]",
        name: "signatures",
        type: "bytes[]",
      },
    ],
    name: "finalizeDiscloseEncryptedAmount",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "getEncryptedBalance",
    outputs: [
      {
        internalType: "euint64",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "holder",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "isOperator",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "rate",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "uint48",
        name: "until",
        type: "uint48",
      },
    ],
    name: "setOperator",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "underlying",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "externalEuint64",
        name: "amountInput",
        type: "bytes32",
      },
      {
        internalType: "bytes",
        name: "inputProof",
        type: "bytes",
      },
    ],
    name: "unwrap",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "wrap",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561000f575f5ffd5b50604051612f9d380380612f9d83398101604081905261002e9161034a565b83838383600461003e848261047c565b50600561004b838261047c565b506006610058828261047c565b5050506001600160a01b038216905061008a57604051631e4fbdf760e01b81525f600482015260240160405180910390fd5b6100938161025c565b5061020e610132604080516080810182525f808252602082018190529181018290526060810191909152506040805160808101825273687820221192c5b662b25367f70076a37bc79b6c815273848b0066793bcc60346da1f49049357399b8d5956020820152731364cbbf2cdf5032c47d8226a6f6fbd2afcdacac9181019190915273bc91f3dad1a5f19f8390c400196e58073b6a0bc4606082015290565b80517fed8d60e34876f751cc8b014c560745351147d9de11b9347c854e881b128ea60080546001600160a01b03199081166001600160a01b039384161790915560208301517fed8d60e34876f751cc8b014c560745351147d9de11b9347c854e881b128ea6018054831691841691909117905560408301517fed8d60e34876f751cc8b014c560745351147d9de11b9347c854e881b128ea6028054831691841691909117905560608301517fed8d60e34876f751cc8b014c560745351147d9de11b9347c854e881b128ea6038054909216921691909117905550565b7f5ea69329017273582817d320489fbd94f775580e90c092699ca6f3d12fdf7d0080546001600160a01b03191673a02cda4ca3a71d7c46997716f4283aa851c2881217905550505050610536565b600780546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0905f90a35050565b634e487b7160e01b5f52604160045260245ffd5b5f82601f8301126102d0575f5ffd5b81516001600160401b038111156102e9576102e96102ad565b604051601f8201601f19908116603f011681016001600160401b0381118282101715610317576103176102ad565b60405281815283820160200185101561032e575f5ffd5b8160208501602083015e5f918101602001919091529392505050565b5f5f5f5f6080858703121561035d575f5ffd5b84516001600160a01b0381168114610373575f5ffd5b60208601519094506001600160401b0381111561038e575f5ffd5b61039a878288016102c1565b604087015190945090506001600160401b038111156103b7575f5ffd5b6103c3878288016102c1565b606087015190935090506001600160401b038111156103e0575f5ffd5b6103ec878288016102c1565b91505092959194509250565b600181811c9082168061040c57607f821691505b60208210810361042a57634e487b7160e01b5f52602260045260245ffd5b50919050565b601f82111561047757805f5260205f20601f840160051c810160208510156104555750805b601f840160051c820191505b81811015610474575f8155600101610461565b50505b505050565b81516001600160401b03811115610495576104956102ad565b6104a9816104a384546103f8565b84610430565b6020601f8211600181146104db575f83156104c45750848201515b5f19600385901b1c1916600184901b178455610474565b5f84815260208120601f198516915b8281101561050a57878501518255602094850194600190920191016104ea565b508482101561052757868401515f19600387901b60f8161c191681555b50505050600190811b01905550565b612a5a806105435f395ff3fe6080604052600436106101af575f3560e01c80638da5cb5b116100e7578063d4febb9611610087578063e064b9bb11610062578063e064b9bb146104a5578063e2229282146104c4578063eb3155b5146104e3578063f2fde38b14610502575f5ffd5b8063d4febb9614610448578063dcd56a4114610467578063de64211914610486575f5ffd5b8063b6363cf2116100c2578063b6363cf2146103d3578063c535803c14610402578063c7b8a75e14610421578063d46eb11914610440575f5ffd5b80638da5cb5b1461037b57806395d89b4114610398578063ad5c4648146103ac575f5ffd5b8063402dc4e4116101525780635bebed7e1161012d5780635bebed7e146102ed5780636f307dc31461030c578063715018a6146103465780637279e2641461035c575f5ffd5b8063402dc4e41461029b578063537d3c50146102ba57806354095227146102d9575f5ffd5b8063313ce5671161018d578063313ce56714610219578063344ff1011461023457806334c45743146102685780633c130d9014610287575f5ffd5b806306fdde03146101b35780632c4e722e146101dd5780632fb74e62146101fa575b5f5ffd5b3480156101be575f5ffd5b506101c7610521565b6040516101d49190612258565b60405180910390f35b3480156101e8575f5ffd5b5060015b6040519081526020016101d4565b348015610205575f5ffd5b506101ec6102143660046122c3565b6105b1565b348015610224575f5ffd5b50604051600681526020016101d4565b34801561023f575f5ffd5b506101ec61024e366004612319565b6001600160a01b03165f9081526020819052604090205490565b348015610273575f5ffd5b506101ec610282366004612332565b610604565b348015610292575f5ffd5b506101c76106ad565b3480156102a6575f5ffd5b506101ec6102b5366004612319565b6106bc565b3480156102c5575f5ffd5b506101ec6102d43660046122c3565b6106db565b3480156102e4575f5ffd5b506003546101ec565b3480156102f8575f5ffd5b506101ec6103073660046123cb565b61073d565b348015610317575f5ffd5b50737b79995e5f793a07bc00c21412e50ecae098e7f95b6040516001600160a01b0390911681526020016101d4565b348015610351575f5ffd5b5061035a61078f565b005b348015610367575f5ffd5b5061035a610376366004612438565b6107a2565b348015610386575f5ffd5b506007546001600160a01b031661032e565b3480156103a3575f5ffd5b506101c761082f565b3480156103b7575f5ffd5b5061032e737b79995e5f793a07bc00c21412e50ecae098e7f981565b3480156103de575f5ffd5b506103f26103ed366004612589565b61083e565b60405190151581526020016101d4565b34801561040d575f5ffd5b5061035a61041c3660046125b1565b610890565b34801561042c575f5ffd5b506101ec61043b3660046125c8565b610946565b61035a6109e9565b348015610453575f5ffd5b5061035a610462366004612632565b610b88565b348015610472575f5ffd5b5061035a610481366004612671565b610b97565b348015610491575f5ffd5b506101ec6104a03660046126b9565b610c14565b3480156104b0575f5ffd5b506101ec6104bf3660046125c8565b610c70565b3480156104cf575f5ffd5b5061035a6104de3660046125b1565b610cf5565b3480156104ee575f5ffd5b506101ec6104fd366004612742565b611022565b34801561050d575f5ffd5b5061035a61051c366004612319565b6110c1565b6060600480546105309061277c565b80601f016020809104026020016040519081016040528092919081815260200182805461055c9061277c565b80156105a75780601f1061057e576101008083540402835291602001916105a7565b820191905f5260205f20905b81548152906001019060200180831161058a57829003601f168201915b5050505050905090565b5f6105fb33866105f68787878080601f0160208091040260200160405190810160405280939291908181526020018383808284375f920191909152506110fe92505050565b61110b565b95945050505050565b5f61060f883361083e565b8833909161064857604051631ae7729b60e11b81526001600160a01b039283166004820152911660248201526044015b60405180910390fd5b5050610695888861068e8989898080601f0160208091040260200160405190810160405280939291908181526020018383808284375f920191909152506110fe92505050565b8686611189565b90506106a181336111e0565b50979650505050505050565b6060600680546105309061277c565b6001600160a01b0381165f908152602081905260408120545b92915050565b5f6106e684336111f2565b843390916107195760405163118f6e5360e31b815260048101929092526001600160a01b0316602482015260440161063f565b50506107283386868686611189565b905061073481336111e0565b50949350505050565b5f61074882336111f2565b8233909161077b5760405163118f6e5360e31b815260048101929092526001600160a01b0316602482015260440161063f565b505061078833848461110b565b9392505050565b6107976111fd565b6107a05f61122a565b565b6107ac8382611293565b5f8381526002602052604090205483816107dc57604051630ab5f57d60e01b815260040161063f91815260200190565b5060405167ffffffffffffffff8416815281907f83bbbc07896439e5d950a6cead04cbc676180af7a61cecf43f5296475057f5719060200160405180910390a25050505f90815260026020526040812055565b6060600580546105309061277c565b5f816001600160a01b0316836001600160a01b031614806107885750506001600160a01b039182165f90815260016020908152604080832093909416825291909152205465ffffffffffff1642111590565b61089a81336111f2565b80156108ab57506108ab81306111f2565b813390916108de5760405163118f6e5360e31b815260048101929092526001600160a01b0316602482015260440161063f565b50506040805160018082528183019092525f916020808301908036833701905050905081815f81518110610914576109146127b4565b60209081029190910101525f61093182631c9e789960e21b6112fa565b5f908152600260205260409020929092555050565b5f61095184336111f2565b843390916109845760405163118f6e5360e31b815260048101929092526001600160a01b0316602482015260440161063f565b5050610990863361083e565b863390916109c457604051631ae7729b60e11b81526001600160a01b0392831660048201529116602482015260440161063f565b50506109d38686868686611189565b90506109df81336111e0565b5095945050505050565b5f3411610a445760405162461bcd60e51b815260206004820152602360248201527f436f6e666964656e7469616c574554483a2043616e6e6f74207772617020302060448201526208aa8960eb1b606482015260840161063f565b60408051600481526024810182526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff16630d0e30db60e41b17905290515f91737b79995e5f793a07bc00c21412e50ecae098e7f9913491610aa6916127c8565b5f6040518083038185875af1925050503d805f8114610ae0576040519150601f19603f3d011682016040523d82523d5f602084013e610ae5565b606091505b5050905080610b445760405162461bcd60e51b815260206004820152602560248201527f436f6e666964656e7469616c574554483a2057455448206465706f7369742066604482015264185a5b195960da1b606482015260840161063f565b3480610b5833610b5383611306565b61131c565b5060405133907f9cb777e5cc5a3050cb652a50361cf4e165e4706a58b64a46634d986cd91d4de1905f90a2505050565b610b9333838361135d565b5050565b5f610bd78484848080601f0160208091040260200160405190810160405280939291908181526020018383808284375f920191909152506110fe92505050565b9050610be333826113d4565b5060405133907fdbd0a6ec4d3effbfc17269b7a8674c757e5deb8c9d6ff84afe1b5b64c590ac0c905f90a250505050565b5f610c59338861068e8989898080601f0160208091040260200160405190810160405280939291908181526020018383808284375f920191909152506110fe92505050565b9050610c6581336111e0565b509695505050505050565b5f610c7b863361083e565b86339091610caf57604051631ae7729b60e11b81526001600160a01b0392831660048201529116602482015260440161063f565b50506109d386866105f68787878080601f0160208091040260200160405190810160405280939291908181526020018383808284375f920191909152506110fe92505050565b5f8111610d6a5760405162461bcd60e51b815260206004820152602560248201527f436f6e666964656e7469616c574554483a2043616e6e6f7420756e777261702060448201527f3020455448000000000000000000000000000000000000000000000000000000606482015260840161063f565b6040516370a0823160e01b81523060048201525f90737b79995e5f793a07bc00c21412e50ecae098e7f9906370a0823190602401602060405180830381865afa158015610db9573d5f5f3e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610ddd91906127de565b905081811015610e555760405162461bcd60e51b815260206004820152602b60248201527f436f6e666964656e7469616c574554483a20496e73756666696369656e74205760448201527f4554482062616c616e6365000000000000000000000000000000000000000000606482015260840161063f565b604051602481018390525f90737b79995e5f793a07bc00c21412e50ecae098e7f99060440160408051601f198184030181529181526020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff16632e1a7d4d60e01b17905251610ec491906127c8565b5f604051808303815f865af19150503d805f8114610efd576040519150601f19603f3d011682016040523d82523d5f602084013e610f02565b606091505b5050905080610f795760405162461bcd60e51b815260206004820152602660248201527f436f6e666964656e7469616c574554483a20574554482077697468647261772060448201527f6661696c65640000000000000000000000000000000000000000000000000000606482015260840161063f565b6040515f90339085908381818185875af1925050503d805f8114610fb8576040519150601f19603f3d011682016040523d82523d5f602084013e610fbd565b606091505b505090508061101c5760405162461bcd60e51b815260206004820152602560248201527f436f6e666964656e7469616c574554483a20455448207472616e736665722066604482015264185a5b195960da1b606482015260840161063f565b50505050565b5f61102d82336111f2565b823390916110605760405163118f6e5360e31b815260048101929092526001600160a01b0316602482015260440161063f565b505061106c843361083e565b843390916110a057604051631ae7729b60e11b81526001600160a01b0392831660048201529116602482015260440161063f565b50506110ad84848461110b565b90506110b981336111e0565b509392505050565b6110c96111fd565b6001600160a01b0381166110f257604051631e4fbdf760e01b81525f600482015260240161063f565b6110fb8161122a565b50565b5f61078883836005611415565b5f806001600160a01b03851661114057604051631a9bbf8b60e11b81526001600160a01b03909116600482015260240161063f565b505f6001600160a01b03841661117557604051636e41946d60e11b81526001600160a01b03909116600482015260240161063f565b50611181848484611522565b949350505050565b5f5f61119687878761110b565b90505f6111a73389898589896116ff565b90505f6111c7888a6111c2856111bc5f611306565b88611803565b611522565b90506111d3838261180f565b9998505050505050505050565b5f6111eb838361183d565b5090919050565b5f61078883836118b1565b6007546001600160a01b031633146107a05760405163118cdaa760e01b815233600482015260240161063f565b600780546001600160a01b038381167fffffffffffffffffffffffff0000000000000000000000000000000000000000831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0905f90a35050565b5f61129d83611935565b90505f6112aa8284611a06565b9050806112ca5760405163cf6c44e960e01b815260040160405180910390fd5b60405184907f1af0453083661051f6e56e5c070792320652e612154bf9af8637bb1e7655b99d905f90a250505050565b5f61078883835f611b0e565b5f6106d58267ffffffffffffffff166005611c47565b5f806001600160a01b03841661135157604051636e41946d60e11b81526001600160a01b03909116600482015260240161063f565b506107885f8484611522565b6001600160a01b038381165f81815260016020908152604080832094871680845294825291829020805465ffffffffffff191665ffffffffffff871690811790915591519182527f921a218a75d18e8ec5704851e6b234a85725b21a2521ce889622c35dedc1fa12910160405180910390a3505050565b5f806001600160a01b03841661140957604051631a9bbf8b60e11b81526001600160a01b03909116600482015260240161063f565b50610788835f84611522565b7fed8d60e34876f751cc8b014c560745351147d9de11b9347c854e881b128ea6015460405163196d0b9b60e01b81525f915f516020612a2e5f395f51905f52916001600160a01b039091169063196d0b9b9061147b908890339089908990600401612829565b6020604051808303815f875af1158015611497573d5f5f3e3d5ffd5b505050506040513d601f19601f820116820180604052508101906114bb91906127de565b8154604051630f8e573b60e21b8152600481018390523360248201529193506001600160a01b031690633e395cec906044015f604051808303815f87803b158015611504575f5ffd5b505af1158015611516573d5f5f3e3d5ffd5b50505050509392505050565b5f80806001600160a01b0386166115585761153f60035485611ce9565b909250905061154d81611d33565b5060038190556115dc565b6001600160a01b0386165f90815260208190526040902054868161159b57604051636b8830d760e11b81526001600160a01b03909116600482015260240161063f565b506115a68186611d42565b90935091506115b482611d33565b506115bf8288611d6d565b50506001600160a01b0386165f9081526020819052604090208190555b6115ef82856115ea5f611306565b611803565b92506001600160a01b0385166116215761160b6003548461180f565b905061161681611d33565b506003819055611675565b6001600160a01b0385165f908152602081905260409020546116439084611d78565b905061164e81611d33565b506116598186611d6d565b506001600160a01b0385165f9081526020819052604090208190555b6001600160a01b038616156116905761168e8387611d6d565b505b6001600160a01b038516156116ab576116a98386611d6d565b505b6116b483611d33565b5082856001600160a01b0316876001600160a01b03167f67500e8d0ed826d2194f514dd0d8124f35648ab6e3fb5e6ed867134cffe661e960405160405180910390a450509392505050565b5f6001600160a01b0385163b156117ec576040516346083bfd60e01b81526001600160a01b038616906346083bfd90611744908a908a9089908990899060040161285f565b6020604051808303815f875af192505050801561177e575060408051601f3d908101601f1916820190925261177b918101906127de565b60015b6117e5573d8080156117ab576040519150601f19603f3d011682016040523d82523d5f602084013e6117b0565b606091505b5080515f036117dd57604051636e41946d60e11b81526001600160a01b038716600482015260240161063f565b805181602001fd5b90506117f9565b6117f66001611da6565b90505b9695505050505050565b5f611181848484611dc1565b5f826118215761181e5f611306565b92505b816118325761182f5f611306565b91505b61078883835f611e4e565b5f516020612a2e5f395f51905f528054604051630f8e573b60e21b8152600481018590526001600160a01b03848116602483015290911690633e395cec906044015b5f604051808303815f87803b158015611896575f5ffd5b505af11580156118a8573d5f5f3e3d5ffd5b50505050505050565b5f805f516020612a2e5f395f51905f5280546040516382027b6d60e01b8152600481018790526001600160a01b0386811660248301529293509116906382027b6d90604401602060405180830381865afa158015611911573d5f5f3e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061118191906128b4565b5f8181527f5ea69329017273582817d320489fbd94f775580e90c092699ca6f3d12fdf7d0260205260408120546060917f5ea69329017273582817d320489fbd94f775580e90c092699ca6f3d12fdf7d009190036119a65760405163d66ca67560e01b815260040160405180910390fd5b5f838152600282016020908152604091829020805483518184028101840190945280845290918301828280156119f957602002820191905f5260205f20905b8154815260200190600101908083116119e5575b5050505050915050919050565b5f602481611a1385611f14565b90505f8167ffffffffffffffff811115611a2f57611a2f6123f3565b6040519080825280601f01601f191660200182016040528015611a59576020820181803683370190505b509050818360208301377fed8d60e34876f751cc8b014c560745351147d9de11b9347c854e881b128ea60254604051632c027b1360e21b81525f516020612a2e5f395f51905f52916001600160a01b03169063b009ec4c90611ac3908a9086908b9060040161290d565b6020604051808303815f875af1158015611adf573d5f5f3e3d5ffd5b505050506040513d601f19601f82011682018060405250810190611b0391906128b4565b979650505050505050565b7f5ea69329017273582817d320489fbd94f775580e90c092699ca6f3d12fdf7d01545f516020612a2e5f395f51905f528054604051637d6e912360e11b81527f5ea69329017273582817d320489fbd94f775580e90c092699ca6f3d12fdf7d0092916001600160a01b03169063fadd224690611b8e908990600401612997565b5f604051808303815f87803b158015611ba5575f5ffd5b505af1158015611bb7573d5f5f3e3d5ffd5b50508354604051633263b83b60e01b81526001600160a01b039091169250633263b83b91508690611bf09087908b908b906004016129a9565b5f604051808303818588803b158015611c07575f5ffd5b505af1158015611c19573d5f5f3e3d5ffd5b5050505050611c288387611fc1565b600182018054905f611c39836129ee565b919050555050509392505050565b7fed8d60e34876f751cc8b014c560745351147d9de11b9347c854e881b128ea60154604051639cd07acb60e01b81525f915f516020612a2e5f395f51905f52916001600160a01b0390911690639cd07acb90611ca99087908790600401612a06565b6020604051808303815f875af1158015611cc5573d5f5f3e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061118191906127de565b5f8083611d0457611cfa6001611da6565b9150829050611d2c565b5f611d0f8585611d78565b9050611d1b818661204e565b9250611d28838287611803565b9150505b9250929050565b5f611d3e823061207c565b5090565b5f5f611d4e848461204e565b9150611d6482611d5e868661180f565b86611803565b90509250929050565b5f6111eb838361207c565b5f82611d8a57611d875f611306565b92505b81611d9b57611d985f611306565b91505b61078883835f6120c2565b5f6106d582611db5575f611db8565b60015b60ff165f611c47565b5f805f516020612a2e5f395f51905f526001810154604051637702dcff60e01b81526004810188905260248101879052604481018690529192506001600160a01b031690637702dcff906064016020604051808303815f875af1158015611e2a573d5f5f3e3d5ffd5b505050506040513d601f19601f820116820180604052508101906105fb91906127de565b5f5f8215611e615750600160f81b611e64565b505f5b7fed8d60e34876f751cc8b014c560745351147d9de11b9347c854e881b128ea601546040516303056db360e31b815260048101879052602481018690526001600160f81b0319831660448201525f516020612a2e5f395f51905f52916001600160a01b03169063182b6d98906064015b6020604051808303815f875af1158015611ef0573d5f5f3e3d5ffd5b505050506040513d601f19601f820116820180604052508101906117f991906127de565b80515f9081805b82811015611fb5575f858281518110611f3657611f366127b4565b6020026020010151601e60208110611f5057611f506127b4565b1a6053811115611f6257611f626127f5565b90506009816053811115611f7857611f786127f5565b60ff161015611f9357611f8c602084612a1a565b9250611fac565b60405163ce54a8d160e01b815260040160405180910390fd5b50600101611f1b565b50611181602082612a1a565b5f8281527f5ea69329017273582817d320489fbd94f775580e90c092699ca6f3d12fdf7d0260205260409020547f5ea69329017273582817d320489fbd94f775580e90c092699ca6f3d12fdf7d00901561202e57604051633f06d22b60e01b815260040160405180910390fd5b5f8381526002820160209081526040909120835161101c928501906121d6565b5f826120605761205d5f611306565b92505b816120715761206e5f611306565b91505b61078883835f61214c565b5f516020612a2e5f395f51905f528054604051635ca4b5b160e11b8152600481018590526001600160a01b0384811660248301529091169063b9496b629060440161187f565b5f5f82156120d55750600160f81b6120d8565b505f5b7fed8d60e34876f751cc8b014c560745351147d9de11b9347c854e881b128ea6015460405163022f65e760e31b815260048101879052602481018690526001600160f81b0319831660448201525f516020612a2e5f395f51905f52916001600160a01b03169063117b2f3890606401611ed4565b5f5f821561215f5750600160f81b612162565b505f5b7fed8d60e34876f751cc8b014c560745351147d9de11b9347c854e881b128ea60154604051631391547f60e01b815260048101879052602481018690526001600160f81b0319831660448201525f516020612a2e5f395f51905f52916001600160a01b031690631391547f90606401611ed4565b828054828255905f5260205f2090810192821561220f579160200282015b8281111561220f5782518255916020019190600101906121f4565b50611d3e9291505b80821115611d3e575f8155600101612217565b5f81518084528060208401602086015e5f602082860101526020601f19601f83011685010191505092915050565b602081525f610788602083018461222a565b80356001600160a01b0381168114612280575f5ffd5b919050565b5f5f83601f840112612295575f5ffd5b50813567ffffffffffffffff8111156122ac575f5ffd5b602083019150836020828501011115611d2c575f5ffd5b5f5f5f5f606085870312156122d6575f5ffd5b6122df8561226a565b935060208501359250604085013567ffffffffffffffff811115612301575f5ffd5b61230d87828801612285565b95989497509550505050565b5f60208284031215612329575f5ffd5b6107888261226a565b5f5f5f5f5f5f5f60a0888a031215612348575f5ffd5b6123518861226a565b965061235f6020890161226a565b955060408801359450606088013567ffffffffffffffff811115612381575f5ffd5b61238d8a828b01612285565b909550935050608088013567ffffffffffffffff8111156123ac575f5ffd5b6123b88a828b01612285565b989b979a50959850939692959293505050565b5f5f604083850312156123dc575f5ffd5b6123e58361226a565b946020939093013593505050565b634e487b7160e01b5f52604160045260245ffd5b604051601f8201601f1916810167ffffffffffffffff81118282101715612430576124306123f3565b604052919050565b5f5f5f6060848603121561244a575f5ffd5b83359250602084013567ffffffffffffffff81168114612468575f5ffd5b9150604084013567ffffffffffffffff811115612483575f5ffd5b8401601f81018613612493575f5ffd5b803567ffffffffffffffff8111156124ad576124ad6123f3565b8060051b6124bd60208201612407565b918252602081840181019290810190898411156124d8575f5ffd5b6020850192505b8383101561257a57823567ffffffffffffffff8111156124fd575f5ffd5b8501603f81018b1361250d575f5ffd5b602081013567ffffffffffffffff81111561252a5761252a6123f3565b61253d601f8201601f1916602001612407565b8181526040838301018d1015612551575f5ffd5b816040840160208301375f602083830101528085525050506020820191506020830192506124df565b80955050505050509250925092565b5f5f6040838503121561259a575f5ffd5b6125a38361226a565b9150611d646020840161226a565b5f602082840312156125c1575f5ffd5b5035919050565b5f5f5f5f5f608086880312156125dc575f5ffd5b6125e58661226a565b94506125f36020870161226a565b935060408601359250606086013567ffffffffffffffff811115612615575f5ffd5b61262188828901612285565b969995985093965092949392505050565b5f5f60408385031215612643575f5ffd5b61264c8361226a565b9150602083013565ffffffffffff81168114612666575f5ffd5b809150509250929050565b5f5f5f60408486031215612683575f5ffd5b83359250602084013567ffffffffffffffff8111156126a0575f5ffd5b6126ac86828701612285565b9497909650939450505050565b5f5f5f5f5f5f608087890312156126ce575f5ffd5b6126d78761226a565b955060208701359450604087013567ffffffffffffffff8111156126f9575f5ffd5b61270589828a01612285565b909550935050606087013567ffffffffffffffff811115612724575f5ffd5b61273089828a01612285565b979a9699509497509295939492505050565b5f5f5f60608486031215612754575f5ffd5b61275d8461226a565b925061276b6020850161226a565b929592945050506040919091013590565b600181811c9082168061279057607f821691505b6020821081036127ae57634e487b7160e01b5f52602260045260245ffd5b50919050565b634e487b7160e01b5f52603260045260245ffd5b5f82518060208501845e5f920191825250919050565b5f602082840312156127ee575f5ffd5b5051919050565b634e487b7160e01b5f52602160045260245ffd5b6054811061282557634e487b7160e01b5f52602160045260245ffd5b9052565b8481526001600160a01b0384166020820152608060408201525f612850608083018561222a565b90506105fb6060830184612809565b6001600160a01b03861681526001600160a01b038516602082015283604082015260806060820152816080820152818360a08301375f81830160a090810191909152601f909201601f19160101949350505050565b5f602082840312156128c4575f5ffd5b81518015158114610788575f5ffd5b5f8151808452602084019350602083015f5b828110156129035781518652602095860195909101906001016128e5565b5093949350505050565b606081525f61291f60608301866128d3565b8281036020840152612931818661222a565b9050828103604084015280845180835260208301915060208160051b840101602087015f5b8381101561298857601f1986840301855261297283835161222a565b6020958601959093509190910190600101612956565b50909998505050505050505050565b602081525f61078860208301846128d3565b838152606060208201525f6129c160608301856128d3565b905063ffffffff60e01b83166040830152949350505050565b634e487b7160e01b5f52601160045260245ffd5b5f600182016129ff576129ff6129da565b5060010190565b828152604081016107886020830184612809565b808201808211156106d5576106d56129da56feed8d60e34876f751cc8b014c560745351147d9de11b9347c854e881b128ea600a164736f6c634300081b000a";

type ConfidentialWETHConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ConfidentialWETHConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ConfidentialWETH__factory extends ContractFactory {
  constructor(...args: ConfidentialWETHConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    owner: AddressLike,
    name: string,
    symbol: string,
    uri: string,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(
      owner,
      name,
      symbol,
      uri,
      overrides || {}
    );
  }
  override deploy(
    owner: AddressLike,
    name: string,
    symbol: string,
    uri: string,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(owner, name, symbol, uri, overrides || {}) as Promise<
      ConfidentialWETH & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): ConfidentialWETH__factory {
    return super.connect(runner) as ConfidentialWETH__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ConfidentialWETHInterface {
    return new Interface(_abi) as ConfidentialWETHInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): ConfidentialWETH {
    return new Contract(address, _abi, runner) as unknown as ConfidentialWETH;
  }
}
