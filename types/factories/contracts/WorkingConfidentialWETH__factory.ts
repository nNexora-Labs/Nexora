/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../common";
import type {
  WorkingConfidentialWETH,
  WorkingConfidentialWETHInterface,
} from "../../contracts/WorkingConfidentialWETH";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "OwnableInvalidOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "OwnableUnauthorizedAccount",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "ConfidentialUnwrap",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "ConfidentialWrap",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "OperatorSet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "euint64",
        name: "amount",
        type: "bytes32",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "confidentialTransferFromAndCall",
    outputs: [
      {
        internalType: "euint64",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "emergencyWithdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "getEncryptedBalance",
    outputs: [
      {
        internalType: "euint64",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getEncryptedTotalSupply",
    outputs: [
      {
        internalType: "euint64",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isOperator",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setOperator",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "wrap",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x608060405234801561000f575f5ffd5b50338061003557604051631e4fbdf760e01b81525f600482015260240160405180910390fd5b61003e8161005c565b506100485f6100ab565b6002819055610056906100c6565b5061023c565b5f80546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b5f6100c06001600160401b03831660056100d5565b92915050565b5f6100d1823061017f565b5090565b7fed8d60e34876f751cc8b014c560745351147d9de11b9347c854e881b128ea60154604051639cd07acb60e01b81525f915f5160206111ac5f395f51905f52916001600160a01b0390911690639cd07acb9061013790879087906004016101f5565b6020604051808303815f875af1158015610153573d5f5f3e3d5ffd5b505050506040513d601f19601f820116820180604052508101906101779190610225565b949350505050565b5f5f5160206111ac5f395f51905f528054604051635ca4b5b160e11b8152600481018690526001600160a01b03858116602483015292935091169063b9496b62906044015f604051808303815f87803b1580156101da575f5ffd5b505af11580156101ec573d5f5f3e3d5ffd5b50505050505050565b828152604081016054831061021857634e487b7160e01b5f52602160045260245ffd5b8260208301529392505050565b5f60208284031215610235575f5ffd5b5051919050565b610f63806102495f395ff3fe6080604052600436106100d1575f3560e01c806395d89b411161007c578063d46eb11911610057578063d46eb119146102bb578063d4ea0664146102c3578063db2e21bc146102d7578063f2fde38b146102eb575f5ffd5b806395d89b41146101fd578063b6363cf214610245578063c7b8a75e1461029c575f5ffd5b8063558a7297116100ac578063558a7297146101a2578063715018a6146101c35780638da5cb5b146101d7575f5ffd5b806306fdde03146100dc578063313ce5671461013a578063402dc4e414610160575f5ffd5b366100d857005b5f5ffd5b3480156100e7575f5ffd5b506101246040518060400160405280601981526020017f576f726b696e6720436f6e666964656e7469616c20574554480000000000000081525081565b6040516101319190610d3c565b60405180910390f35b348015610145575f5ffd5b5061014e601281565b60405160ff9091168152602001610131565b34801561016b575f5ffd5b5061019461017a366004610d8c565b6001600160a01b03165f9081526001602052604090205490565b604051908152602001610131565b3480156101ad575f5ffd5b506101c16101bc366004610da5565b61030a565b005b3480156101ce575f5ffd5b506101c1610375565b3480156101e2575f5ffd5b505f546040516001600160a01b039091168152602001610131565b348015610208575f5ffd5b506101246040518060400160405280600681526020017f776357455448000000000000000000000000000000000000000000000000000081525081565b348015610250575f5ffd5b5061028c61025f366004610dde565b6001600160a01b039182165f90815260036020908152604080832093909416825291909152205460ff1690565b6040519015158152602001610131565b3480156102a7575f5ffd5b506101946102b6366004610e0f565b610388565b6101c1610533565b3480156102ce575f5ffd5b50600254610194565b3480156102e2575f5ffd5b506101c1610675565b3480156102f6575f5ffd5b506101c1610305366004610d8c565b6107bb565b335f8181526003602090815260408083206001600160a01b03871680855290835292819020805460ff191686151590811790915590519081529192917fceb576d9f15e4e200fdb5096d64d5dfd667e16def20c1eefd14256d8e3faa267910160405180910390a35050565b61037d6107f8565b6103865f610824565b565b6001600160a01b0385165f90815260036020908152604080832033845290915281205460ff166104255760405162461bcd60e51b815260206004820152603060248201527f576f726b696e67436f6e666964656e7469616c574554483a204e6f742061757460448201527f686f72697a6564206f70657261746f720000000000000000000000000000000060648201526084015b60405180910390fd5b6001600160a01b0385163b1561051c575f5f866001600160a01b0316338988888860405160240161045a959493929190610ea4565b60408051601f198184030181529181526020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff16630158100b60e71b179052516104a49190610ef9565b5f604051808303815f865af19150503d805f81146104dd576040519150601f19603f3d011682016040523d82523d5f602084013e6104e2565b606091505b509150915081610501576104f788888861088b565b859250505061052a565b6020815110610515576104f788888861088b565b5050610527565b61052786868661088b565b50825b95945050505050565b5f34116105a85760405162461bcd60e51b815260206004820152602a60248201527f576f726b696e67436f6e666964656e7469616c574554483a2043616e6e6f742060448201527f7772617020302045544800000000000000000000000000000000000000000000606482015260840161041c565b5f6105b2346109a6565b335f90815260016020526040902054909150806105d5576105d25f6109a6565b90505b6105df81836109c2565b335f908152600160205260409020556002546105fb90836109c2565b600255335f90815260016020526040902054610616906109f7565b50335f8181526001602052604090205461062f91610a06565b5061063b6002546109f7565b5060405134815233907f8e693f21155d7cc5ae7cb9e3503d792863da2969ead663e842086e415306ab619060200160405180910390a25050565b61067d6107f8565b47806106f15760405162461bcd60e51b815260206004820152602b60248201527f576f726b696e67436f6e666964656e7469616c574554483a204e6f204554482060448201527f746f207769746864726177000000000000000000000000000000000000000000606482015260840161041c565b5f80546040516001600160a01b039091169083908381818185875af1925050503d805f811461073b576040519150601f19603f3d011682016040523d82523d5f602084013e610740565b606091505b50509050806107b75760405162461bcd60e51b815260206004820152603460248201527f576f726b696e67436f6e666964656e7469616c574554483a20456d657267656e60448201527f6379207769746864726177616c206661696c6564000000000000000000000000606482015260840161041c565b5050565b6107c36107f8565b6001600160a01b0381166107ec57604051631e4fbdf760e01b81525f600482015260240161041c565b6107f581610824565b50565b5f546001600160a01b031633146103865760405163118cdaa760e01b815233600482015260240161041c565b5f80546001600160a01b038381167fffffffffffffffffffffffff0000000000000000000000000000000000000000831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6001600160a01b0383165f90815260016020526040902054806108b4576108b15f6109a6565b90505b6001600160a01b0383165f90815260016020526040902054806108dd576108da5f6109a6565b90505b6108e78284610a18565b6001600160a01b0386165f9081526001602052604090205561090981846109c2565b6001600160a01b038086165f908152600160205260408082209390935590871681522054610936906109f7565b506001600160a01b0385165f908152600160205260409020546109599086610a06565b506001600160a01b0384165f9081526001602052604090205461097b906109f7565b506001600160a01b0384165f9081526001602052604090205461099e9085610a06565b505050505050565b5f6109bc8267ffffffffffffffff166005610a46565b92915050565b5f826109d4576109d15f6109a6565b92505b816109e5576109e25f6109a6565b91505b6109f083835f610b03565b9392505050565b5f610a028230610bfe565b5090565b5f610a118383610bfe565b5090919050565b5f82610a2a57610a275f6109a6565b92505b81610a3b57610a385f6109a6565b91505b6109f083835f610c87565b7fed8d60e34876f751cc8b014c560745351147d9de11b9347c854e881b128ea60154604051639cd07acb60e01b81525f917fed8d60e34876f751cc8b014c560745351147d9de11b9347c854e881b128ea600916001600160a01b0390911690639cd07acb90610abb9087908790600401610f0f565b6020604051808303815f875af1158015610ad7573d5f5f3e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610afb9190610f3f565b949350505050565b5f5f8215610b165750600160f81b610b19565b505f5b7fed8d60e34876f751cc8b014c560745351147d9de11b9347c854e881b128ea6015460405163022f65e760e31b815260048101879052602481018690527fff00000000000000000000000000000000000000000000000000000000000000831660448201527fed8d60e34876f751cc8b014c560745351147d9de11b9347c854e881b128ea600916001600160a01b03169063117b2f38906064015b6020604051808303815f875af1158015610bd0573d5f5f3e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610bf49190610f3f565b9695505050505050565b5f7fed8d60e34876f751cc8b014c560745351147d9de11b9347c854e881b128ea6008054604051635ca4b5b160e11b8152600481018690526001600160a01b03858116602483015292935091169063b9496b62906044015f604051808303815f87803b158015610c6c575f5ffd5b505af1158015610c7e573d5f5f3e3d5ffd5b50505050505050565b5f5f8215610c9a5750600160f81b610c9d565b505f5b7fed8d60e34876f751cc8b014c560745351147d9de11b9347c854e881b128ea601546040516303056db360e31b815260048101879052602481018690527fff00000000000000000000000000000000000000000000000000000000000000831660448201527fed8d60e34876f751cc8b014c560745351147d9de11b9347c854e881b128ea600916001600160a01b03169063182b6d9890606401610bb4565b602081525f82518060208401528060208501604085015e5f604082850101526040601f19601f83011684010191505092915050565b80356001600160a01b0381168114610d87575f5ffd5b919050565b5f60208284031215610d9c575f5ffd5b6109f082610d71565b5f5f60408385031215610db6575f5ffd5b610dbf83610d71565b915060208301358015158114610dd3575f5ffd5b809150509250929050565b5f5f60408385031215610def575f5ffd5b610df883610d71565b9150610e0660208401610d71565b90509250929050565b5f5f5f5f5f60808688031215610e23575f5ffd5b610e2c86610d71565b9450610e3a60208701610d71565b935060408601359250606086013567ffffffffffffffff811115610e5c575f5ffd5b8601601f81018813610e6c575f5ffd5b803567ffffffffffffffff811115610e82575f5ffd5b886020828401011115610e93575f5ffd5b959894975092955050506020019190565b6001600160a01b03861681526001600160a01b038516602082015283604082015260806060820152816080820152818360a08301375f81830160a090810191909152601f909201601f19160101949350505050565b5f82518060208501845e5f920191825250919050565b8281526040810160548310610f3257634e487b7160e01b5f52602160045260245ffd5b8260208301529392505050565b5f60208284031215610f4f575f5ffd5b505191905056fea164736f6c634300081b000aed8d60e34876f751cc8b014c560745351147d9de11b9347c854e881b128ea600";

type WorkingConfidentialWETHConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: WorkingConfidentialWETHConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class WorkingConfidentialWETH__factory extends ContractFactory {
  constructor(...args: WorkingConfidentialWETHConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      WorkingConfidentialWETH & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(
    runner: ContractRunner | null
  ): WorkingConfidentialWETH__factory {
    return super.connect(runner) as WorkingConfidentialWETH__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): WorkingConfidentialWETHInterface {
    return new Interface(_abi) as WorkingConfidentialWETHInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): WorkingConfidentialWETH {
    return new Contract(
      address,
      _abi,
      runner
    ) as unknown as WorkingConfidentialWETH;
  }
}
