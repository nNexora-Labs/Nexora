/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../common";
import type {
  SimpleWETH,
  SimpleWETHInterface,
} from "../../contracts/SimpleWETH";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "allowance",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "needed",
        type: "uint256",
      },
    ],
    name: "ERC20InsufficientAllowance",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "balance",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "needed",
        type: "uint256",
      },
    ],
    name: "ERC20InsufficientBalance",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "approver",
        type: "address",
      },
    ],
    name: "ERC20InvalidApprover",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "receiver",
        type: "address",
      },
    ],
    name: "ERC20InvalidReceiver",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "ERC20InvalidSender",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "ERC20InvalidSpender",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "OwnableInvalidOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "OwnableUnauthorizedAccount",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Deposit",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Withdrawal",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "emergencyWithdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getTotalETH",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "unwrap",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "wrap",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x608060405234801561000f575f5ffd5b50336040518060400160405280601481526020017f53696d706c652057726170706564204574686572000000000000000000000000815250604051806040016040528060058152602001640e6ae8aa8960db1b815250816003908161007491906101a9565b50600461008182826101a9565b5050506001600160a01b0381166100b157604051631e4fbdf760e01b81525f600482015260240160405180910390fd5b6100ba816100c0565b50610263565b600580546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0905f90a35050565b634e487b7160e01b5f52604160045260245ffd5b600181811c9082168061013957607f821691505b60208210810361015757634e487b7160e01b5f52602260045260245ffd5b50919050565b601f8211156101a457805f5260205f20601f840160051c810160208510156101825750805b601f840160051c820191505b818110156101a1575f815560010161018e565b50505b505050565b81516001600160401b038111156101c2576101c2610111565b6101d6816101d08454610125565b8461015d565b6020601f821160018114610208575f83156101f15750848201515b5f19600385901b1c1916600184901b1784556101a1565b5f84815260208120601f198516915b828110156102375787850151825560209485019460019092019101610217565b508482101561025457868401515f19600387901b60f8161c191681555b50505050600190811b01905550565b610d18806102705f395ff3fe6080604052600436106100f2575f3560e01c80638da5cb5b11610087578063db2e21bc11610057578063db2e21bc146102a1578063dd62ed3e146102b5578063de0e9a3e146102f9578063f2fde38b14610318575f5ffd5b80638da5cb5b1461023f57806395d89b4114610266578063a9059cbb1461027a578063d46eb11914610299575f5ffd5b8063313ce567116100c2578063313ce567146101c85780635f4c71f1146101e357806370a08231146101f5578063715018a614610229575f5ffd5b806306fdde0314610132578063095ea7b31461015c57806318160ddd1461018b57806323b872dd146101a9575f5ffd5b3661012e5760405134815233907fe1fffcc4923d04b559f4d29a8bfc6cda04eb5b0d3c460751c2402c5c5cc9109c9060200160405180910390a2005b5f5ffd5b34801561013d575f5ffd5b50610146610337565b6040516101539190610b9a565b60405180910390f35b348015610167575f5ffd5b5061017b610176366004610bea565b6103c7565b6040519015158152602001610153565b348015610196575f5ffd5b506002545b604051908152602001610153565b3480156101b4575f5ffd5b5061017b6101c3366004610c12565b6103e0565b3480156101d3575f5ffd5b5060405160128152602001610153565b3480156101ee575f5ffd5b504761019b565b348015610200575f5ffd5b5061019b61020f366004610c4c565b6001600160a01b03165f9081526020819052604090205490565b348015610234575f5ffd5b5061023d610403565b005b34801561024a575f5ffd5b506005546040516001600160a01b039091168152602001610153565b348015610271575f5ffd5b50610146610416565b348015610285575f5ffd5b5061017b610294366004610bea565b610425565b61023d610432565b3480156102ac575f5ffd5b5061023d6104c7565b3480156102c0575f5ffd5b5061019b6102cf366004610c6c565b6001600160a01b039182165f90815260016020908152604080832093909416825291909152205490565b348015610304575f5ffd5b5061023d610313366004610c9d565b6105f7565b348015610323575f5ffd5b5061023d610332366004610c4c565b61077c565b60606003805461034690610cb4565b80601f016020809104026020016040519081016040528092919081815260200182805461037290610cb4565b80156103bd5780601f10610394576101008083540402835291602001916103bd565b820191905f5260205f20905b8154815290600101906020018083116103a057829003601f168201915b5050505050905090565b5f336103d48185856107b9565b60019150505b92915050565b5f336103ed8582856107cb565b6103f8858585610847565b506001949350505050565b61040b6108a4565b6104145f6108d1565b565b60606004805461034690610cb4565b5f336103d4818585610847565b5f34116104865760405162461bcd60e51b815260206004820152601d60248201527f53696d706c65574554483a2043616e6e6f74207772617020302045544800000060448201526064015b60405180910390fd5b610490333461093a565b60405134815233907fe1fffcc4923d04b559f4d29a8bfc6cda04eb5b0d3c460751c2402c5c5cc9109c9060200160405180910390a2565b6104cf6108a4565b478061051d5760405162461bcd60e51b815260206004820152601e60248201527f53696d706c65574554483a204e6f2045544820746f2077697468647261770000604482015260640161047d565b5f6105306005546001600160a01b031690565b6001600160a01b0316826040515f6040518083038185875af1925050503d805f8114610577576040519150601f19603f3d011682016040523d82523d5f602084013e61057c565b606091505b50509050806105f35760405162461bcd60e51b815260206004820152602760248201527f53696d706c65574554483a20456d657267656e6379207769746864726177616c60448201527f206661696c656400000000000000000000000000000000000000000000000000606482015260840161047d565b5050565b5f81116106465760405162461bcd60e51b815260206004820181905260248201527f53696d706c65574554483a2043616e6e6f7420756e7772617020302057455448604482015260640161047d565b335f908152602081905260409020548111156106a45760405162461bcd60e51b815260206004820181905260248201527f53696d706c65574554483a20496e73756666696369656e742062616c616e6365604482015260640161047d565b6106ae338261096e565b6040515f90339083908381818185875af1925050503d805f81146106ed576040519150601f19603f3d011682016040523d82523d5f602084013e6106f2565b606091505b50509050806107435760405162461bcd60e51b815260206004820152601f60248201527f53696d706c65574554483a20455448207472616e73666572206661696c656400604482015260640161047d565b60405182815233907f7fcf532c15f0a6db0bd6d0e038bea71d30d808c7d98cb3bf7268a95bf5081b659060200160405180910390a25050565b6107846108a4565b6001600160a01b0381166107ad57604051631e4fbdf760e01b81525f600482015260240161047d565b6107b6816108d1565b50565b6107c683838360016109a2565b505050565b6001600160a01b038381165f908152600160209081526040808320938616835292905220545f19811015610841578181101561083357604051637dc7a0d960e11b81526001600160a01b0384166004820152602481018290526044810183905260640161047d565b61084184848484035f6109a2565b50505050565b6001600160a01b03831661087057604051634b637e8f60e11b81525f600482015260240161047d565b6001600160a01b0382166108995760405163ec442f0560e01b81525f600482015260240161047d565b6107c6838383610a74565b6005546001600160a01b031633146104145760405163118cdaa760e01b815233600482015260240161047d565b600580546001600160a01b038381167fffffffffffffffffffffffff0000000000000000000000000000000000000000831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0905f90a35050565b6001600160a01b0382166109635760405163ec442f0560e01b81525f600482015260240161047d565b6105f35f8383610a74565b6001600160a01b03821661099757604051634b637e8f60e11b81525f600482015260240161047d565b6105f3825f83610a74565b6001600160a01b0384166109cb5760405163e602df0560e01b81525f600482015260240161047d565b6001600160a01b0383166109f457604051634a1406b160e11b81525f600482015260240161047d565b6001600160a01b038085165f908152600160209081526040808320938716835292905220829055801561084157826001600160a01b0316846001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92584604051610a6691815260200190565b60405180910390a350505050565b6001600160a01b038316610a9e578060025f828254610a939190610cec565b90915550610b0e9050565b6001600160a01b0383165f9081526020819052604090205481811015610af05760405163391434e360e21b81526001600160a01b0385166004820152602481018290526044810183905260640161047d565b6001600160a01b0384165f9081526020819052604090209082900390555b6001600160a01b038216610b2a57600280548290039055610b48565b6001600160a01b0382165f9081526020819052604090208054820190555b816001600160a01b0316836001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051610b8d91815260200190565b60405180910390a3505050565b602081525f82518060208401528060208501604085015e5f604082850101526040601f19601f83011684010191505092915050565b80356001600160a01b0381168114610be5575f5ffd5b919050565b5f5f60408385031215610bfb575f5ffd5b610c0483610bcf565b946020939093013593505050565b5f5f5f60608486031215610c24575f5ffd5b610c2d84610bcf565b9250610c3b60208501610bcf565b929592945050506040919091013590565b5f60208284031215610c5c575f5ffd5b610c6582610bcf565b9392505050565b5f5f60408385031215610c7d575f5ffd5b610c8683610bcf565b9150610c9460208401610bcf565b90509250929050565b5f60208284031215610cad575f5ffd5b5035919050565b600181811c90821680610cc857607f821691505b602082108103610ce657634e487b7160e01b5f52602260045260245ffd5b50919050565b808201808211156103da57634e487b7160e01b5f52601160045260245ffdfea164736f6c634300081b000a";

type SimpleWETHConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: SimpleWETHConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class SimpleWETH__factory extends ContractFactory {
  constructor(...args: SimpleWETHConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      SimpleWETH & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): SimpleWETH__factory {
    return super.connect(runner) as SimpleWETH__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): SimpleWETHInterface {
    return new Interface(_abi) as SimpleWETHInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): SimpleWETH {
    return new Contract(address, _abi, runner) as unknown as SimpleWETH;
  }
}
