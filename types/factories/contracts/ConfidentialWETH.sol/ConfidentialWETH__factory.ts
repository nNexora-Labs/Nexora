/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type {
  ConfidentialWETH,
  ConfidentialWETHInterface,
} from "../../../contracts/ConfidentialWETH.sol/ConfidentialWETH";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "string",
        name: "symbol",
        type: "string",
      },
      {
        internalType: "string",
        name: "uri",
        type: "string",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "requestId",
        type: "uint256",
      },
    ],
    name: "ConfidentialFungibleTokenInvalidGatewayRequest",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "receiver",
        type: "address",
      },
    ],
    name: "ConfidentialFungibleTokenInvalidReceiver",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "ConfidentialFungibleTokenInvalidSender",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "caller",
        type: "address",
      },
    ],
    name: "ConfidentialFungibleTokenUnauthorizedCaller",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "holder",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "ConfidentialFungibleTokenUnauthorizedSpender",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "euint64",
        name: "amount",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "ConfidentialFungibleTokenUnauthorizedUseOfEncryptedAmount",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "holder",
        type: "address",
      },
    ],
    name: "ConfidentialFungibleTokenZeroBalance",
    type: "error",
  },
  {
    inputs: [],
    name: "HandlesAlreadySavedForRequestID",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidKMSSignatures",
    type: "error",
  },
  {
    inputs: [],
    name: "NoHandleFoundForRequestID",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "OwnableInvalidOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "OwnableUnauthorizedAccount",
    type: "error",
  },
  {
    inputs: [],
    name: "ReentrancyGuardReentrantCall",
    type: "error",
  },
  {
    inputs: [],
    name: "UnsupportedHandleType",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "euint64",
        name: "encryptedAmount",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "uint64",
        name: "amount",
        type: "uint64",
      },
    ],
    name: "AmountDisclosed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "euint64",
        name: "amount",
        type: "bytes32",
      },
    ],
    name: "ConfidentialTransfer",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "ConfidentialUnwrap",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "ConfidentialWrap",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "requestID",
        type: "uint256",
      },
    ],
    name: "DecryptionFulfilled",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "holder",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint48",
        name: "until",
        type: "uint48",
      },
    ],
    name: "OperatorSet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [],
    name: "WETH",
    outputs: [
      {
        internalType: "contract IWETH",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "confidentialBalanceOf",
    outputs: [
      {
        internalType: "euint64",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "confidentialTotalSupply",
    outputs: [
      {
        internalType: "euint64",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "externalEuint64",
        name: "encryptedAmount",
        type: "bytes32",
      },
      {
        internalType: "bytes",
        name: "inputProof",
        type: "bytes",
      },
    ],
    name: "confidentialTransfer",
    outputs: [
      {
        internalType: "euint64",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "euint64",
        name: "amount",
        type: "bytes32",
      },
    ],
    name: "confidentialTransfer",
    outputs: [
      {
        internalType: "euint64",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "euint64",
        name: "amount",
        type: "bytes32",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "confidentialTransferAndCall",
    outputs: [
      {
        internalType: "euint64",
        name: "transferred",
        type: "bytes32",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "externalEuint64",
        name: "encryptedAmount",
        type: "bytes32",
      },
      {
        internalType: "bytes",
        name: "inputProof",
        type: "bytes",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "confidentialTransferAndCall",
    outputs: [
      {
        internalType: "euint64",
        name: "transferred",
        type: "bytes32",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "externalEuint64",
        name: "encryptedAmount",
        type: "bytes32",
      },
      {
        internalType: "bytes",
        name: "inputProof",
        type: "bytes",
      },
    ],
    name: "confidentialTransferFrom",
    outputs: [
      {
        internalType: "euint64",
        name: "transferred",
        type: "bytes32",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "euint64",
        name: "amount",
        type: "bytes32",
      },
    ],
    name: "confidentialTransferFrom",
    outputs: [
      {
        internalType: "euint64",
        name: "transferred",
        type: "bytes32",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "externalEuint64",
        name: "encryptedAmount",
        type: "bytes32",
      },
      {
        internalType: "bytes",
        name: "inputProof",
        type: "bytes",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "confidentialTransferFromAndCall",
    outputs: [
      {
        internalType: "euint64",
        name: "transferred",
        type: "bytes32",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "euint64",
        name: "amount",
        type: "bytes32",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "confidentialTransferFromAndCall",
    outputs: [
      {
        internalType: "euint64",
        name: "transferred",
        type: "bytes32",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "euint64",
        name: "encryptedAmount",
        type: "bytes32",
      },
    ],
    name: "discloseEncryptedAmount",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "requestId",
        type: "uint256",
      },
      {
        internalType: "uint64",
        name: "amount",
        type: "uint64",
      },
      {
        internalType: "bytes[]",
        name: "signatures",
        type: "bytes[]",
      },
    ],
    name: "finalizeDiscloseEncryptedAmount",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "getEncryptedBalance",
    outputs: [
      {
        internalType: "euint64",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "holder",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "isOperator",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "rate",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "uint48",
        name: "until",
        type: "uint48",
      },
    ],
    name: "setOperator",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "underlying",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "externalEuint64",
        name: "encryptedAmount",
        type: "bytes32",
      },
      {
        internalType: "bytes",
        name: "inputProof",
        type: "bytes",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "unwrap",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "wrap",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x608060405234801561000f575f5ffd5b50604051612e6b380380612e6b83398101604081905261002e91610350565b83838383600461003e8482610482565b50600561004b8382610482565b5060066100588282610482565b5050506001600160a01b038216905061008a57604051631e4fbdf760e01b81525f600482015260240160405180910390fd5b61009381610262565b5061020e610132604080516080810182525f808252602082018190529181018290526060810191909152506040805160808101825273687820221192c5b662b25367f70076a37bc79b6c815273848b0066793bcc60346da1f49049357399b8d5956020820152731364cbbf2cdf5032c47d8226a6f6fbd2afcdacac9181019190915273bc91f3dad1a5f19f8390c400196e58073b6a0bc4606082015290565b80517fed8d60e34876f751cc8b014c560745351147d9de11b9347c854e881b128ea60080546001600160a01b03199081166001600160a01b039384161790915560208301517fed8d60e34876f751cc8b014c560745351147d9de11b9347c854e881b128ea6018054831691841691909117905560408301517fed8d60e34876f751cc8b014c560745351147d9de11b9347c854e881b128ea6028054831691841691909117905560608301517fed8d60e34876f751cc8b014c560745351147d9de11b9347c854e881b128ea6038054909216921691909117905550565b7f5ea69329017273582817d320489fbd94f775580e90c092699ca6f3d12fdf7d0080546001600160a01b03191673a02cda4ca3a71d7c46997716f4283aa851c28812179055505060016008555061053c9050565b600780546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0905f90a35050565b634e487b7160e01b5f52604160045260245ffd5b5f82601f8301126102d6575f5ffd5b81516001600160401b038111156102ef576102ef6102b3565b604051601f8201601f19908116603f011681016001600160401b038111828210171561031d5761031d6102b3565b604052818152838201602001851015610334575f5ffd5b8160208501602083015e5f918101602001919091529392505050565b5f5f5f5f60808587031215610363575f5ffd5b84516001600160a01b0381168114610379575f5ffd5b60208601519094506001600160401b03811115610394575f5ffd5b6103a0878288016102c7565b604087015190945090506001600160401b038111156103bd575f5ffd5b6103c9878288016102c7565b606087015190935090506001600160401b038111156103e6575f5ffd5b6103f2878288016102c7565b91505092959194509250565b600181811c9082168061041257607f821691505b60208210810361043057634e487b7160e01b5f52602260045260245ffd5b50919050565b601f82111561047d57805f5260205f20601f840160051c8101602085101561045b5750805b601f840160051c820191505b8181101561047a575f8155600101610467565b50505b505050565b81516001600160401b0381111561049b5761049b6102b3565b6104af816104a984546103fe565b84610436565b6020601f8211600181146104e1575f83156104ca5750848201515b5f19600385901b1c1916600184901b17845561047a565b5f84815260208120601f198516915b8281101561051057878501518255602094850194600190920191016104f0565b508482101561052d57868401515f19600387901b60f8161c191681555b50505050600190811b01905550565b612922806105495f395ff3fe6080604052600436106101a7575f3560e01c8063715018a6116100e7578063c7b8a75e11610087578063de64211911610062578063de64211914610485578063e064b9bb146104a4578063eb3155b5146104c3578063f2fde38b146104e2575f5ffd5b8063c7b8a75e1461043f578063d46eb1191461045e578063d4febb9614610466575f5ffd5b806395d89b41116100c257806395d89b41146103b6578063ad5c4648146103ca578063b6363cf2146103f1578063c535803c14610420575f5ffd5b8063715018a6146103665780637279e2641461037a5780638da5cb5b14610399575f5ffd5b80633c130d9011610152578063537d3c501161012d578063537d3c50146102da57806354095227146102f95780635bebed7e1461030d5780636f307dc31461032c575f5ffd5b80633c130d9014610286578063402dc4e41461029a57806343ace95f146102b9575f5ffd5b8063313ce56711610182578063313ce56714610218578063344ff1011461023357806334c4574314610267575f5ffd5b806306fdde03146101b25780632c4e722e146101dc5780632fb74e62146101f9575f5ffd5b366101ae57005b5f5ffd5b3480156101bd575f5ffd5b506101c6610501565b6040516101d3919061212f565b60405180910390f35b3480156101e7575f5ffd5b5060015b6040519081526020016101d3565b348015610204575f5ffd5b506101eb61021336600461219a565b610591565b348015610223575f5ffd5b50604051600681526020016101d3565b34801561023e575f5ffd5b506101eb61024d3660046121f0565b6001600160a01b03165f9081526020819052604090205490565b348015610272575f5ffd5b506101eb610281366004612209565b6105e4565b348015610291575f5ffd5b506101c661068d565b3480156102a5575f5ffd5b506101eb6102b43660046121f0565b61069c565b3480156102c4575f5ffd5b506102d86102d33660046122a2565b6106bb565b005b3480156102e5575f5ffd5b506101eb6102f436600461219a565b6109c3565b348015610304575f5ffd5b506003546101eb565b348015610318575f5ffd5b506101eb6103273660046122f1565b610a25565b348015610337575f5ffd5b50737b79995e5f793a07bc00c21412e50ecae098e7f95b6040516001600160a01b0390911681526020016101d3565b348015610371575f5ffd5b506102d8610a77565b348015610385575f5ffd5b506102d861039436600461235e565b610a8a565b3480156103a4575f5ffd5b506007546001600160a01b031661034e565b3480156103c1575f5ffd5b506101c6610b17565b3480156103d5575f5ffd5b5061034e737b79995e5f793a07bc00c21412e50ecae098e7f981565b3480156103fc575f5ffd5b5061041061040b3660046124af565b610b26565b60405190151581526020016101d3565b34801561042b575f5ffd5b506102d861043a3660046124d7565b610b78565b34801561044a575f5ffd5b506101eb6104593660046124ee565b610c2e565b6102d8610cd1565b348015610471575f5ffd5b506102d8610480366004612558565b610ddf565b348015610490575f5ffd5b506101eb61049f366004612597565b610dee565b3480156104af575f5ffd5b506101eb6104be3660046124ee565b610e4a565b3480156104ce575f5ffd5b506101eb6104dd366004612620565b610ecf565b3480156104ed575f5ffd5b506102d86104fc3660046121f0565b610f6e565b6060600480546105109061265a565b80601f016020809104026020016040519081016040528092919081815260200182805461053c9061265a565b80156105875780601f1061055e57610100808354040283529160200191610587565b820191905f5260205f20905b81548152906001019060200180831161056a57829003601f168201915b5050505050905090565b5f6105db33866105d68787878080601f0160208091040260200160405190810160405280939291908181526020018383808284375f92019190915250610fab92505050565b610fb8565b95945050505050565b5f6105ef8833610b26565b8833909161062857604051631ae7729b60e11b81526001600160a01b039283166004820152911660248201526044015b60405180910390fd5b5050610675888861066e8989898080601f0160208091040260200160405190810160405280939291908181526020018383808284375f92019190915250610fab92505050565b8686611036565b9050610681813361108d565b50979650505050505050565b6060600680546105109061265a565b6001600160a01b0381165f908152602081905260408120545b92915050565b6106c361109f565b5f81116107385760405162461bcd60e51b815260206004820152602560248201527f436f6e666964656e7469616c574554483a2043616e6e6f7420756e777261702060448201527f3020455448000000000000000000000000000000000000000000000000000000606482015260840161061f565b5f6107788585858080601f0160208091040260200160405190810160405280939291908181526020018383808284375f92019190915250610fab92505050565b905061078433826110c9565b506040516370a0823160e01b81523060048201528290737b79995e5f793a07bc00c21412e50ecae098e7f9906370a0823190602401602060405180830381865afa1580156107d4573d5f5f3e3d5ffd5b505050506040513d601f19601f820116820180604052508101906107f89190612692565b101561086c5760405162461bcd60e51b815260206004820152602b60248201527f436f6e666964656e7469616c574554483a20496e73756666696369656e74205760448201527f4554482062616c616e6365000000000000000000000000000000000000000000606482015260840161061f565b604051632e1a7d4d60e01b815260048101839052737b79995e5f793a07bc00c21412e50ecae098e7f990632e1a7d4d906024015f604051808303815f87803b1580156108b6575f5ffd5b505af11580156108c8573d5f5f3e3d5ffd5b50506040515f925033915084908381818185875af1925050503d805f811461090b576040519150601f19603f3d011682016040523d82523d5f602084013e610910565b606091505b50509050806109875760405162461bcd60e51b815260206004820152602560248201527f436f6e666964656e7469616c574554483a20455448207472616e73666572206660448201527f61696c6564000000000000000000000000000000000000000000000000000000606482015260840161061f565b60405133907fdbd0a6ec4d3effbfc17269b7a8674c757e5deb8c9d6ff84afe1b5b64c590ac0c905f90a250506109bd6001600855565b50505050565b5f6109ce843361110a565b84339091610a015760405163118f6e5360e31b815260048101929092526001600160a01b0316602482015260440161061f565b5050610a103386868686611036565b9050610a1c813361108d565b50949350505050565b5f610a30823361110a565b82339091610a635760405163118f6e5360e31b815260048101929092526001600160a01b0316602482015260440161061f565b5050610a70338484610fb8565b9392505050565b610a7f611115565b610a885f611142565b565b610a9483826111ab565b5f838152600260205260409020548381610ac457604051630ab5f57d60e01b815260040161061f91815260200190565b5060405167ffffffffffffffff8416815281907f83bbbc07896439e5d950a6cead04cbc676180af7a61cecf43f5296475057f5719060200160405180910390a25050505f90815260026020526040812055565b6060600580546105109061265a565b5f816001600160a01b0316836001600160a01b03161480610a705750506001600160a01b039182165f90815260016020908152604080832093909416825291909152205465ffffffffffff1642111590565b610b82813361110a565b8015610b935750610b93813061110a565b81339091610bc65760405163118f6e5360e31b815260048101929092526001600160a01b0316602482015260440161061f565b50506040805160018082528183019092525f916020808301908036833701905050905081815f81518110610bfc57610bfc6126a9565b60209081029190910101525f610c1982631c9e789960e21b611212565b5f908152600260205260409020929092555050565b5f610c39843361110a565b84339091610c6c5760405163118f6e5360e31b815260048101929092526001600160a01b0316602482015260440161061f565b5050610c788633610b26565b86339091610cac57604051631ae7729b60e11b81526001600160a01b0392831660048201529116602482015260440161061f565b5050610cbb8686868686611036565b9050610cc7813361108d565b5095945050505050565b610cd961109f565b5f3411610d345760405162461bcd60e51b815260206004820152602360248201527f436f6e666964656e7469616c574554483a2043616e6e6f74207772617020302060448201526208aa8960eb1b606482015260840161061f565b737b79995e5f793a07bc00c21412e50ecae098e7f96001600160a01b031663d0e30db0346040518263ffffffff1660e01b81526004015f604051808303818588803b158015610d81575f5ffd5b505af1158015610d93573d5f5f3e3d5ffd5b5050505050610daa33610da53461121e565b611234565b5060405133907f9cb777e5cc5a3050cb652a50361cf4e165e4706a58b64a46634d986cd91d4de1905f90a2610a886001600855565b610dea338383611275565b5050565b5f610e33338861066e8989898080601f0160208091040260200160405190810160405280939291908181526020018383808284375f92019190915250610fab92505050565b9050610e3f813361108d565b509695505050505050565b5f610e558633610b26565b86339091610e8957604051631ae7729b60e11b81526001600160a01b0392831660048201529116602482015260440161061f565b5050610cbb86866105d68787878080601f0160208091040260200160405190810160405280939291908181526020018383808284375f92019190915250610fab92505050565b5f610eda823361110a565b82339091610f0d5760405163118f6e5360e31b815260048101929092526001600160a01b0316602482015260440161061f565b5050610f198433610b26565b84339091610f4d57604051631ae7729b60e11b81526001600160a01b0392831660048201529116602482015260440161061f565b5050610f5a848484610fb8565b9050610f66813361108d565b509392505050565b610f76611115565b6001600160a01b038116610f9f57604051631e4fbdf760e01b81525f600482015260240161061f565b610fa881611142565b50565b5f610a70838360056112ec565b5f806001600160a01b038516610fed57604051631a9bbf8b60e11b81526001600160a01b03909116600482015260240161061f565b505f6001600160a01b03841661102257604051636e41946d60e11b81526001600160a01b03909116600482015260240161061f565b5061102e8484846113f9565b949350505050565b5f5f611043878787610fb8565b90505f6110543389898589896115d6565b90505f611074888a61106f856110695f61121e565b886116da565b6113f9565b905061108083826116e6565b9998505050505050505050565b5f6110988383611714565b5090919050565b6002600854036110c257604051633ee5aeb560e01b815260040160405180910390fd5b6002600855565b5f806001600160a01b0384166110fe57604051631a9bbf8b60e11b81526001600160a01b03909116600482015260240161061f565b50610a70835f846113f9565b5f610a708383611788565b6007546001600160a01b03163314610a885760405163118cdaa760e01b815233600482015260240161061f565b600780546001600160a01b038381167fffffffffffffffffffffffff0000000000000000000000000000000000000000831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0905f90a35050565b5f6111b58361180c565b90505f6111c282846118dd565b9050806111e25760405163cf6c44e960e01b815260040160405180910390fd5b60405184907f1af0453083661051f6e56e5c070792320652e612154bf9af8637bb1e7655b99d905f90a250505050565b5f610a7083835f6119e5565b5f6106b58267ffffffffffffffff166005611b1e565b5f806001600160a01b03841661126957604051636e41946d60e11b81526001600160a01b03909116600482015260240161061f565b50610a705f84846113f9565b6001600160a01b038381165f81815260016020908152604080832094871680845294825291829020805465ffffffffffff191665ffffffffffff871690811790915591519182527f921a218a75d18e8ec5704851e6b234a85725b21a2521ce889622c35dedc1fa12910160405180910390a3505050565b7fed8d60e34876f751cc8b014c560745351147d9de11b9347c854e881b128ea6015460405163196d0b9b60e01b81525f915f5160206128f65f395f51905f52916001600160a01b039091169063196d0b9b906113529088903390899089906004016126f1565b6020604051808303815f875af115801561136e573d5f5f3e3d5ffd5b505050506040513d601f19601f820116820180604052508101906113929190612692565b8154604051630f8e573b60e21b8152600481018390523360248201529193506001600160a01b031690633e395cec906044015f604051808303815f87803b1580156113db575f5ffd5b505af11580156113ed573d5f5f3e3d5ffd5b50505050509392505050565b5f80806001600160a01b03861661142f5761141660035485611bc0565b909250905061142481611c0a565b5060038190556114b3565b6001600160a01b0386165f90815260208190526040902054868161147257604051636b8830d760e11b81526001600160a01b03909116600482015260240161061f565b5061147d8186611c19565b909350915061148b82611c0a565b506114968288611c44565b50506001600160a01b0386165f9081526020819052604090208190555b6114c682856114c15f61121e565b6116da565b92506001600160a01b0385166114f8576114e2600354846116e6565b90506114ed81611c0a565b50600381905561154c565b6001600160a01b0385165f9081526020819052604090205461151a9084611c4f565b905061152581611c0a565b506115308186611c44565b506001600160a01b0385165f9081526020819052604090208190555b6001600160a01b03861615611567576115658387611c44565b505b6001600160a01b03851615611582576115808386611c44565b505b61158b83611c0a565b5082856001600160a01b0316876001600160a01b03167f67500e8d0ed826d2194f514dd0d8124f35648ab6e3fb5e6ed867134cffe661e960405160405180910390a450509392505050565b5f6001600160a01b0385163b156116c3576040516346083bfd60e01b81526001600160a01b038616906346083bfd9061161b908a908a90899089908990600401612727565b6020604051808303815f875af1925050508015611655575060408051601f3d908101601f1916820190925261165291810190612692565b60015b6116bc573d808015611682576040519150601f19603f3d011682016040523d82523d5f602084013e611687565b606091505b5080515f036116b457604051636e41946d60e11b81526001600160a01b038716600482015260240161061f565b805181602001fd5b90506116d0565b6116cd6001611c7d565b90505b9695505050505050565b5f61102e848484611c98565b5f826116f8576116f55f61121e565b92505b81611709576117065f61121e565b91505b610a7083835f611d25565b5f5160206128f65f395f51905f528054604051630f8e573b60e21b8152600481018590526001600160a01b03848116602483015290911690633e395cec906044015b5f604051808303815f87803b15801561176d575f5ffd5b505af115801561177f573d5f5f3e3d5ffd5b50505050505050565b5f805f5160206128f65f395f51905f5280546040516382027b6d60e01b8152600481018790526001600160a01b0386811660248301529293509116906382027b6d90604401602060405180830381865afa1580156117e8573d5f5f3e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061102e919061277c565b5f8181527f5ea69329017273582817d320489fbd94f775580e90c092699ca6f3d12fdf7d0260205260408120546060917f5ea69329017273582817d320489fbd94f775580e90c092699ca6f3d12fdf7d0091900361187d5760405163d66ca67560e01b815260040160405180910390fd5b5f838152600282016020908152604091829020805483518184028101840190945280845290918301828280156118d057602002820191905f5260205f20905b8154815260200190600101908083116118bc575b5050505050915050919050565b5f6024816118ea85611deb565b90505f8167ffffffffffffffff81111561190657611906612319565b6040519080825280601f01601f191660200182016040528015611930576020820181803683370190505b509050818360208301377fed8d60e34876f751cc8b014c560745351147d9de11b9347c854e881b128ea60254604051632c027b1360e21b81525f5160206128f65f395f51905f52916001600160a01b03169063b009ec4c9061199a908a9086908b906004016127d5565b6020604051808303815f875af11580156119b6573d5f5f3e3d5ffd5b505050506040513d601f19601f820116820180604052508101906119da919061277c565b979650505050505050565b7f5ea69329017273582817d320489fbd94f775580e90c092699ca6f3d12fdf7d01545f5160206128f65f395f51905f528054604051637d6e912360e11b81527f5ea69329017273582817d320489fbd94f775580e90c092699ca6f3d12fdf7d0092916001600160a01b03169063fadd224690611a6590899060040161285f565b5f604051808303815f87803b158015611a7c575f5ffd5b505af1158015611a8e573d5f5f3e3d5ffd5b50508354604051633263b83b60e01b81526001600160a01b039091169250633263b83b91508690611ac79087908b908b90600401612871565b5f604051808303818588803b158015611ade575f5ffd5b505af1158015611af0573d5f5f3e3d5ffd5b5050505050611aff8387611e98565b600182018054905f611b10836128b6565b919050555050509392505050565b7fed8d60e34876f751cc8b014c560745351147d9de11b9347c854e881b128ea60154604051639cd07acb60e01b81525f915f5160206128f65f395f51905f52916001600160a01b0390911690639cd07acb90611b8090879087906004016128ce565b6020604051808303815f875af1158015611b9c573d5f5f3e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061102e9190612692565b5f8083611bdb57611bd16001611c7d565b9150829050611c03565b5f611be68585611c4f565b9050611bf28186611f25565b9250611bff8382876116da565b9150505b9250929050565b5f611c158230611f53565b5090565b5f5f611c258484611f25565b9150611c3b82611c3586866116e6565b866116da565b90509250929050565b5f6110988383611f53565b5f82611c6157611c5e5f61121e565b92505b81611c7257611c6f5f61121e565b91505b610a7083835f611f99565b5f6106b582611c8c575f611c8f565b60015b60ff165f611b1e565b5f805f5160206128f65f395f51905f526001810154604051637702dcff60e01b81526004810188905260248101879052604481018690529192506001600160a01b031690637702dcff906064016020604051808303815f875af1158015611d01573d5f5f3e3d5ffd5b505050506040513d601f19601f820116820180604052508101906105db9190612692565b5f5f8215611d385750600160f81b611d3b565b505f5b7fed8d60e34876f751cc8b014c560745351147d9de11b9347c854e881b128ea601546040516303056db360e31b815260048101879052602481018690526001600160f81b0319831660448201525f5160206128f65f395f51905f52916001600160a01b03169063182b6d98906064015b6020604051808303815f875af1158015611dc7573d5f5f3e3d5ffd5b505050506040513d601f19601f820116820180604052508101906116d09190612692565b80515f9081805b82811015611e8c575f858281518110611e0d57611e0d6126a9565b6020026020010151601e60208110611e2757611e276126a9565b1a6053811115611e3957611e396126bd565b90506009816053811115611e4f57611e4f6126bd565b60ff161015611e6a57611e636020846128e2565b9250611e83565b60405163ce54a8d160e01b815260040160405180910390fd5b50600101611df2565b5061102e6020826128e2565b5f8281527f5ea69329017273582817d320489fbd94f775580e90c092699ca6f3d12fdf7d0260205260409020547f5ea69329017273582817d320489fbd94f775580e90c092699ca6f3d12fdf7d009015611f0557604051633f06d22b60e01b815260040160405180910390fd5b5f838152600282016020908152604090912083516109bd928501906120ad565b5f82611f3757611f345f61121e565b92505b81611f4857611f455f61121e565b91505b610a7083835f612023565b5f5160206128f65f395f51905f528054604051635ca4b5b160e11b8152600481018590526001600160a01b0384811660248301529091169063b9496b6290604401611756565b5f5f8215611fac5750600160f81b611faf565b505f5b7fed8d60e34876f751cc8b014c560745351147d9de11b9347c854e881b128ea6015460405163022f65e760e31b815260048101879052602481018690526001600160f81b0319831660448201525f5160206128f65f395f51905f52916001600160a01b03169063117b2f3890606401611dab565b5f5f82156120365750600160f81b612039565b505f5b7fed8d60e34876f751cc8b014c560745351147d9de11b9347c854e881b128ea60154604051631391547f60e01b815260048101879052602481018690526001600160f81b0319831660448201525f5160206128f65f395f51905f52916001600160a01b031690631391547f90606401611dab565b828054828255905f5260205f209081019282156120e6579160200282015b828111156120e65782518255916020019190600101906120cb565b50611c159291505b80821115611c15575f81556001016120ee565b5f81518084528060208401602086015e5f602082860101526020601f19601f83011685010191505092915050565b602081525f610a706020830184612101565b80356001600160a01b0381168114612157575f5ffd5b919050565b5f5f83601f84011261216c575f5ffd5b50813567ffffffffffffffff811115612183575f5ffd5b602083019150836020828501011115611c03575f5ffd5b5f5f5f5f606085870312156121ad575f5ffd5b6121b685612141565b935060208501359250604085013567ffffffffffffffff8111156121d8575f5ffd5b6121e48782880161215c565b95989497509550505050565b5f60208284031215612200575f5ffd5b610a7082612141565b5f5f5f5f5f5f5f60a0888a03121561221f575f5ffd5b61222888612141565b965061223660208901612141565b955060408801359450606088013567ffffffffffffffff811115612258575f5ffd5b6122648a828b0161215c565b909550935050608088013567ffffffffffffffff811115612283575f5ffd5b61228f8a828b0161215c565b989b979a50959850939692959293505050565b5f5f5f5f606085870312156122b5575f5ffd5b84359350602085013567ffffffffffffffff8111156122d2575f5ffd5b6122de8782880161215c565b9598909750949560400135949350505050565b5f5f60408385031215612302575f5ffd5b61230b83612141565b946020939093013593505050565b634e487b7160e01b5f52604160045260245ffd5b604051601f8201601f1916810167ffffffffffffffff8111828210171561235657612356612319565b604052919050565b5f5f5f60608486031215612370575f5ffd5b83359250602084013567ffffffffffffffff8116811461238e575f5ffd5b9150604084013567ffffffffffffffff8111156123a9575f5ffd5b8401601f810186136123b9575f5ffd5b803567ffffffffffffffff8111156123d3576123d3612319565b8060051b6123e36020820161232d565b918252602081840181019290810190898411156123fe575f5ffd5b6020850192505b838310156124a057823567ffffffffffffffff811115612423575f5ffd5b8501603f81018b13612433575f5ffd5b602081013567ffffffffffffffff81111561245057612450612319565b612463601f8201601f191660200161232d565b8181526040838301018d1015612477575f5ffd5b816040840160208301375f60208383010152808552505050602082019150602083019250612405565b80955050505050509250925092565b5f5f604083850312156124c0575f5ffd5b6124c983612141565b9150611c3b60208401612141565b5f602082840312156124e7575f5ffd5b5035919050565b5f5f5f5f5f60808688031215612502575f5ffd5b61250b86612141565b945061251960208701612141565b935060408601359250606086013567ffffffffffffffff81111561253b575f5ffd5b6125478882890161215c565b969995985093965092949392505050565b5f5f60408385031215612569575f5ffd5b61257283612141565b9150602083013565ffffffffffff8116811461258c575f5ffd5b809150509250929050565b5f5f5f5f5f5f608087890312156125ac575f5ffd5b6125b587612141565b955060208701359450604087013567ffffffffffffffff8111156125d7575f5ffd5b6125e389828a0161215c565b909550935050606087013567ffffffffffffffff811115612602575f5ffd5b61260e89828a0161215c565b979a9699509497509295939492505050565b5f5f5f60608486031215612632575f5ffd5b61263b84612141565b925061264960208501612141565b929592945050506040919091013590565b600181811c9082168061266e57607f821691505b60208210810361268c57634e487b7160e01b5f52602260045260245ffd5b50919050565b5f602082840312156126a2575f5ffd5b5051919050565b634e487b7160e01b5f52603260045260245ffd5b634e487b7160e01b5f52602160045260245ffd5b605481106126ed57634e487b7160e01b5f52602160045260245ffd5b9052565b8481526001600160a01b0384166020820152608060408201525f6127186080830185612101565b90506105db60608301846126d1565b6001600160a01b03861681526001600160a01b038516602082015283604082015260806060820152816080820152818360a08301375f81830160a090810191909152601f909201601f19160101949350505050565b5f6020828403121561278c575f5ffd5b81518015158114610a70575f5ffd5b5f8151808452602084019350602083015f5b828110156127cb5781518652602095860195909101906001016127ad565b5093949350505050565b606081525f6127e7606083018661279b565b82810360208401526127f98186612101565b9050828103604084015280845180835260208301915060208160051b840101602087015f5b8381101561285057601f1986840301855261283a838351612101565b602095860195909350919091019060010161281e565b50909998505050505050505050565b602081525f610a70602083018461279b565b838152606060208201525f612889606083018561279b565b905063ffffffff60e01b83166040830152949350505050565b634e487b7160e01b5f52601160045260245ffd5b5f600182016128c7576128c76128a2565b5060010190565b82815260408101610a7060208301846126d1565b808201808211156106b5576106b56128a256feed8d60e34876f751cc8b014c560745351147d9de11b9347c854e881b128ea600a164736f6c634300081b000a";

type ConfidentialWETHConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ConfidentialWETHConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ConfidentialWETH__factory extends ContractFactory {
  constructor(...args: ConfidentialWETHConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    owner: AddressLike,
    name: string,
    symbol: string,
    uri: string,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(
      owner,
      name,
      symbol,
      uri,
      overrides || {}
    );
  }
  override deploy(
    owner: AddressLike,
    name: string,
    symbol: string,
    uri: string,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(owner, name, symbol, uri, overrides || {}) as Promise<
      ConfidentialWETH & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): ConfidentialWETH__factory {
    return super.connect(runner) as ConfidentialWETH__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ConfidentialWETHInterface {
    return new Interface(_abi) as ConfidentialWETHInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): ConfidentialWETH {
    return new Contract(address, _abi, runner) as unknown as ConfidentialWETH;
  }
}
