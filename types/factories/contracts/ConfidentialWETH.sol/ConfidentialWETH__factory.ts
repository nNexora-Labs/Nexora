/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type {
  ConfidentialWETH,
  ConfidentialWETHInterface,
} from "../../../contracts/ConfidentialWETH.sol/ConfidentialWETH";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "string",
        name: "symbol",
        type: "string",
      },
      {
        internalType: "string",
        name: "uri",
        type: "string",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "requestId",
        type: "uint256",
      },
    ],
    name: "ConfidentialFungibleTokenInvalidGatewayRequest",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "receiver",
        type: "address",
      },
    ],
    name: "ConfidentialFungibleTokenInvalidReceiver",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "ConfidentialFungibleTokenInvalidSender",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "caller",
        type: "address",
      },
    ],
    name: "ConfidentialFungibleTokenUnauthorizedCaller",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "holder",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "ConfidentialFungibleTokenUnauthorizedSpender",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "euint64",
        name: "amount",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "ConfidentialFungibleTokenUnauthorizedUseOfEncryptedAmount",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "holder",
        type: "address",
      },
    ],
    name: "ConfidentialFungibleTokenZeroBalance",
    type: "error",
  },
  {
    inputs: [],
    name: "HandlesAlreadySavedForRequestID",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidKMSSignatures",
    type: "error",
  },
  {
    inputs: [],
    name: "NoHandleFoundForRequestID",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "OwnableInvalidOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "OwnableUnauthorizedAccount",
    type: "error",
  },
  {
    inputs: [],
    name: "ReentrancyGuardReentrantCall",
    type: "error",
  },
  {
    inputs: [],
    name: "UnsupportedHandleType",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "euint64",
        name: "encryptedAmount",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "uint64",
        name: "amount",
        type: "uint64",
      },
    ],
    name: "AmountDisclosed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "euint64",
        name: "amount",
        type: "bytes32",
      },
    ],
    name: "ConfidentialTransfer",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "ConfidentialUnwrap",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "ConfidentialWrap",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "requestID",
        type: "uint256",
      },
    ],
    name: "DecryptionFulfilled",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "holder",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint48",
        name: "until",
        type: "uint48",
      },
    ],
    name: "OperatorSet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [],
    name: "WETH",
    outputs: [
      {
        internalType: "contract IWETH",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "completeUnwrap",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "confidentialBalanceOf",
    outputs: [
      {
        internalType: "euint64",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "confidentialTotalSupply",
    outputs: [
      {
        internalType: "euint64",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "externalEuint64",
        name: "encryptedAmount",
        type: "bytes32",
      },
      {
        internalType: "bytes",
        name: "inputProof",
        type: "bytes",
      },
    ],
    name: "confidentialTransfer",
    outputs: [
      {
        internalType: "euint64",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "euint64",
        name: "amount",
        type: "bytes32",
      },
    ],
    name: "confidentialTransfer",
    outputs: [
      {
        internalType: "euint64",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "euint64",
        name: "amount",
        type: "bytes32",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "confidentialTransferAndCall",
    outputs: [
      {
        internalType: "euint64",
        name: "transferred",
        type: "bytes32",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "externalEuint64",
        name: "encryptedAmount",
        type: "bytes32",
      },
      {
        internalType: "bytes",
        name: "inputProof",
        type: "bytes",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "confidentialTransferAndCall",
    outputs: [
      {
        internalType: "euint64",
        name: "transferred",
        type: "bytes32",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "externalEuint64",
        name: "encryptedAmount",
        type: "bytes32",
      },
      {
        internalType: "bytes",
        name: "inputProof",
        type: "bytes",
      },
    ],
    name: "confidentialTransferFrom",
    outputs: [
      {
        internalType: "euint64",
        name: "transferred",
        type: "bytes32",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "euint64",
        name: "amount",
        type: "bytes32",
      },
    ],
    name: "confidentialTransferFrom",
    outputs: [
      {
        internalType: "euint64",
        name: "transferred",
        type: "bytes32",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "externalEuint64",
        name: "encryptedAmount",
        type: "bytes32",
      },
      {
        internalType: "bytes",
        name: "inputProof",
        type: "bytes",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "confidentialTransferFromAndCall",
    outputs: [
      {
        internalType: "euint64",
        name: "transferred",
        type: "bytes32",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "euint64",
        name: "amount",
        type: "bytes32",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "confidentialTransferFromAndCall",
    outputs: [
      {
        internalType: "euint64",
        name: "transferred",
        type: "bytes32",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "euint64",
        name: "encryptedAmount",
        type: "bytes32",
      },
    ],
    name: "discloseEncryptedAmount",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "requestId",
        type: "uint256",
      },
      {
        internalType: "uint64",
        name: "amount",
        type: "uint64",
      },
      {
        internalType: "bytes[]",
        name: "signatures",
        type: "bytes[]",
      },
    ],
    name: "finalizeDiscloseEncryptedAmount",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "getEncryptedBalance",
    outputs: [
      {
        internalType: "euint64",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "holder",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "isOperator",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "rate",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "uint48",
        name: "until",
        type: "uint48",
      },
    ],
    name: "setOperator",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "underlying",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "externalEuint64",
        name: "encryptedAmount",
        type: "bytes32",
      },
      {
        internalType: "bytes",
        name: "inputProof",
        type: "bytes",
      },
    ],
    name: "unwrap",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "wrap",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x608060405234801561000f575f5ffd5b50604051612ea5380380612ea583398101604081905261002e91610350565b83838383600461003e8482610482565b50600561004b8382610482565b5060066100588282610482565b5050506001600160a01b038216905061008a57604051631e4fbdf760e01b81525f600482015260240160405180910390fd5b61009381610262565b5061020e610132604080516080810182525f808252602082018190529181018290526060810191909152506040805160808101825273687820221192c5b662b25367f70076a37bc79b6c815273848b0066793bcc60346da1f49049357399b8d5956020820152731364cbbf2cdf5032c47d8226a6f6fbd2afcdacac9181019190915273bc91f3dad1a5f19f8390c400196e58073b6a0bc4606082015290565b80517fed8d60e34876f751cc8b014c560745351147d9de11b9347c854e881b128ea60080546001600160a01b03199081166001600160a01b039384161790915560208301517fed8d60e34876f751cc8b014c560745351147d9de11b9347c854e881b128ea6018054831691841691909117905560408301517fed8d60e34876f751cc8b014c560745351147d9de11b9347c854e881b128ea6028054831691841691909117905560608301517fed8d60e34876f751cc8b014c560745351147d9de11b9347c854e881b128ea6038054909216921691909117905550565b7f5ea69329017273582817d320489fbd94f775580e90c092699ca6f3d12fdf7d0080546001600160a01b03191673a02cda4ca3a71d7c46997716f4283aa851c28812179055505060016008555061053c9050565b600780546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0905f90a35050565b634e487b7160e01b5f52604160045260245ffd5b5f82601f8301126102d6575f5ffd5b81516001600160401b038111156102ef576102ef6102b3565b604051601f8201601f19908116603f011681016001600160401b038111828210171561031d5761031d6102b3565b604052818152838201602001851015610334575f5ffd5b8160208501602083015e5f918101602001919091529392505050565b5f5f5f5f60808587031215610363575f5ffd5b84516001600160a01b0381168114610379575f5ffd5b60208601519094506001600160401b03811115610394575f5ffd5b6103a0878288016102c7565b604087015190945090506001600160401b038111156103bd575f5ffd5b6103c9878288016102c7565b606087015190935090506001600160401b038111156103e6575f5ffd5b6103f2878288016102c7565b91505092959194509250565b600181811c9082168061041257607f821691505b60208210810361043057634e487b7160e01b5f52602260045260245ffd5b50919050565b601f82111561047d57805f5260205f20601f840160051c8101602085101561045b5750805b601f840160051c820191505b8181101561047a575f8155600101610467565b50505b505050565b81516001600160401b0381111561049b5761049b6102b3565b6104af816104a984546103fe565b84610436565b6020601f8211600181146104e1575f83156104ca5750848201515b5f19600385901b1c1916600184901b17845561047a565b5f84815260208120601f198516915b8281101561051057878501518255602094850194600190920191016104f0565b508482101561052d57868401515f19600387901b60f8161c191681555b50505050600190811b01905550565b61295c806105495f395ff3fe6080604052600436106101b2575f3560e01c80638da5cb5b116100e7578063d4febb9611610087578063e064b9bb11610062578063e064b9bb146104af578063e2229282146104ce578063eb3155b5146104ed578063f2fde38b1461050c575f5ffd5b8063d4febb9614610452578063dcd56a4114610471578063de64211914610490575f5ffd5b8063b6363cf2116100c2578063b6363cf2146103dd578063c535803c1461040c578063c7b8a75e1461042b578063d46eb1191461044a575f5ffd5b80638da5cb5b1461038557806395d89b41146103a2578063ad5c4648146103b6575f5ffd5b8063402dc4e4116101525780635bebed7e1161012d5780635bebed7e146102f75780636f307dc314610316578063715018a6146103505780637279e26414610366575f5ffd5b8063402dc4e4146102a5578063537d3c50146102c457806354095227146102e3575f5ffd5b8063313ce5671161018d578063313ce56714610223578063344ff1011461023e57806334c45743146102725780633c130d9014610291575f5ffd5b806306fdde03146101bd5780632c4e722e146101e75780632fb74e6214610204575f5ffd5b366101b957005b5f5ffd5b3480156101c8575f5ffd5b506101d161052b565b6040516101de9190612170565b60405180910390f35b3480156101f2575f5ffd5b5060015b6040519081526020016101de565b34801561020f575f5ffd5b506101f661021e3660046121db565b6105bb565b34801561022e575f5ffd5b50604051600681526020016101de565b348015610249575f5ffd5b506101f6610258366004612231565b6001600160a01b03165f9081526020819052604090205490565b34801561027d575f5ffd5b506101f661028c36600461224a565b61060e565b34801561029c575f5ffd5b506101d16106b7565b3480156102b0575f5ffd5b506101f66102bf366004612231565b6106c6565b3480156102cf575f5ffd5b506101f66102de3660046121db565b6106e5565b3480156102ee575f5ffd5b506003546101f6565b348015610302575f5ffd5b506101f66103113660046122e3565b610747565b348015610321575f5ffd5b50737b79995e5f793a07bc00c21412e50ecae098e7f95b6040516001600160a01b0390911681526020016101de565b34801561035b575f5ffd5b50610364610799565b005b348015610371575f5ffd5b50610364610380366004612350565b6107ac565b348015610390575f5ffd5b506007546001600160a01b0316610338565b3480156103ad575f5ffd5b506101d1610839565b3480156103c1575f5ffd5b50610338737b79995e5f793a07bc00c21412e50ecae098e7f981565b3480156103e8575f5ffd5b506103fc6103f73660046124a1565b610848565b60405190151581526020016101de565b348015610417575f5ffd5b506103646104263660046124c9565b61089a565b348015610436575f5ffd5b506101f66104453660046124e0565b610950565b6103646109f3565b34801561045d575f5ffd5b5061036461046c36600461254a565b610b01565b34801561047c575f5ffd5b5061036461048b366004612589565b610b10565b34801561049b575f5ffd5b506101f66104aa3660046125d1565b610b9f565b3480156104ba575f5ffd5b506101f66104c93660046124e0565b610bfb565b3480156104d9575f5ffd5b506103646104e83660046124c9565b610c80565b3480156104f8575f5ffd5b506101f661050736600461265a565b610f0d565b348015610517575f5ffd5b50610364610526366004612231565b610fac565b60606004805461053a90612694565b80601f016020809104026020016040519081016040528092919081815260200182805461056690612694565b80156105b15780601f10610588576101008083540402835291602001916105b1565b820191905f5260205f20905b81548152906001019060200180831161059457829003601f168201915b5050505050905090565b5f61060533866106008787878080601f0160208091040260200160405190810160405280939291908181526020018383808284375f92019190915250610fe692505050565b610ff3565b95945050505050565b5f6106198833610848565b8833909161065257604051631ae7729b60e11b81526001600160a01b039283166004820152911660248201526044015b60405180910390fd5b505061069f88886106988989898080601f0160208091040260200160405190810160405280939291908181526020018383808284375f92019190915250610fe692505050565b8686611071565b90506106ab81336110c8565b50979650505050505050565b60606006805461053a90612694565b6001600160a01b0381165f908152602081905260408120545b92915050565b5f6106f084336110da565b843390916107235760405163118f6e5360e31b815260048101929092526001600160a01b03166024820152604401610649565b50506107323386868686611071565b905061073e81336110c8565b50949350505050565b5f61075282336110da565b823390916107855760405163118f6e5360e31b815260048101929092526001600160a01b03166024820152604401610649565b5050610792338484610ff3565b9392505050565b6107a16110e5565b6107aa5f611112565b565b6107b6838261117b565b5f8381526002602052604090205483816107e657604051630ab5f57d60e01b815260040161064991815260200190565b5060405167ffffffffffffffff8416815281907f83bbbc07896439e5d950a6cead04cbc676180af7a61cecf43f5296475057f5719060200160405180910390a25050505f90815260026020526040812055565b60606005805461053a90612694565b5f816001600160a01b0316836001600160a01b031614806107925750506001600160a01b039182165f90815260016020908152604080832093909416825291909152205465ffffffffffff1642111590565b6108a481336110da565b80156108b557506108b581306110da565b813390916108e85760405163118f6e5360e31b815260048101929092526001600160a01b03166024820152604401610649565b50506040805160018082528183019092525f916020808301908036833701905050905081815f8151811061091e5761091e6126cc565b60209081029190910101525f61093b82631c9e789960e21b6111e2565b5f908152600260205260409020929092555050565b5f61095b84336110da565b8433909161098e5760405163118f6e5360e31b815260048101929092526001600160a01b03166024820152604401610649565b505061099a8633610848565b863390916109ce57604051631ae7729b60e11b81526001600160a01b03928316600482015291166024820152604401610649565b50506109dd8686868686611071565b90506109e981336110c8565b5095945050505050565b6109fb6111ee565b5f3411610a565760405162461bcd60e51b815260206004820152602360248201527f436f6e666964656e7469616c574554483a2043616e6e6f74207772617020302060448201526208aa8960eb1b6064820152608401610649565b737b79995e5f793a07bc00c21412e50ecae098e7f96001600160a01b031663d0e30db0346040518263ffffffff1660e01b81526004015f604051808303818588803b158015610aa3575f5ffd5b505af1158015610ab5573d5f5f3e3d5ffd5b5050505050610acc33610ac734611218565b61122e565b5060405133907f9cb777e5cc5a3050cb652a50361cf4e165e4706a58b64a46634d986cd91d4de1905f90a26107aa6001600855565b610b0c33838361126f565b5050565b610b186111ee565b5f610b588484848080601f0160208091040260200160405190810160405280939291908181526020018383808284375f92019190915250610fe692505050565b9050610b6433826112e6565b5060405133907fdbd0a6ec4d3effbfc17269b7a8674c757e5deb8c9d6ff84afe1b5b64c590ac0c905f90a250610b9a6001600855565b505050565b5f610be433886106988989898080601f0160208091040260200160405190810160405280939291908181526020018383808284375f92019190915250610fe692505050565b9050610bf081336110c8565b509695505050505050565b5f610c068633610848565b86339091610c3a57604051631ae7729b60e11b81526001600160a01b03928316600482015291166024820152604401610649565b50506109dd86866106008787878080601f0160208091040260200160405190810160405280939291908181526020018383808284375f92019190915250610fe692505050565b610c886111ee565b5f8111610cfd5760405162461bcd60e51b815260206004820152602560248201527f436f6e666964656e7469616c574554483a2043616e6e6f7420756e777261702060448201527f30204554480000000000000000000000000000000000000000000000000000006064820152608401610649565b6040516370a0823160e01b81523060048201528190737b79995e5f793a07bc00c21412e50ecae098e7f9906370a0823190602401602060405180830381865afa158015610d4c573d5f5f3e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610d7091906126e0565b1015610de45760405162461bcd60e51b815260206004820152602b60248201527f436f6e666964656e7469616c574554483a20496e73756666696369656e74205760448201527f4554482062616c616e63650000000000000000000000000000000000000000006064820152608401610649565b604051632e1a7d4d60e01b815260048101829052737b79995e5f793a07bc00c21412e50ecae098e7f990632e1a7d4d906024015f604051808303815f87803b158015610e2e575f5ffd5b505af1158015610e40573d5f5f3e3d5ffd5b50506040515f925033915083908381818185875af1925050503d805f8114610e83576040519150601f19603f3d011682016040523d82523d5f602084013e610e88565b606091505b5050905080610eff5760405162461bcd60e51b815260206004820152602560248201527f436f6e666964656e7469616c574554483a20455448207472616e73666572206660448201527f61696c65640000000000000000000000000000000000000000000000000000006064820152608401610649565b50610f0a6001600855565b50565b5f610f1882336110da565b82339091610f4b5760405163118f6e5360e31b815260048101929092526001600160a01b03166024820152604401610649565b5050610f578433610848565b84339091610f8b57604051631ae7729b60e11b81526001600160a01b03928316600482015291166024820152604401610649565b5050610f98848484610ff3565b9050610fa481336110c8565b509392505050565b610fb46110e5565b6001600160a01b038116610fdd57604051631e4fbdf760e01b81525f6004820152602401610649565b610f0a81611112565b5f61079283836005611327565b5f806001600160a01b03851661102857604051631a9bbf8b60e11b81526001600160a01b039091166004820152602401610649565b505f6001600160a01b03841661105d57604051636e41946d60e11b81526001600160a01b039091166004820152602401610649565b50611069848484611434565b949350505050565b5f5f61107e878787610ff3565b90505f61108f338989858989611611565b90505f6110af888a6110aa856110a45f611218565b88611715565b611434565b90506110bb8382611721565b9998505050505050505050565b5f6110d3838361174f565b5090919050565b5f61079283836117c3565b6007546001600160a01b031633146107aa5760405163118cdaa760e01b8152336004820152602401610649565b600780546001600160a01b038381167fffffffffffffffffffffffff0000000000000000000000000000000000000000831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0905f90a35050565b5f61118583611847565b90505f6111928284611918565b9050806111b25760405163cf6c44e960e01b815260040160405180910390fd5b60405184907f1af0453083661051f6e56e5c070792320652e612154bf9af8637bb1e7655b99d905f90a250505050565b5f61079283835f611a20565b60026008540361121157604051633ee5aeb560e01b815260040160405180910390fd5b6002600855565b5f6106df8267ffffffffffffffff166005611b59565b5f806001600160a01b03841661126357604051636e41946d60e11b81526001600160a01b039091166004820152602401610649565b506107925f8484611434565b6001600160a01b038381165f81815260016020908152604080832094871680845294825291829020805465ffffffffffff191665ffffffffffff871690811790915591519182527f921a218a75d18e8ec5704851e6b234a85725b21a2521ce889622c35dedc1fa12910160405180910390a3505050565b5f806001600160a01b03841661131b57604051631a9bbf8b60e11b81526001600160a01b039091166004820152602401610649565b50610792835f84611434565b7fed8d60e34876f751cc8b014c560745351147d9de11b9347c854e881b128ea6015460405163196d0b9b60e01b81525f915f5160206129305f395f51905f52916001600160a01b039091169063196d0b9b9061138d90889033908990899060040161272b565b6020604051808303815f875af11580156113a9573d5f5f3e3d5ffd5b505050506040513d601f19601f820116820180604052508101906113cd91906126e0565b8154604051630f8e573b60e21b8152600481018390523360248201529193506001600160a01b031690633e395cec906044015f604051808303815f87803b158015611416575f5ffd5b505af1158015611428573d5f5f3e3d5ffd5b50505050509392505050565b5f80806001600160a01b03861661146a5761145160035485611bfb565b909250905061145f81611c45565b5060038190556114ee565b6001600160a01b0386165f9081526020819052604090205486816114ad57604051636b8830d760e11b81526001600160a01b039091166004820152602401610649565b506114b88186611c54565b90935091506114c682611c45565b506114d18288611c7f565b50506001600160a01b0386165f9081526020819052604090208190555b61150182856114fc5f611218565b611715565b92506001600160a01b0385166115335761151d60035484611721565b905061152881611c45565b506003819055611587565b6001600160a01b0385165f908152602081905260409020546115559084611c8a565b905061156081611c45565b5061156b8186611c7f565b506001600160a01b0385165f9081526020819052604090208190555b6001600160a01b038616156115a2576115a08387611c7f565b505b6001600160a01b038516156115bd576115bb8386611c7f565b505b6115c683611c45565b5082856001600160a01b0316876001600160a01b03167f67500e8d0ed826d2194f514dd0d8124f35648ab6e3fb5e6ed867134cffe661e960405160405180910390a450509392505050565b5f6001600160a01b0385163b156116fe576040516346083bfd60e01b81526001600160a01b038616906346083bfd90611656908a908a90899089908990600401612761565b6020604051808303815f875af1925050508015611690575060408051601f3d908101601f1916820190925261168d918101906126e0565b60015b6116f7573d8080156116bd576040519150601f19603f3d011682016040523d82523d5f602084013e6116c2565b606091505b5080515f036116ef57604051636e41946d60e11b81526001600160a01b0387166004820152602401610649565b805181602001fd5b905061170b565b6117086001611cb8565b90505b9695505050505050565b5f611069848484611cd3565b5f82611733576117305f611218565b92505b81611744576117415f611218565b91505b61079283835f611d60565b5f5160206129305f395f51905f528054604051630f8e573b60e21b8152600481018590526001600160a01b03848116602483015290911690633e395cec906044015b5f604051808303815f87803b1580156117a8575f5ffd5b505af11580156117ba573d5f5f3e3d5ffd5b50505050505050565b5f805f5160206129305f395f51905f5280546040516382027b6d60e01b8152600481018790526001600160a01b0386811660248301529293509116906382027b6d90604401602060405180830381865afa158015611823573d5f5f3e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061106991906127b6565b5f8181527f5ea69329017273582817d320489fbd94f775580e90c092699ca6f3d12fdf7d0260205260408120546060917f5ea69329017273582817d320489fbd94f775580e90c092699ca6f3d12fdf7d009190036118b85760405163d66ca67560e01b815260040160405180910390fd5b5f8381526002820160209081526040918290208054835181840281018401909452808452909183018282801561190b57602002820191905f5260205f20905b8154815260200190600101908083116118f7575b5050505050915050919050565b5f60248161192585611e26565b90505f8167ffffffffffffffff8111156119415761194161230b565b6040519080825280601f01601f19166020018201604052801561196b576020820181803683370190505b509050818360208301377fed8d60e34876f751cc8b014c560745351147d9de11b9347c854e881b128ea60254604051632c027b1360e21b81525f5160206129305f395f51905f52916001600160a01b03169063b009ec4c906119d5908a9086908b9060040161280f565b6020604051808303815f875af11580156119f1573d5f5f3e3d5ffd5b505050506040513d601f19601f82011682018060405250810190611a1591906127b6565b979650505050505050565b7f5ea69329017273582817d320489fbd94f775580e90c092699ca6f3d12fdf7d01545f5160206129305f395f51905f528054604051637d6e912360e11b81527f5ea69329017273582817d320489fbd94f775580e90c092699ca6f3d12fdf7d0092916001600160a01b03169063fadd224690611aa0908990600401612899565b5f604051808303815f87803b158015611ab7575f5ffd5b505af1158015611ac9573d5f5f3e3d5ffd5b50508354604051633263b83b60e01b81526001600160a01b039091169250633263b83b91508690611b029087908b908b906004016128ab565b5f604051808303818588803b158015611b19575f5ffd5b505af1158015611b2b573d5f5f3e3d5ffd5b5050505050611b3a8387611ed3565b600182018054905f611b4b836128f0565b919050555050509392505050565b7fed8d60e34876f751cc8b014c560745351147d9de11b9347c854e881b128ea60154604051639cd07acb60e01b81525f915f5160206129305f395f51905f52916001600160a01b0390911690639cd07acb90611bbb9087908790600401612908565b6020604051808303815f875af1158015611bd7573d5f5f3e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061106991906126e0565b5f8083611c1657611c0c6001611cb8565b9150829050611c3e565b5f611c218585611c8a565b9050611c2d8186611f66565b9250611c3a838287611715565b9150505b9250929050565b5f611c508230611f94565b5090565b5f5f611c608484611f66565b9150611c7682611c708686611721565b86611715565b90509250929050565b5f6110d38383611f94565b5f82611c9c57611c995f611218565b92505b81611cad57611caa5f611218565b91505b61079283835f611fda565b5f6106df82611cc7575f611cca565b60015b60ff165f611b59565b5f805f5160206129305f395f51905f526001810154604051637702dcff60e01b81526004810188905260248101879052604481018690529192506001600160a01b031690637702dcff906064016020604051808303815f875af1158015611d3c573d5f5f3e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061060591906126e0565b5f5f8215611d735750600160f81b611d76565b505f5b7fed8d60e34876f751cc8b014c560745351147d9de11b9347c854e881b128ea601546040516303056db360e31b815260048101879052602481018690526001600160f81b0319831660448201525f5160206129305f395f51905f52916001600160a01b03169063182b6d98906064015b6020604051808303815f875af1158015611e02573d5f5f3e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061170b91906126e0565b80515f9081805b82811015611ec7575f858281518110611e4857611e486126cc565b6020026020010151601e60208110611e6257611e626126cc565b1a6053811115611e7457611e746126f7565b90506009816053811115611e8a57611e8a6126f7565b60ff161015611ea557611e9e60208461291c565b9250611ebe565b60405163ce54a8d160e01b815260040160405180910390fd5b50600101611e2d565b5061106960208261291c565b5f8281527f5ea69329017273582817d320489fbd94f775580e90c092699ca6f3d12fdf7d0260205260409020547f5ea69329017273582817d320489fbd94f775580e90c092699ca6f3d12fdf7d009015611f4057604051633f06d22b60e01b815260040160405180910390fd5b5f83815260028201602090815260409091208351611f60928501906120ee565b50505050565b5f82611f7857611f755f611218565b92505b81611f8957611f865f611218565b91505b61079283835f612064565b5f5160206129305f395f51905f528054604051635ca4b5b160e11b8152600481018590526001600160a01b0384811660248301529091169063b9496b6290604401611791565b5f5f8215611fed5750600160f81b611ff0565b505f5b7fed8d60e34876f751cc8b014c560745351147d9de11b9347c854e881b128ea6015460405163022f65e760e31b815260048101879052602481018690526001600160f81b0319831660448201525f5160206129305f395f51905f52916001600160a01b03169063117b2f3890606401611de6565b5f5f82156120775750600160f81b61207a565b505f5b7fed8d60e34876f751cc8b014c560745351147d9de11b9347c854e881b128ea60154604051631391547f60e01b815260048101879052602481018690526001600160f81b0319831660448201525f5160206129305f395f51905f52916001600160a01b031690631391547f90606401611de6565b828054828255905f5260205f20908101928215612127579160200282015b8281111561212757825182559160200191906001019061210c565b50611c509291505b80821115611c50575f815560010161212f565b5f81518084528060208401602086015e5f602082860101526020601f19601f83011685010191505092915050565b602081525f6107926020830184612142565b80356001600160a01b0381168114612198575f5ffd5b919050565b5f5f83601f8401126121ad575f5ffd5b50813567ffffffffffffffff8111156121c4575f5ffd5b602083019150836020828501011115611c3e575f5ffd5b5f5f5f5f606085870312156121ee575f5ffd5b6121f785612182565b935060208501359250604085013567ffffffffffffffff811115612219575f5ffd5b6122258782880161219d565b95989497509550505050565b5f60208284031215612241575f5ffd5b61079282612182565b5f5f5f5f5f5f5f60a0888a031215612260575f5ffd5b61226988612182565b965061227760208901612182565b955060408801359450606088013567ffffffffffffffff811115612299575f5ffd5b6122a58a828b0161219d565b909550935050608088013567ffffffffffffffff8111156122c4575f5ffd5b6122d08a828b0161219d565b989b979a50959850939692959293505050565b5f5f604083850312156122f4575f5ffd5b6122fd83612182565b946020939093013593505050565b634e487b7160e01b5f52604160045260245ffd5b604051601f8201601f1916810167ffffffffffffffff811182821017156123485761234861230b565b604052919050565b5f5f5f60608486031215612362575f5ffd5b83359250602084013567ffffffffffffffff81168114612380575f5ffd5b9150604084013567ffffffffffffffff81111561239b575f5ffd5b8401601f810186136123ab575f5ffd5b803567ffffffffffffffff8111156123c5576123c561230b565b8060051b6123d56020820161231f565b918252602081840181019290810190898411156123f0575f5ffd5b6020850192505b8383101561249257823567ffffffffffffffff811115612415575f5ffd5b8501603f81018b13612425575f5ffd5b602081013567ffffffffffffffff8111156124425761244261230b565b612455601f8201601f191660200161231f565b8181526040838301018d1015612469575f5ffd5b816040840160208301375f602083830101528085525050506020820191506020830192506123f7565b80955050505050509250925092565b5f5f604083850312156124b2575f5ffd5b6124bb83612182565b9150611c7660208401612182565b5f602082840312156124d9575f5ffd5b5035919050565b5f5f5f5f5f608086880312156124f4575f5ffd5b6124fd86612182565b945061250b60208701612182565b935060408601359250606086013567ffffffffffffffff81111561252d575f5ffd5b6125398882890161219d565b969995985093965092949392505050565b5f5f6040838503121561255b575f5ffd5b61256483612182565b9150602083013565ffffffffffff8116811461257e575f5ffd5b809150509250929050565b5f5f5f6040848603121561259b575f5ffd5b83359250602084013567ffffffffffffffff8111156125b8575f5ffd5b6125c48682870161219d565b9497909650939450505050565b5f5f5f5f5f5f608087890312156125e6575f5ffd5b6125ef87612182565b955060208701359450604087013567ffffffffffffffff811115612611575f5ffd5b61261d89828a0161219d565b909550935050606087013567ffffffffffffffff81111561263c575f5ffd5b61264889828a0161219d565b979a9699509497509295939492505050565b5f5f5f6060848603121561266c575f5ffd5b61267584612182565b925061268360208501612182565b929592945050506040919091013590565b600181811c908216806126a857607f821691505b6020821081036126c657634e487b7160e01b5f52602260045260245ffd5b50919050565b634e487b7160e01b5f52603260045260245ffd5b5f602082840312156126f0575f5ffd5b5051919050565b634e487b7160e01b5f52602160045260245ffd5b6054811061272757634e487b7160e01b5f52602160045260245ffd5b9052565b8481526001600160a01b0384166020820152608060408201525f6127526080830185612142565b9050610605606083018461270b565b6001600160a01b03861681526001600160a01b038516602082015283604082015260806060820152816080820152818360a08301375f81830160a090810191909152601f909201601f19160101949350505050565b5f602082840312156127c6575f5ffd5b81518015158114610792575f5ffd5b5f8151808452602084019350602083015f5b828110156128055781518652602095860195909101906001016127e7565b5093949350505050565b606081525f61282160608301866127d5565b82810360208401526128338186612142565b9050828103604084015280845180835260208301915060208160051b840101602087015f5b8381101561288a57601f19868403018552612874838351612142565b6020958601959093509190910190600101612858565b50909998505050505050505050565b602081525f61079260208301846127d5565b838152606060208201525f6128c360608301856127d5565b905063ffffffff60e01b83166040830152949350505050565b634e487b7160e01b5f52601160045260245ffd5b5f60018201612901576129016128dc565b5060010190565b82815260408101610792602083018461270b565b808201808211156106df576106df6128dc56feed8d60e34876f751cc8b014c560745351147d9de11b9347c854e881b128ea600a164736f6c634300081b000a";

type ConfidentialWETHConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ConfidentialWETHConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ConfidentialWETH__factory extends ContractFactory {
  constructor(...args: ConfidentialWETHConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    owner: AddressLike,
    name: string,
    symbol: string,
    uri: string,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(
      owner,
      name,
      symbol,
      uri,
      overrides || {}
    );
  }
  override deploy(
    owner: AddressLike,
    name: string,
    symbol: string,
    uri: string,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(owner, name, symbol, uri, overrides || {}) as Promise<
      ConfidentialWETH & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): ConfidentialWETH__factory {
    return super.connect(runner) as ConfidentialWETH__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ConfidentialWETHInterface {
    return new Interface(_abi) as ConfidentialWETHInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): ConfidentialWETH {
    return new Contract(address, _abi, runner) as unknown as ConfidentialWETH;
  }
}
